%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: icml2014.dvi
%%CreationDate: Fri Jan 31 01:22:18 2014
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Times-Bold Times-Italic CMR10 CMMI10 CMMI7
%%+ CMEX10 CMSY10 CMR7 MSBM10 CMSY7 CMBX10 CMBX7 CMTI7 CMTI10 Helvetica
%%+ Courier CMR9
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips icml2014.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.01.31:0122
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: cmr9.pfb 0 0
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec

9B9C1569015F2C1D2BF560F4C0D52257BACDD6500ABDA5ED9835F6A016CFC8F00B6C052ED76A
87856B50F4D80DFAEB508C97F8281F3F88B17E4D3B90C0F65EC379791AACDC162A66CBBC5BE2
F53AAD8DE72DD113B55A022FBFEE658CB95F5BB32BA0357B5E050FDDF264A07470BEF1C52119
B6FBD5C77EBED964AC5A2BBEC9D8B3E48AE5BB003A63D545774B922B9D5FF6B0066ECE43645A
131879B032137D6D823385FE55F3402D557FD3B448685BDD20EB05D5E7C2126132E33A59A717
0609DCF4871A5D023C9EF57D3362D9F2D7A440BB69BF653364105F16F4D0F03582F9ACED3D05
CC76489B16E3FA8A446094D30038B06ECCEDA269F2EAB9D19A99C7F939F9548F206C5A457A19
270B2B82C43B091DFC5573468EAA3E7A4A32F8042891D85E4B180FCBCB3091D2800E54C87D84
CE9CAD6869B5AABBBE47F40C68799893D22B765295E1E69E33AA048B7ED98BA480CECA91F3EB
F8EF85FE9A3976909626B95AC5940D53F9B02215D84A44837BA25ED15CCE0D504F1D33506559
4F3BC8245405407591CCCB11CFD4645DA60D960C0B93F187B0CF7B105543C0B70F89AF5D264B
6C026E3AE646ACF145950202EC73282111E3E601CF2BCDE22CE3EDF6DB23516481420F26552F
F4472D749811F27768150450D0D0EBE3C79F999E99B5C0F22EAEBB12D97782B1BD91B2A1F62A
76412548AD53C0DD411D4A08C0F071C2C21863D9ADB75A4621803ECB84C2BB235B620B658984
B2D8E0C4637E2811BC8F0D046C8935AFC70141E1B2D9C23BDB251D304B3378FAF8928BD09686
AA0340FB0CB1DC48C996EF91530FF078666FAD227A3589F50B605267212D3A65EBC1019A8EEC
9A0739A00279471A01E1505C17658C10030FAE32F274FDC8C8774B0D5406C384A1D17068DCB0
C2575C562FDC5A2176609BAD9A2C255E426A4325A4FC3053C7B32F35F7BBC9AA50135F302233
60FA2FBF019294B1D29C5E2AA489FE860FE1A8795EA9F2098A92C845BC50220471AB711BA6E1
8C4AE211F10A172C60310C10FE9DF9EA1CFECAA5FEE0FC12063F8F48F26955F5809F8EF09DBF
7515C7EE361CE74828581752D0169CBD3A850793875694C551826A537F8F736C280C09106A42
A594173592AC22D8837B551670E96F78B71486427834F531C345F233ABE4153ACF5307CDC6BD
FBF55788BCF0826812EA3D220AE12D403B7185C3DCC1D211F1FEE7BC12A6B005E4EB8DFF9EA4
F388E39D6AC968CA08B6FDBD3221C01021D4559A396D424C14BA169501BE44275B5C72470C71
8DBB92EE844F7DB9A5938CB340443B5FD69C7F0318056D55AD66025179B49D484507E6E1D38C
9E3F20CA96B31EA1892C0E8B844938D9EA985DD202056BB54E7EB393147E7AB32B335EF1002E
4099909E199154CBA70736830E49AAA18482203E1DF6C36FC9E661B0D4B4E9935A30127A1771
ED815451983AFD8E6B9FDB0E7526D9566C2C9BCC5A4F8D8B69ABC257D12D97D2771FEB780A15
BE513B3740F4252534F0BCAA9C755E94AE61AA697BF689107C4FC5841E9DAB101F3B4C00DFEB
A79D50E74204835B872160AD3BD77E9CEAAE233C72DFC902BD16E457C7A53E665D60D6C87429
D3CFDD52E7850E490A5F133082D17220A3146C19F0FB45F99AB9A94180FA8E8B19DADF23DBD3
E2A099D533DC3DC0229415DEE606683EC67929805DF2288CFC116ECEE35BE81DFBED1A77044C
BBDB7FF8924D50763F9DF29B0D67A7105C455F8A853F80E58D25AD263D860F2E31ED1789C198
F2C9F71F8207C331E9A81CAD1759D93D65E6EC9F607F819C136C2642B192547CEB6AFA4B24CC
B316A9B16426BF862316154579CDCEA5AA8AB67E9C68717920124953D48C429E368FE62695A6
C755FE17963F4AD10EA11D1B043C73D03FECED825290C562041E819B81682CE89E3A8D712FE1
A882B312A5786DC2AA373B8C733A1D29C641DA4666D939DD2C1ADA11B9358C292205AC7AB478
7D14B38BB01AC9BA36540E3A2B9A1BE959BC5617EA85C2E67EE039578C98C94EA95FC8055EF0
DC155B19ECB1E540FF78D579E629350A957DD0E41EA444B2CF13A2FE054E8952E97D9E2B1EF4
9E63BF6AB23D3B1B208A2C030588B3B635BB798EBB1AF921F801B2711B301175CBA843307E7A
3140C30BA881D13A533415D46E4DAC4BC37BEC8055A79C6578EE31DC696301C41EEC06A93A4B
6F35B90D3B2D2B0CB23C7EC2BE8D09CE2C14425C1426458BB270284EC1C9389909CBCCEBEBEE
A168B102B92D40FAAB8D73B1D610C234705CB6349ACB167578E62B9FD886776A51B59138A33A
7B5A668427A8E86EF022BB8076C6BDAE83349F8C3B2FBC85DFD0E981926E25AC33983FE117DF
14B94B1B6A3A3D9C8AA229D5BD71DE6DC3C01DD803CCD3EC679B64A9FF6E2B4B78CD3D7FA85E
E7EB9E159F49CD814DF9C976F43A5974F66D7FC9BE938CA166FACD1F28F6564D3F7EAD59E5A6
3E6AB443366F74E543BCD4A23073AA56CF26B12BE2498BF0AABF534290F45FCDB10AECAF7E0B
8F124ACC5DCEBC60A1DD6F877C4F00F03DA11E2716DE7BDE52EC348EAEBDD3E2547051B80652
69BDA67E6A946D735863FD50919FE961DED54F53EB1D5DB088B3F7B2D5EDAD30A731A85E19C7
9B658F9D1E914E0189FAE214687B438B2858A0A660E2436ADD68ADFA8639B15694BBDBB74983
8ADEEAD0A53447B6C9C46623EE15FC6A66B014E70E29999AC5C51699039C6504F026DB30AF28
04DE56A155712CDE2F15B638F50C7BF4D3EDCF224C5825111A48CC34A8822C8315A17C1B5874
B2C115C2FA893AD13043DE08D2DFD2F9521AD7C36BE22C61DA5D422E1E9A29B3C555307020E1
29236C13257EA49F7494C5446A2BD8B9755566F68BE651E1E4BDCFD8136587B62DE3B79977D0
9BA18CB403E84DD8194586EFBAFCE53697EE87AA0615C3CA76DD1023E36343C390A145A1306A
D53D8932003D87263E5CF260AEA09EAC244FB41342ECB2F0C8F3D0E06DB67415034FAA24CD46
883A5A8DF7128DD4A21C4CF6E76DA7696AB66BAB62D31CE6B563899CB066E2135F5DA74050A7
7FD3808B550E477821B5B173F6585E3FB6CAD840F33606D65E2460E54FF603257735A6728F25
31F69440280766BE322DE460EEBC2583CF0A8801D13FA4F636A1EC35FE36B02AE7E7C23E32BC
0FC721A5F372B81EFBC8B58C3343CE67E34C1EFF8FBF229CE4F06321F1D580FC186505535989
25D7AD09C9B9DD3447A2DC614E1A7A330E0DE134CC469B2EDB8E31F9663D2BE685815F962AE9
B1CF51C8584062BEA53BDBDF52C5AFA07C0CAAC0C9F92F60CA7288DD7EBC53F61C0F670AD5CF
C5E35488BA9A8305A0253628B4357993933ACA122D43D5FE9B76E881E86C7AC2B4DD1C96B527
4BE5FD69289D9C37C95ABD38FAC01D7933458ACD06170BB1C87EF09BF45F75AFB40936611DC6
7F3A809F5E9D82286A7B157AB8CC8109733AD1DCFBB95E6CCBCD8CDA7B8FC2478419C8AD0A5E
51A274B11934F69C5FE4C9BA16A2CE0BCE57FB888368EC93AF6A1DEB09AD493BCFF8529A4D70
422E3ACCF3E2F8B0EB8293333BEFAF1C0733E29F4BF1D4080B2F32778997B07941B59DF460F9
B957D82EDD5596F9B110894123421FE8BBABA45C0D69A03A3432C02CA9768CF942AEEF860F40
0A3E837FF346F0066C4C92C35BCC3E207227AC924E7F9E282DED77CF4CF703F89282571D3FA2
A7218E75624E153AB91AC251D4B221A93BBD47DF57D70D8F95855CAC83EB021DE7BAFD06F550
803A21063A06AA03D5458F697CABCA2E5AE12692C7D118C15B8BC9B299E8207A555CFC2B419F
094198BD3F2F4F4EE78347415AC1559A224D8957F3B610A1E9FEC3DB3D4BEEAE4016C6950858
8C9CC5C7976966A4D9AD20AF67EABD911A85F2DFFE448AAA8F6A0B2568E393BFC7CFE93FFED7
861D8C455138DF1661CE4F8ED9EDB500CBE6DD745E43E209E81935CCC9F8CB75E49A3B2B1BF4
3A59B993B361FE0F8C3D80561F071F93F04A1865A3145981F1937053EBED55DFEB7E5B4A1532
C1004924D9214007D04B35C162A40CD23794F157FEE32C667DB378B42FA66C1365E95D770BAF
BA64FD7659806E42BB3E1A33E0FD213B6B3CACDF3CA24881B4DDF8E615B616A32C27F00E9A5A
4EF256BE36108F59CFDE91E473A9E403B675EE70AD5D165D2901EF28EF82D4FCFCD23FD51506
41044BBB61B5B74B4EA4D0ABEB2546100AD4620B589586E5FA6B8C3C825FF0DC811045F6AC1B
AC57EEAF487319917433495A956F4B0B4F2E113615CFC62DCC7D46ED424238187DFD734D090E
96C308A573E62E96FDE5BA3C8F0D2DFEA845B48C34558241299111CBF1114492F790D2808CAF
445FAC91499FF2F077B137C28FCE443ADCCCC1D5BEFBDEB8B64C452ACE58B96405C7244CAAE0
58897DE7AC76549BDBF2D541DF175355DABDC292B4DF85B9E7127F794E1D328161690B0D11CF
91DDE93C174288419871E8B7F0932BDAD96954FD1D955767D8CF3337C78FFBF8F7565E5FB755
E252D86FA101A3A7FB119ECB3A893E5372FFA1DDF431781162B15ADC845D6A81021EFEE6B91A
8E2267FDE73984FEBBA71AFE464F4A5FE5F908D06838D317F2230BFD733DAEA76A404ED4C55C
59F3D37D10F8D086E5590352D92EFAF0D94A15D6FF0E9B9942FCFAD9EBCEEE42BD47D627BE8B
DDD5A725E7893A62475DD24B4D9DB0738B5058A2A26A00D13006560C7F6D5C302CB6E6F9CBE3
CF58FB6C6405CD6137B938E7F16B07D0B1A6524A3D34735AE75528E8994D2C944D90BE3270EE
01D4C180989A1C6E0EF34691F0B168B33957DD1FE0E8F0B5D213CDE640D9490C8B68D8C7F88B
D1B1369CA8A8911C1A8E3EB64A640FDC7BCAF45B3CF69360B1265E16302CE6EE2DE6F872CB21
E4F6A2F232384B704F2F198F8603FBDA728B15A15C96F473E471F86663F25ED04CFEE32F3E1A
B4E2EB241D0E347A245F164198B1355F15E237E4D00FD36279DAA3B8F826ADF11F2E241C4FF0
8B7FF1F56E4E42312EB34C8F1DF5EA0F9C75BC377F8F3E842F09B1F0CE78FB0621DFBE87DBD6
B052B7BC67D66D9242CE2714D54DC5DA474D7EA79DED5A510304A77A96C790D0FBEEF2243E4A
3CFD2B393910C4039432ECF531099FDA34113DDF106E81DA407D901CA7CD99712B6AD589B1E0
E36E949D0ED0ECCC5CA3E435B33FE26315E88B04A29D1BC179EDCAE2DFAA32980A32D70CD55C
22AF4A15FAAC46AA19D0DE0A69A9D31F36388BDC7AC2572011DC394BBE8A602E0A0A870F6693
DD80FA1FDDF9142533B8C5E75CDED67879560FDC4098C34C856C3D35FDA7A161BAF08CC4CE54
C06C512B1DDF9955483CFB324E9B04BDDBAC1501A1C67491EF95D2548095D99959257582905E
824E26071733C83F3E84F44F7FB1F4549D3245D750C5F34953B152ADB57EB3BAD5FE23821781
FE2F256EA4EC2972243089AD1F7A001E1D9C2D680C1A2BEFDC23907EFDD645EF39C55A67A847
73F0E9F5F0D64109D12BB9DFF604333BD7555D5E3EFA5A14192E19E38496E1D42A55009ED6FE
53AD6979A1E56B5FF2C369686067097E6506B912CEF34F019FA6FA39AC99EB312B1B3AD02DE2
35C40C65E0D505D062C7133D39C03EBE4B75CA6FAB5D02B5CFFBAF537EB5C4A00AE18FC50E89
CBA3F7FA31FC6008C189665740A6048900BF94560F32AB5A34063822331D40B98524FDB23A25
650882399223C8F327370073BDA351D165847D2F0B1EB6545AFDC31FDD29324563F9335DEB05
7F4E1BC026F34FA9FDF0C94217250A08F5F8937C8C8C113FB126DA522B92FC8D70C5F04C6B17
24E1B2978A5054AC9B43307F1C173BC6B545DC68BDFBD5BB5FDFB340870B2D147120817DFE3A
8D382DAF3BAB1A53E85FE476B1306DBF540AF07C439A765CAC5DCA4AA6F4EB43B2F93C4985FB
269E0BAA5794D3C02217BA8AD52D8121ECBF0C3E806F91206E0EF43FF82F561400DC2AAD277F
C7665543C01C7E64AB886586A5BDA15C1AB6DD4E482475CC2E00DF1D355A49A1AC2E57CDF5BF
A64235E1B23A480D0CE94E656AC92B1A48F2D2DE0462CA1C7A5B5B4FC97E73A262E9F17B3732
38BC7C777DBC7B927ED471CEA8FC86E8547DEBF728216C750D460DA9FA857F92DE48A04C7C68
05FFB805DE8F03293D803941BDD89C1EFFACCDD6A9EE0AC1EDFEDE144FE786F50861D49FDB2D
089D24F98868FAC405264E4CAAB7B05696FD4D265764F8EA28B74E405AD12A4FAB428AF41756
5238C72F25390CDDA953D478B6E564DE04A596B6210362D0B3F37404CD7DE65081CBDD5F4989
436C4DFCDE6B238A4C20B3067F85DF8858A00CB8A4240F3CEDE461E82A44B6DA2AD6D494BE30
10B46E7F0B6DE9702B55BCFEED0DD89A1FA02F772F52F8B833BBB43EE2671F7E78057D2CEDCF
816C24EC3BE2DABD2E2E8A9BDDEE62478E432EE1BD71C7F79DFD10C1C184AD1499283D557ED2
84CA2A2AA7876D90F0C9655100966BEBF404A28E19130F38657F107F48F705BD9688EC2F68FA
DD38490FD9FFBE2113112EBE30598B9573BA39F1DDC2812A567352DCC3CDB54A677573407F69
91E22153318B0507B35736307C1D1377621543A0987F93E99198CC9B022A99BC5F5CA8FC0435
E723B2D84505E279BE7760FA38107631E82792DCCC71C3632904E220A16514BDB0080B84EB9C
74405BDB19EAC2574C0A7986A36C72961A55579950929C73489F0A07CB0E2A69367F86B2E5DF
88753AB8728DCB19FC80BB077805470C95A881EF657B842F00EF72D9FE3C754DA84AAA5E3799
041AC567D789FA6DB50C1B88C7CF4B5E39CDDF19CFBAE9225B46B0AA3B83F9B4E8D215AADD47
F2BE0794BBE4683FC3F5AE9301E7D16E3798E55B193A2AA1E0C2F61003CFD6E10BC7725693E2
705B323DE8434A2509293B278D71922F4BD432C2481BFEC17873B74205C5DE79B2C57F518F5F
D0F971A4EBEDE17E4A034C5EB5A33E2E0E03BD6F61BC7DE8EC3882A0FC885F020044D1AD7D7D
7E0DB4C425BAE04FCA6953B2BACBD9FB2AB7C015B72EDC5B05BDCDE08455769EC2A76E4A557E
CDE85DB30BAC84497B35BA2BC581CBB60112CE4DBB17D53A18EFEF227B049F3444CECCD0E788
0E36AEF24920A2F8EBA2BFC07E91F07F186A80E390BB49E786DA672CFAD2DF5CB7617614D6E8
65FA2BDFAB653CBBF6A617B1A3BDB61BB8750097E0CC6CC94EBD23438E0F8EFF3F12D4529523
BC5FBFDCCB4D4F29271182B3A848A7B55A46262A9BA3BA0FBFC983D136B8EC45F4D29476779B
93302C1DF35C73C87C1B340C661BC4984668326F7142227EAC1010273593C86198832C8D5594
AD30E3C90672B49EC8C3E25C98C065EF239C4F0AB97413E8726E7C0766906F4E70034FA98314
B9F3CEFC13E40F14A7883C4DC850EF4CC8D637613033D74CBBDB9837505E2894B9FB9B33E624
659BBBC22826E155D580EA8B9EF3EB27C070F619ED7EE7EC0AED05F45E5D9C4C6B6D6418E019
C81E49F18FA808C36E501CF9FCBE138E683F914B25AFAEF8E017A3E894271F01CC636FA29537
79A4B783773DA5DC3C70EA5D0178AE18BC3DA6A4267507029D47A552C7091F18E4A7900ADA98
73ED4D472FC0A9CBFC3B08A2AF391DB35093EB03A66A99499DD68A7D9D266EEA7CBF6268E81B
2ABA51B49A9869891E0435ACC6F9CE402AA1DE2A496EE5C1200FA4E2CA0AE893409347A21866
D32808C3B918F85CD4B412A3EE8668605860D74BF0F13CA4AA1D6DA673AF97CA5FE989E348A6
756E003CBE748AD34E0341006939E03D47182EFC7C45171D4E127FA471A934FD2C788C9202F3
0C7E2AF2C2D71F3A072A2A00A1A81AA55D8A546235ED9177492EEAA89647E6C3966FD7BFD46E
BFAE9EFCB7DF8BF03B1A4597E686967055BEA5F3B05F48D3CF37C33CE1C17B911353560CFBBF
0595C41CAAF024FEC83E4168239C22252F5992569B275B628C8CCA3229EA4AF64221CA6D62A8
84D636E0854A1B5E0B0307B6FCB3C6E6B0F887E516E132F88E1830C0801E0197B9CB76CD9A83
13BD3A7940D7C160DA3D9E67B5E89C9732C13F24CFEDCB7ECEEDF1BD323FB7BC5B3BFA8CCC5E
081FE114A5414472DAA4F889BF94B387979A8DBE36998C4D61FF3CF84FD9D492E91CB09D668E
DAC03C71CBF507E69A37C9C5884BE278EDBB604E7FA0A2B276CDA974571FDC0B645590723B6A
571263FFB8A211E84B27502AC775A91856D368D3E776F0050AFD4F39FA9C321E405356D060CA
26EA89021F48FBB183C9FFBA571D5E4326405C8B6EF0C0D7E8BEFB66B06E3329A4DE2DCB7957
E41BF1345AE0A40538A9EC7C063360A81B3DBB7ECD87D28666E59B105A5EDF2822B64C34CC48
DCCE38E4DC8D49E20025B3E3BAA8D798EC7ED6B1DAB67B87BB1CCC3C91390CE463CFC0FDF02A
DBF77DDA6E3E3F812BAF56D822FD081B68BF59DB3DCEC4FC052E92A653C5E399F749DAEBFD18
C9F20C0699E18E1BBE3E4275F2079E59587B4462B0D437B15CCABBD924AD25694782E0395D74
6991DE195D5CFAFFAA3BAC74AC86CF67B66EAE6B9604E796306096CD3DAF489AB2711270F5DE
B93097F45AC29DA4C7FB493DCF76A56278BCF2627F49ED20EB74852C00BECCF2FB1D69AD40DA
5ACC2FFC20551178F4860776CA2EAE54779374AF1CA3485F314969403B33F4C61C78FD76275E
D73A513B7E4FA4F2A9355C013E4A981D21FD319A54F139648244D6B05EFFF45D94394B0B5957
E33BDFA11CFB0EABCA6D8C69079452DBF6ED2C934F01C4FF3290A773EC24907B81CF658FDD4A
626F37AB3FD4B37F0CF439BFE461870029F5785B7E7CBAC4594DB8C51F8CF2EDEAA2E0190791
A0AD7E35CD2CC66D5F5152EACFF983E4A12D321C6B20AE605DBD8A323A53F92B6F5B0FF37D40
2D46A9BDEADCFB3530ABF0E0760C96658C914C4861016EDE63722F522AF61A888108DD9BBA4A
AB5B5C6C8FE89FF9A4ABD054AECA521F88D96A86FF7EFFB5179EF3FA6549F473A71F84F11E1D
C3AEC1719505D1E6B7DEAEB3CAC29972ACAB9B8770B53F5A6AC993C74921847D6A566BC96567
4B3BF7DAC1718854A47CDA8F89574D566EC01917C43BBDA54D50419918A84A3118093F990312
C37CB5D67A406142DCB578C810F27EE33034666D7DFBDAE9EC153B2889D38DE3D923778BD5B0
D6A00FE38E7C3794D29231BB0118F54253B7F10D9F245E2C884AA5EE365D5689BBAFD0B2C2F4
046C5703B5C01A2859D7E7716ED1DDFDFCFCCF00768061B060F48FE16496FEBDEF964227F0DC
7311892CA3F2605B59F2BA1242A882BA4E6A986B61CC4146D3AD1B4CEB6533319C47E7745834
FE9F46B9ECC7CDA3E283C7C5F744E55377DBE88763E48108A4A1E2DCCB57902E77EAA7C95E02
C654950E0644E329D2B7875722CD3E573C5ACCD5CE0CD66BAA840D0315D693A8BB275FB821A1
FAA9EC0EEF490578473B3705B327E41BE324B088F424E6BAEA36DC7CCBAD5D23B8C5E4A19A74
2685477C8363BC6A84B2065A1E02AF63D6C33555D5E6A8BFDFE07F2E86ACF69609B7898790FD
F53D8D5B9EBE7A33A5252EB71FFA81D8ADD80BC11004F725124BF3782DC99E76B702AC01E0A3
2E1BA317DEC909ED48094801C6B52B58BFE0B9498CDC28B83472DB91D3CAB55714E934E08BDC
5027D907EC675C94BE19185B62A8666A8777F139C58445FC70B18AB35D2E22C3B9824A38219E
CBADE61729037510BC840DB0E3D62C8A8F33CB124F12F71DE5CA918E3F593586251FA72E8D36
A992AE354423303EE1C2BF3D3D37E64EEC500B31ABE2188049EA48C93A1B99D9A82B2C813224
68560F23EACED62565F3301835E8F96335592C227169FE2ADAA1F7D8D6474118F9E00FF26D63
0F86DC9509E021A59DA152198979190F2BD180AF8E82ECDB204D9A2FA51B182A84E958929F18
3DBD8BE6575D4C13943F00ACA12C2EA603B107D15DD7401CBD5FE46413BF16F99DC7618DC526
EB041DFA841D964A6B5B438C1470EADB68FE4E97D4896395C893EF7177C2909DD9BD8AE8F25C
1A71A6FB7F9EE515715F4361E0B01E6130EB3506E926475F4F1A8B7E162EDEE25286E7565448
9CCE65A80C54B46C6EEC990A8F5006697FEC8CAC1DC79B6420501A66146EC648E49F5A1A9739
25E1F4FE865EBDF350D841DA96C3FF7D9955A9F4C3B2991409A50185E20FE5FE331E569CA978
6925306020833F9F304C9780E8A142617A0B4758AF5BF73F9DBEC6B0F3DCA36648CEE09C08B8
E23147681BE470A753DB32E84089D2AF3BE64B9C242182B4AE759EDC6CBF43E5825DD2E86EDA
6686D6C45D769BCE34EA05E61188E4491FD136CEA5AED10E228E44CFCC461B507D2DA03A10F8
80341D2F0DBC12F8CEBF0A89F1587E249E6D2089C8DE18CFD1BD691EFA55C66C71076094679B
46875C78397C0081075EB45DB6DDB519D685E98C44A1CED29E29EFDEFF2B76137F55E1B585EB
84B8AF5AFAA54DA43001FFD88A84747777A7FCDE41025E6BE63F0CC91B97256903DE43D3BC5E
9CC0572D9DE3D185579310E93D6775FB33EFD1838B2214EB2332C1AACB0EF116106867A359A4
A69297B6735176FC07FCDF7DFAD6C9009F87C21B3181796941C2CDF8A2AC2EAD7A70143D8B69
29E1E36AE6C45035762DC43EB810A2CC0DF7A826376E9C08D7BB38360E0FC2B60B6ADCF4D560
99D954C5436B4F9C2D15F8429BA4792810FB13E7DC39BAFC1912E1BAAD45F6AB0327A5D93FDB
9D947185FD936229E4C99280878D91E2018979B583FAFAA33D5D4730D57FA680922D28B12D7A
F720A080207D4EB4A10DFBF3F77CA336D3A12326A5C3F710AEE63F2767C2074199C9E2CA8851
7E46D019A8B4F880BB6D5745C168AA0492B7569DB707675D485067F313A2E1F56F7A2C93CF03
3FBFEE635AD06C6CCABECB5CC777CF274E2A3A7EB96D0B28C928C59E77FB3BE301647EB377C8
D2E0B57B647F2B7E7B01F44519A3C561F7CE84121093BDE4F9E799B0923608EA9CED23E03F5A
4DD1425D2E6219AD8E1388C46027483931FBE864FCCE49934BE30DE22AAB04C6BB453D52C95B
5683CA29C73281333A4E2424B3BAB34AD8AB8270327CEFDFCDC4E63B3BC7068692BD663ADCB0
2C7BA09EACDEC25FD07D2E236E299EE0F9290E5B8B7F8862FDBD81710468818674C2BF94050D
C77B479F6FBD83EB939BE411711746229018421BABBEC891DAB8C00BD15602A2236927BAE40C
057B88F3834E2582F77DF3EE0F387F6DBB23282F887956D01F183D73DC0B074A81432EC813F4
ECF07EC8C51620EB7B796C22481284FBDCF26505CC200BC1D73821A5A8E3975D9E76FE594528
F2391911403CFD4993A2CDBF6011E304A858165C6BC439CAEC6723792A78F565BABC47D48B98
FFF4CD726C9F35FE3FCE4B2955EDB611F0EDF6893D904B2855E468EFBA52BE7BFAC6867ED7CE
7C226CBFDF2A4B8A545209294FD58C883FF1398D24800CD1823500B0FD98B99E6D24F11282AD
35FE21D97826B3CBAE293C191D5107185A620CE3F30F04C540C9F39C1BF0F9F59FCCA1D06558
B0A01B33308DD3B9EB11E881B9A8E317682DC53BD91D7A984A751AFBC2548DCD4CF62B12414A
CEAE7FE31A084CF7C809AB5EDA0D7A65A4E1552DD3F620AF1BDFA235B908FD2A56A9D316C262
3812C7967FB7E21330D3E3F4788D58F08DC1266107842337EDA9D915307DF3605168D3456D40
048E36016250CF994AB7ED3343053B638E58C462B99EB88F1543FEB8E8DEEDCFD096D82A8DCF
6F978ADBC77DC4DC1C5EBD1783A1BDE71D6F1658E1BDFF1E8FCCDEB0B9CEF930421519D60C98
96906A79C2E5207D6629DBF4A14863F7A9B8CF3CD8447B92004F29092F1ACF42045240EFEE4A
70D69F5858647C686CBD317881C53E59795B32757FC33BF15AEF5A830BBA62DB8C42D1153FA8
DDF7ED7B9849A2080933EE4CEAA4327C2320CFFB858328E2A936A58D8A94D334B463A9BDC35A
364A0DD0CAD4BEA0AD9B7366DD984AA3AE74C823BC32EB265A7B5D122834BB53DE3A37B414B0
3320129D8F7B78E59D3459758F40D049FDAE7588828EA1218D828DE318648BA0E0A414DAF43E
227CEC67E9E0DD502D9A7925D5A2281701DC636BF79362B724FD93FC64BE8BA63CAA4D750113
25B3C0C20F8DECD8C325688493F3347A71309482A2613B5048E06FA6AD50C6D0C615390DD3F6
F0F549C333D1654BDD3E372D3970FB9880D15A2D922E86002A98807F68491D29B1341E562B56
5C220B70F0239538551C3CB40BD1B45061205A60E3345BBA21500E8B869533EB266C31BE4FF8
4F42F0CC5D8B178B67BBE7CF357199A32F94C1E8EF8CD65515262B29464BCEE3A93491DC134F
97BE64FB222F15356C11586C7DAC7B2529B6B6246A028AAE3BC08800567F633080963BE6CA8E
CC8D7385670D9DA59CC3E33253630AB01D3D5FA4DFE77523D2CEC4A5DC8DC62D1515BD78E719
2C5C1C2199DE7876E36BD6FCC3C27AE577A72247C807EFDC6635FD80081B8CC78498002EB78D
FB2B4A13B3D1DB8E6315891915F445E046ADF168358F713B4358FDE076907DC9FD86A86E3E27
1656E9C6D24BAC96C6D400F4A931750F9A4E753F1572E069B4D6F435D63EC1E8B223DE713CF9
6A40F3745543B8A9789DADD2493FB1738F06F3F35E4C295AC740A44557DA6E74F26A23750FF9
D51E053EDBCF2CC30D9B6DDBAF684AF9D0EF7A14C4EB101DD6F84C3D7047C32293407103A660
DEDEFE02EC9869C2FF2C0ED1CFC46A73F879AA6BB207007C76FA776098139F84B4A0D28C3AD6
D500517AB58BDF672C24AC6979967698B28193C40B10E6EA1A3705B6FD1C1C2FB3813B3287F0
D46B922673275C63C1A7126A84605D0AB5701C88FEDC467328998A8564FCD953C31C7EA2B668
AFFF9872F86DE95F3BB1D9DD6FA033AB0B8E903AF01DF2E6B060E3D5116379676EFF7CC5899A
ECBFC89A0D7FF73E46174F1E452A79E36353595A22493FB7D98AFC04549860F0AEA927653A7D
B1AC86542502FBC7357314CA668F66E7E44A33F60820FA1F53E4BDBC448FCEB4D685FDB06978
8D870B203BB18C18C8970A3513232662E92B1E5B126390AEAF1177BBF1EDEB55A1DCA43B4572
3C9E8789EF056EDCE4FBBF73BB37C90FADF5105312E67F467F0C0BD42FFD8E5643895A5BDDAC
12557707FB82AFF8DC9813D0B931B3E7513829E0BE3FBE342A6A3786F2656FE68299968ABE35
5CF4FA53DA08F6745130336F5AB56DC6549EEEF1F579F0060298737DEC827AB7ED5D627BF7B9
D8EF165A429BEA10A1C2ACE4C668730912EDA9F75D17E215827042E1FEF5D72E643C1BCE5E61
F8ACA43381FE6FF1E736654D11FBA39EC251D69CC3C5B7D9145ADDF5CCFA6DEAC18D4B9F43E5
2F3B660A34610761E9937051AF51707581ED226DF239F8F7C735B4FE3D9B251EDA1C9BE2FE14
D603BC91B22CABD7384D9DD8477F66983042D99C911B14DC0372C8350B3BB1BA4199BE157A08
DDFACB5BD368BFAD813A05890B8BDBFEC778301DA6CDC7FC67B9300448505B7BCEA5C1F4A06D
0D39C12DFB649412827813FEC978530C5CE020507B08F90FFFCAC19B3E7B7474ACC6F4BA357D
974D0B5D5F4C5FDFA899F1895595A51FD2590F0DCF52CB5B5A01DCB94589900AACF23887A182
4C95295BC28EB912FC8512CF1465B7D1469AB94C104C1C1A57F22300CB9A151B7E7431080FC9
38868B5A7177569212C1EA0D185CDA5503D592DD781386F619661A4C1DF9D9082F44115BF318
5419473A1A786138E344C49842AD159E143D671BE1F224E06E71B5E14385F7DB7EB083F8D3F4
CB8B3FBAC22CA88025F8CA84BDF31FEB9D0A5A379B8637E4E60A5875860945AE85A04D731C6B
C9F4EA2DFC84A4AED87C6A3FE4DA0578A82895D643D64A99FBE989CCC2ED431464F919B89916
730868A3DFE6DB998131E15171E39AE509521D4029384D68D6629424FF243B8F3573B1656A89
38F21E0FF51702A24DCA86CDB87FFABFD07E23245E6A0522B15B8B7F02B32AC81559471C6032
CB63B5C2AD350F1E60713B798178FCC159EB02B5C033EE36F3D760C469AF012503AFD3E4BE8C
85403DEEEA0F9862A1DA3BA9BB4BCC3CF4DDEE1D7EDAD994C790284ED6AD9DE0C6E6A73812AE
1A9295782ED743777A549B6A99C55DE9CFD50D98B8ED95A54D9E9516A5976D8BC3AEE24FCA52
52FE4D75EC8F2D9AA34BF988384A3A9F86B1C55B6B38519CCCFF89B7CD0165DDF9B5141C173A
8539C8DADABDD4786452A37B2245C925A0CE6277C5A66B8EA55533009535DD1A456057D5EA3B
64384D89BCA81F7467518138B5A24670CDDBCDFD5F392208917853858A8EE9A5B4F2AC060ECC
9A0CE34EF5CA812E15E10328D5234D087E80AB369529DDADA470AEB75555C584C7F68C300CBA
69CC30169760947DCBD0382E4F2C68BE14CE1C521440AC192F1016EAA233A23FF59BBE98DB9A
6FD16AC25576AAFB7CD417033A9A43F42DA250D9AB53E96AC10849C36348ED4B59B9E758FF89
7630E8AF3746394C15FC94E1FC0FEB30EFA61C962E2380EA0479C6F3521634B91718CA44027E
69D235ACB2DC0F45349AF9A4F7BE58056F6B574AFE364128C0AFE227231D0AA97D45E01914EB
2EDA018807B73BEEEC8BE2CD1414E898A47267F4C649B326D097152A984B0492C9F42059BFFE
6189AE83031808223BE65067437D7A89445245F7C6F5F61D87B86D5F3B40F9261EC3E142F495
F1B199F30A13BA2AC6770B7C73D3A333090E267D3B127103A680DA1A00B0C148F9D000CB3011
0292FBDB1FAD386C862D5A3594A31DDD421C680A83FF41FA03E2B32CF3D0FE3086EF12DF80E7
B5EACB2ED8CF1857A00DF3EEA3510F49D6F7540EC0BD08625250DF8A3B2F3A160C0A0035DFB3
4B7E960550C5C040F0AD461A407AAA9AA7877A23CF99551FDAFF32B82FC87BDBD86A6CC9C63D
F6EB8BFCFF2C1E8A3B57BE35C0AC602F7B4F3A8CB8CE62253AEC186B1BDC8320D5099180527E
1CFC40F7398454B9CBFC5BA0B421F55DEDAB33CFCA11217608763D23685E1530D0FA1AABD091
AC9A6867DDE46A733712CEF63B46E29FF70E9210224E0964FBC56A9AE0F600F720F81C7060E0
16ACBC1BF97C16F26255BC4D82538BE080D37774642CD4D4C95B3BECC85E32D182BE7A1F450E
F077500EC91B21C383E71F9B6690C0616457CD8768916022279A6BEF4589A85732149014F067
746C3FB95DDCBA28C7F0DE2C81926DAE7967A387A06DC62A82F813230BF1F2854E214984001D
0BD4A7F8E778CBBDD88D702863FC3C8593255627F352DD3327EE291A31F3DF409F108DEBA842
3116CAD62EE04D8CA8CECC16B8802F698FC2939E3898771FD932799B54705A481C652314C8B6
4BBCC883296CE238804F68346FCA2F20EEDEB4B9986B470B84CFC07984D5A1E896790B854B5F
21BEF81262E1E32B949AA9EEE6BF20B9141C890A41081868E83E5780B54A456D1D5F21198126
93DA3BCC8C88D6DE832717BCBCEF1ABF462E949A415839B98D91DEF040B43D7B1F174EC74506
262F04F1E599CD6B01D8B5902C029C97487A1E05F84DF9D42FB47DE21F59F91B78BD16DD9FF2
087D1A73C0C58D4C9C53F64A8E2A076D763B581AAC565E34B05368A456F52D64528EF327ACDB
4AB6263C1561EDABAA3032EAD94A6FB956F24C2E18B6A8A47BADA39A20BA4BC035CB8408844A
1CFB7E4107DA5FF66C307CCC01B93DF8D99FAA99DA5F3719FB26C2F214F18494BD92F9B6DB1A
F2DD492330615C3BE70D6F3E2E77DC8348D16339CAFDBB96A90436D2ADC86A1864B5C2F4809D
01717A052BD791C092D600B1E2F6A24A21E13138621461A3BBDB4EE06D880B477DEE907B0928
A154AFC2716865D8F751C398BA65E70F325089882018E0CC5CF735ED15428F074C17AFA559FB
3E94D43340136BEBAA8E47C773DE6C28D54B3ED9FDE6622924159135D49490EA90A7D91BB08C
4345C0AE3FA4A1461422EAFF8E9C49329AADF6342B7D55FC513821DEB5E2DFBB36413E954E39
F5A24B3C974839BEB97250F1566F7A7F2F9F603D2A5E43CEF4AE5B0BAED2B6304461E8C16A7E
F458E6542E7F8933E6C253341874867965489527C80260E254411265EF559A5CD9E25F6CA0CF
EF2DDD2DDDF07653B9A0FC6066903189D076F485EF03D52D14D676406AE2CBF46E818D964607
759091C5B0EC784AAAB7BE495FD20876E11547DBD9CB02508BAFFE62D3DE7F5AB79A2C94318F
E16574406E7933D4FB8FBEA0DCCFD1553BFF56B1E04BBDA2B43B71A77DEB8B445E74C574D7C5
B530BB312EA0EE227242D4FCA0CD13FD056E30433DFABDCCF6274BC85B3968AEDD85E3ACA8CC
017B8077C0991C4C83490F5C59F3F383C6C7BF0A7DB9C4F8D76CD146E3F80D4DB44ED37674B9
0091E05114257103902A9966F75DDD14A0B7EF5711A429BE60E378A89C7E1B8AEFBA049AB1DE
59D36A037AA41592DC56E731E911BD486FC06B17D66074FD7332452EE69FB9909D8D1B245E8B
7C3A4061F3D2DDB055CB9C8BD2BD1BF13C2239E90D9581A323E8CE5865162AAE002F29A05989
938C8F78C781EB5EE467854052B9B520E9B518FEEA9DE7B9D1D4D13FA85892105E383924EAF5
C7634E06F9590E1661C0D12F3F867AFCA1A8E34D8F2D7FAFDF87D345D914E3065430E84FD70A
DF71630C6C836BCDBAD5AA6A1E7C73F3DCCEB4E351C1B3CF348EDC47E8E1E27EA2CFC2B3E7C0
BB3F7AFB557D158D820FB815B8FE1DBEBDABC179B0914064845C90D2710D506D17729D57F2CE
A990A49176E3A3A128137DFA6AB814A9B4F544E290BCD8A13E92D4EEA56889B0D2B58C50A02A
D9508365881471FA7FF4C028704100F45BA347F8F62B3B8C827C2B19002F712D68AF8BD7A167
E6B9D53BE6F44496E5B00C8458C2A15B90BFEC6E5FA5ED5743F4E607B93EAB75FCAE34A6B163
D919B80C7E62B1E119BFA65520E2D7B78DAE89E34E0A3D7069EFD1B7D69B7396E741C1E81015
710F743D2707A8324FEBCF46DA37F1D4A26A62DDFBD03D93F13144296D728EEE912243F8E8F3
83042C51E48CA1A5FB757E6673CD599BE052BE15E9809F4B1C1373F0781963B39763DC4B3473
0936DEADE5501C429D265002A4A280A1B7FBECDD6FAD9518BC26D0886314E2C3DDFC5405FDAD
8FA9B0FBD53863AD59BAF1B0BC6ED0ECB34B7EDE368A1825A896AC132D4A3B598989677BA608
A26F6B35E46ACF78CC959F94787027C7509F8E8248B32A68F75A5E14E2118DDA7A3861C3944C
88C198012E811C71D94A3FDF8DE7E842A1662088B4C014CA1C29BBE58A46A8CD7E82E277E8B9
EA73F75E0BEBEFFFE0A2737F200CF05A697210847EDCB1CE17CAAE782554D57C2C5F206893B1
49ED59028707595032EA8BCE284A9B409C69C2EE9ADF0CF13035A1AE3084B58557EFA596B273
DD7582EAA8153DE775B991C27124F684617F45CE264F3749BF05DA720BEC48277BDE7320CE97
B39317D2D88CDF1967D50496CCAAA99D341E448160DA81DB763F8D721324608E9E13E7B92318
22C669F6F7472350FD411BB2874935232E47CF8BE653C8DEB6CF00AD9367CD80B674DC67709C
8317CAF2D618170F99155E2BEE988A972FD99F28AE1990B5C8234721ED0B5B05BB714E2F84D7
056CF0D2B0C46E1823163BDFD90642CE898A92016C9D05FFF063E7B4B489C6C452CC7467E64A
59978C6F82DCB872D322ECEA7BF2DA6187D78F27E4A1A9FAF3626554BC5CE69DA195CA0837E3
A44AFCE6F55C2F540D6B9551CEE083F75155E978CD5BD4782C24EF20DFDEA82E66527304EA74
CDC79B59B7DBBD262A2B37841AB3726D24F9E2E12325A22EFB884127CD3028C8CF819B23CC90
8878190F8436AC1934F3478EA966708280EEAE8E35A31D5AEA2AE696258DCF952E53307138A4
5F54E38566784A07B07B77E170B04BE12772D72D31C58107360F403BC991689A984F5A2C9B93
7EFE72A267F1547B7CC477FE414D754EF566495D9C13C90FE4C87963011B0C0BDFF6A7179FCF
5DACA0E475A9BAD39E7325C238E0FD9185DF54465F976DD68B43B057399526DC8C7383FEF16B
AE73E89CA2A5F55B6EFA49DB81D19712DE1E5BF9C7B4536AA3F01B1EFD1AB3E356C2C27C915B
9B795780DA39875DE71F836EC0EA0DB3493C17817F07D34FFF52C4879DEBD510088A0A95D1BF
B06ECEF3524488FAB2F01A5DCEDA2F1C17BD611DF5455CD09AD5712144CFF92037EA80CF0058
6543E8B40FFDD9A9E34CDF450D4573A9B279DB0A3AA8F17CA50E0881F8C31F681D55D6641807
A08844309A7E40DA8FB21B1B409B2093275865E0375D7D5F9A9641C2BFD25DA3B7247A8B4724
4B1BEB930202A9622A7636296B10846CD78FB8CB04C7BE4BD3E74DFC7627165FAA80DB2AFFA8
914804A91824243A59B76CED9648D12B47CE8950BF760D865136ADD4F83C7CEC9CD730416E71
01404019522B641F0A4DD1CBF7F9166180FD9232D94248D2ECF149A1F6FAF7F7CAF0FF409079
10DD32C559476F6B0DF68DCC97716F82BA617DD0CD2C9D147A621200CC26A7A768796283BD30
65AB4F569933788C17BC564568019D169E5E43D0E46C6CCDB11B36D5FF56B54786EA1FF68A98
E8DD16F41B2B224D906F09A4347C58278F0F151AE45D1144D05E2519DF446795ABD09BA61531
F93553D6305F228E82C1F28A76DB47A8BECC7755717952FB5506E4F26AE8882F6AE8F17AE34F
B80CF2B0D0D99DBA2AEB9221F82155E9F666C5F1709D17049A2E2AFC05CFA9779D10F7AAD03F
E76F78A57B1C4D844262F5A889802360BB50C3949FF9AF199DEBF95BD5D0A4B13B8663442C92
DF829C65654C4A85DA8E9CA7224DED598801EB8019E78994A5C70980B1BD09F3B255979194E6
1DBA6513B5B6288048A9E93DAB48AF7070FBE494A1DDAA087B2278045AA9C5E747A5D49AFA72
D0BF8BCE89F182905973FBA60C5F65C079E143B0D3DAC6E774F5B298A18CB11AF493BBE2D783
51B4688BCEDCC6A897797CF30DB8B600A5D5DEB6294E0EEBCB34523E28BBCFECA8C3B467747D
F85BEB5127DAF911375335C5D8B3F065B1B5D6D6FEE564D88B56897A635822C09C999BCF91AD
E7143F09F61ACC8C1553B5BC2C9A2CE6F86AA616A89808846FD1A2986D6D82013F1A2B962EA8
1A418EB77062B721C0A87927E26358378EFC5E75256842F692121D4C5DB323DD87DE40C507CA
C183F305418C1C4967C2114A28B5B3DA494C01F66AD78438FBE9CB77059574FEF5409FBB77B9
428355422F16E9DAD5AA5FD0181668A4C896D3A5AFF24C7DBBBB88DAF95FCAA95B270E519F2A
8729D013A5775CAB79E656BC515BFCF9054154D0C12C2D056DD947D24F553F40DD7052F4287E
3F0FB30E89190444CC52286959AC984345B11859DAFF089FBFA03D6111DF78DD4393324A5379
71925FFD6697C14A5A1971613124B13EA20FF1086986DCF54BD6460AE956BA5C3565E43F8DF3
5AF79C637FCD39C1361CE296612CFA01750180E7857BBDE7DB8F6EC757D71912328E41A69650
271C5380931EA0B6B5227D9094679D69F04C2EB2B406338ED59ADE317E80198D3CD722B0458F
0A9274087325380B7E0047196CDDC363D161A49E7EE0F262C3CD9CCF88D279953A6FB0C3CB67
390EE89BCBEEE246D321E076AB59B8D3C25CC90DDAAE731D19B43FBAD97A7A97BC21DF4FE65F
673753FE06D633D156E57D1E87433ED1660EE8C34FBD3B2A83EC5E88F98A6F45415EDB555880
AFEFABF11EBCDDF9DC0F6045BC18B24534BED2DED3A5FD0769F16C521A7F1EDDB0D51776B482
DE96C8FD119A03D63FD475D7CEF48C854D079AE0D10A96F51171437C565FEF88AE1831C7D56C
5FB2B184A882200DDDCF0552EE7E809DE45FBAC8777BEAD89958DAAC04BF6142C21191EDE23C
C7710950472EA107C0EADAF87CB88F7FF9D1ED061A7CE67DE329DE30613DE5A30EC6E46778BD
BA41C95CB9285908705E47E9B52F3F570F17B0190D33AD6F8F3255A2C499E81AB148ED7A3745
B0B8FD74133ED7270CD24B33FDBF49E6BEB88E1203537A40FC6D1D3C545C75C7E42663CE5C71
8BECA455EFAEA50D18E57FFE96F76452B2FE6FD147AD36A88D6DBDE307AA7A0DA0DD21986A79
2396784F604A84C06EFC40765FAAED39756917635C582A8736D875D7F33ED344E7893BBCAC47
176555E4A11AD404D1318A778D924FA726A50F4E114C29E44E9AC842060310285BCB78ED2087
876CC115C0F837A4EBA53F07ED6594A932EAFF40ED42D7B313B99BBC8B10283E8FF683BC93D2
BE4D2F370F0D2B14E6EF4832FD47CE536FD40E8CCEA442C6956D2C4780423BCEB9680280F132
FB93670919B643F49F05F205F90EA3091620E48699D55EF35EA51397422E16BBE79776C222FF
DD5A2E5401435CE0A3690EBA317A8B3469CC19EE0CEEE20DDCA91CC41AEC64E4B483122B1BB0
1B67333B7E1F39D808F44179CA3042A87DE4649EB1CFD5A5E8231D08221E2C79CCDAA4267789
3C6417F47C0DB97D8ADAAF7266DCF9011AF7D71CCD8092FC994BD639D80A019714073F3C7EE7
769056DD117FC021A40DD98DFB115A596CDC0EC9AA9C8F14EFD96B98EF64F1A9430D8DEC60A8
B4F20E696B812DD9C0EAF3259B69097C81EE43F9546FEE7A556A26F0E1ED927455A1BA0CA65D
1148A2974516E79B04EE02DAE02A211DCC88C5F8965BFAE5BE65A25494BBF7C23CEC8115B1CE
2FAA0CBA14D99605A24F14BE129F80C806CD9C5273AFD406AE758B0FA5F81C0F2D7CBBC2B0CF
D30F525E35D937D4423B2E0FB8C83930A38D1620F12068CF098E459E8E970EBB0C44B74305A4
01DC449EB227B665445CA242D42B8F73667B2BA0C7BC356BD5C80FCADC2256CB2D0BCE609ADB
60A22CFED22A5DA1F53A3B7E9535712031C472D34CF2F771520CDBCF9A3A5E878A47B909B794
91A2D0F2A370957E4B1B3A516A3A4BF0F431BA695339E0EAC940FFC9D93729D07318D6C8EB49
0CD8C923415A811C9F78B6E5C66601C552500012144B793BD0128E0CDF6360EA70FC83633CEA
5E962E14AED5633D2ABDD5A1283EF893CFD1BCF6278095C3075A4E03F6738772437BC1F45994
9F5A14BB014BC909E3551EF70B61430E7EB9C0DA2FB9274F399560B6BC1C754D8A770598062F
409FB7D1165DDD2356D506E7D1D868847BC0D4F8482C99CD1D4D460B51F30BA5EB7CED25F56A
001C0AFA884C8A65E241EB72DCEA5DADBEDC6D761B24B5789EE8404529CBADA729159B5B1158
91AFC097F3A3061606AC8BC1E54649579F65F8B5081CA530F51CB230EE59C1E065EEE4F23B83
D6CC89F0FD0420F8A76E224491100E9C420008C8E5CDB9F76FC5218AFBD4E8000D47EB6D42DB
69C07A4609410B28BDE1CE27CA80AD1FDF6D18ABC7E15D8EAA112DB8444495DF49C309FB63A4
6647F73A5FCDB9DBDDD2F6E5CB19826D7309C1DC3F2ADADF2E9526C6FA3B1520BBD7D1B27E4D
BF70D32F827FA36FAA710F342373C3A1954F5EADE197609809555808C004C8791AD8B0307C33
44C93D35B9709B2016E8859FEF495859161F17D49C56DBA5E32300C080B7DB9D40B597D9626B
2A042BFDD249343DFFAA6D96B585D127D4A6304AED5A8CB39720380DC175C17066FD39CD20C8
35DD3E87EB3AF936CE1A6F953351A49A8160B22B2BA09000ABBE2FF305FF77326D080EA35CE7
D924BEEC365A1B0E37F194F3E796810A4039657BD35F21EDA3FF80089C2E3B2A4FF40A7C0685
8E45FBB7426A1FFE0DBF2855DE7941F616850FC0F3A9273DC2D40DD60ED28C6A6F7C4E684A8F
B224FA1A52F4F733529A7F3CD3B672A37C9D1F6C00DEAD801078EF12EDCB63CAE750B82ACF26
DF9650CD502727EBED366E00A1E6EA351119CCC68DBD3E1AE37636E897E964A5EEE0F4E892AF
88CE18FCAED77CBFECF9216AF5FFBFA35B0181025760CD6920A3732BAFF7ACCB611710F2F389
CAB8C1A5AF75F82CE7C8DFAF55FB6FEA658D706BBFD8C2A979BF79DE4DBC69DF204769719440
2274A8D6B61503BE576AC61D64995B9A4E5B2CE5B41C70219E0CD4A42715009B8AB11CC681CF
501744A54F64C35248A0A5063CF725CED14BA757525E5BA7F959D0CC1918A21AE242293EA7C6
57D0B1BF860BF3A994EF414D457EAB682AD8A4E0C859B6B0C7FB74E1AE202AC7011F35B1E104
44734F4C04BFFFC35A36A2F856CA4BAA9B0A885DEB9068F2E635B68411BC397509EF8211128F
CE9FB991CE287347F06080083E34E61D6266D9FA96DBD1DDB48040FC1B99BEFA11CEDDD479F4
DBB987236B4C5C41C536F464CFA43B3C2751D2114DCA8C6B75987C326FF5F5859A20CF68FE61
264D3D19C3EF7A88C66EE455F1B85F570BE50903F0171A46FEFA4DBC8F62EE9383B585DC0D53
F6E249F469C631099098E3391E8B432E739BA60EDB0B28205F4F6F306A70D16C149BFCA8565D
1141BC191D12B029D4A97DFD41A10B2A3BF0E7E3E56ACD867CEA04B85C5F7462262DBAF7BB8A
413DA70DC3D5CAE2C3F3568FA52081447B8F3F7F2C608F9D89156C427136A060323A8779A18D
CBFA6D21DC08116BB1AC5966900095176900CF3C35323F45CA4DF4BEC4CE8B9E5183847070F3
FE8EC37EC98365AA6F3353E68E1B371CFCA937C5F3628D85EA35615239402340C3DA703F7A18
1961AC2AE63CBE7B7A99322B1F73AF2334B569F9597A2426AA02A36CCE40415392F382B26449
592723D2C7DEF0CDC39773062E13741536AAAD929A35F698A226342E624449AD2534973BC1E9
B2F8E875B881AC7B061A8FD8893DD399F1AF00E30153B6285C0B591135FD1FEC0425CE1B2C86
AC0378FA29D7FD7668A4C766CD922FAE0CCA3EF7481DF2AF98C4E204940B03C24CDC6732C548
6B0FA2C312C041D0A97F51E47AA0DD96CC60F96FFE1F37EE54C835BF34C20EE115378CB582E3
6ED4FB2DEDC45F06D0AFBA2098C71A914E8A2BCC30701765B9E1F4825715C6328677776A6EEC
B1674BEBC1EBBE955CC6E0DF92BF67B4A62AFB52A90318ED69347CDA22339AA374C8C7D6DD69
FE9A3460D7368295FAAE607CF34E7FF41FEFB7650B5CFB4F7B5DED38A73C005B6D21124F9CA9
012286398270B0A1C18E7CEA3C5116E89EE7751CF42D4E4CBDDEF49D1DA91F0132CE636E4F96
FA40EB20392338F5D2F1F3B15C44D23B62CDC36F804005A06DB79B70964B48D8B1D859664000
611D5FADC7CE699BCF030EA53D1ADA7A87D2A6B64ED5A107165F80EC60051D1DC85666E50BAD
862D961589E379A48D51B7B69336B5CC155C732B14BEF3A01003732D7BF05109D01A2202748E
C305FD6B7DF421912EB377B99C49FF565C88EBF56C7782BC0D3DB5C634EC0508D9194B09B98C
E0E43BB9A6EA2DC02BEF2CF3179AC90F7F45FF6AEEA1C6C7C8CCFAEA5A4E8487EB470D9DE00D
055AA2AA0ABB5B22CE3D96B2D422352747E1BF64C39FF9E1F51D404CE4339BBF79D2EF1B2486
01B02F863456EEFD02BA5A1C7F97F860D4294D8C85560DD2D29C2167BC2208F9F50259EDEFE5
8CFDAB9722039D2493AFC7D71E714B886B2DB7E2A6820CD5642FF72FB47D20A8F45E4458880F
FB30FCCB6ACA8048E5914F6256A439188E004A6DAD74DA2C6499B63A7852684DD3BFF34084F1
DDE62B6EEE0A0F33C89B90E42E55A285CABDCFE6280929DFB9EAEB9B04AEF296C7A9381054BC
2E6DA960D32E848C9C40E28670E255121A0C5B17CC9FEDEB5EE0126360C134440F9632903200
7BCBD32AEFA3E271CE3A8947784CA6B20CB07ABF83CD0B29DF54D69E2C072F939DFB7A7E5B8C
6C8354758CA5D33AB9D61C77EA562642ED8388F2F84E3733F13787AE7D1089AD08984DB6958E
65DC5D02572816E696AB3FB9D95A9F64D7AA7A62B3D54D152394D6598431B8BE651435152BDB
D687DF6330ABB0B451BB3D5198C3740A44435B048B19A9238BFC5805C162B61981D08C4FFCE4
CAF37D11CBDF6769000093147A26E8F69DB0E18A96150A569097CD1DD8C9848355434B377D5F
94A01A532002E480AA5E1027B696469F85577FF07B793F4B8F684C044C62CF42D4DFF1AC9E52
8C05F6F36FDB87F2266D232B6717897E6C57DFF9D31CF3CF5F12A48296FFF2FE7D6F975A2463
F4FB485171143755AF082FE102DB4D3A267B43953C4F09BB634D54047076056762C099061CAA
D7B4F5B0BAAA7B1A40396AF29268C784A91F3674DB9EA724C3C1B88B110839825B82CB50B58D
A5B282D589E0015497E1D887730DB88F6061AD0A0D92645892F0DC6FDB83027C0715EFCE2B97
B117F11B7A1AFF37CBCADAE82D38B39984AB201CCF1B1AF4D98FCC527CDB75D57454B5103FD1
1C9305091EFB79DE2B9B7521F3FEC034887D7060CF40C2D522096AAB5D3ADF56920FD7EBF767
6924AA2F89F97639B42286151E76B04EBFAF1492BEE4BE5C9A75A42079503B7B67E7C81BF5CB
DBD93E34EB1453EEBD4532BBD47513981577E5C3E051BF62E1753A5A457C78E78AE563A39A60
069C7294D0C04D46F92CFC9B9620CCCD1E4294CBDADC7B97537333964DFA8CF1E17E01B0533E
01F41EC9867A111C17556105071E0FA5F247DE49159055AC50CF4B5144E2AD6FF2104784C4D2
73E948D2A264E4BEB7B47A87D5E3D415D3926734E8C3C05281BB872D1FDE1906E8A397000792
6CFF3231254CD5DCE65DDEE11ECE87791727042B933C5AC119C848554A4045ADF6ECF563CF33
A8F910412313BE5B4FC987A67D145686C0F5E11869FC8963B1590FCE32AB66031BD2757E226F
378EA27FFBFABA11F916538D20E6F692F9EB9CEE02AC13188E9905EE62000B32D6516F32D90F
F71DBC3C288F3FC76CDCA24AA0AA1D0A7D0668E6986AC61690388413BDCA81CC060BAAF071E6
7301DE9DB664BC988CF0C4375FD51150F9E254AE93C50A1EEF2310BE1673FC22BFFD2DE463B3
69B19E23EA76586C54FDA5C50DAC226E3F95D95558A8E832DF2BC4F3AAFE1F3C0C4AFEDF9FD4
0F0BF05D747C82EAF7EB4A76F01587BE18086C4597BB93A8E3A3AB7DF298F8C16DFDB101881D
1EEAD4B0EC16688B43ED77D78BF022366C3C3456462265E6A962414EFEBC26D17B67647EF49E
74308D44304EE64556909765F068DA69E0D3DA44C0F7EBE4019E304039CA80AB806B47B1F49D
512901895A3822BB0424AFC3157392E402DBE450056C3C6760CF29E257911DF9610DDD9520E4
A7CF15276A81FF9A79786B22DCB2137B20E1F976E83E98CEC6EAAB2D9427BF8E006FD30757E6
ACA232D64AB02399FE79A2884F145FC6351B5C186F97AE8BB3AA3DCDD34805EB1E240E393A36
D1F85C8B396624CD69802DD267D5A9909987669DC66805C8D273B1D69197DA8FE60D005B1132
3DFD5EBC1B400B9127D71DFBBAC8899E688C92AADD87B2C895813CC20E35B1F7D383E450E384
9589387488C7ADA1FF323A3CEABEE249298D2A2DC34EE477169EDA7DDEA1FBD7C2D5CDD76667
06EE7EFA6F42FA80F622F42257E9B88EDEB7BD64BD607FEC542ACE2F119AFE682D97EFD6817B
545D2D424D6435C101EE6BD670276BA133DD7D16FED98A9DFF0EDB81A6127DF7F070751B4014
17EEAB5FAB5D4A1A18611655228BD070C0F0DB908BD32F03E1614C95162034560A053DD106FB
4C0690D0DF259947574C6D82721966397EA456B1E8889518A7525C23BB294E47F5838C1B5E98
8400A58DB86DC86B35C6A3414BE3E2326892105B2CE25DC7F15B76571D0EC9D646974D53B8EF
96EAAB63928C4A175A34881BEB0A801C14567EA395C5418E89C5F7BDFD62682CC5598E74608F
47F3B9A43765FC435C66595772B04048EBEB1C39C18ADF1235426E341DC9FF747FC5554FAF22
AD4962A609F0CE274C572F98ACE54BEA41930931DC944986485276FD38144A08CDF0DE4FAE02
9213B596977405C220E2FDD21B7CBBBEA22B2CBF7E7964D58035B242E2C2DFDE43F21B020976
D1AC86E2C365FAC822A38DE51E6ECFFFF686DD4A8589BE09AC9DC1B70D65DAF7EBF146ED7769
B3B00AE122F4D322CF1B83FA9AE501FB15221E1B3449ABACC7B62D9CDF77AAB06FA4CF610311
DA089012AEDDF34D37204DD1E7EE89FF8E50A9AEAF99DCE64DF6EA0CBCFFE8E16BDF5CB5F482
3C50F6EABA621C6034EE2F2EB0F099950E4425B818F4052EEB014E2929D34D5333055012F3C7
518BA32BE04B1E8676A14D95EB1AF4F045E78E6CC5F6B5B6AA976527325C29B7234770EE1F9C
4609DE2CEAD3F39EC7DF027606771406C622377EC9E7C4AFD2B7BC78AE0BDB6F08D3C459D1FD
8E97C020F39205BF16C907FC5234257189212521E6E57F2AF9AE9EFB11EB36F2A428F3BD3A76
628FF7E86589BD3CFDA9E774E1655FCE1BA225DBD2506C7AF7078CEF60C209658B0435DD5AAC
00BDA0D6B11680963D9C64BF1A01E1B884A65BA9CEB5D87B2492D44664879A5E9B046B8DC05A
96E50AE5A71055D23F79E5AF82FEF4D124D7238DB91E1C8D2EF789811D45411B75785B4F3609
91C7DC590D15EACCC950634BEC77ADA1B96ACA5E4A09849883104B6B584B2F345BF3A6573044
4B7E755BB603A170424412A6F39B882BD2A6554CBB33DE4AE5AEBA7AE9B0E61DB5A7ABEB1553
A4A1B92BB9E6AB4021C266E932E6F871C362E07883D4CA4767FE1081DD626348979533C1DB13
B42B6DD7ABDA7CB7D84EC347279683E22600ACAB25DF533F564C97BB3EF6E39D935C59A0BD2B
9CB53C0ACCD759BC4AD7C60BE4536A21D59F47130FB01D174B4BBE901E19FB56AFA5BBF8099E
50ECE0075C340148F18BD6661EF75F5BBEDDCAB5621144DDA8F5696F8867A4CCD8336DADADEA
B5C6CBCB6A114F0E44E43945F46C9143C3BB688E4CA8229E8621B2986CBF45646753B0CED554
E09F8D961CC9BD0EE359A859B0B7313932F6E5013875FEA4B51268BB3D608CA579D999D1CBFD
6AE8303BF21DC188109092A62B1F5E18ACAE78DF01F41E106EEE0113D253297C7798E58AB6DB
A4AF1E93ED7968C0A73F5151FA53A5BCB039FCAF488B2E94F20E3D5794256F202FC5EAD8E526
763C772245B590FC2F98B3C091B9844C332E781283632EF903CDF3D10006969E8BA9F189A1D4
A3A676C0A459EC476894C3E28891A8D451B055DE02EC8943E3BB0AC46CA0114717C24C6B3917
5689B22EBD8BA91F97EC1C6452711C57A4B8C883D2FD15D1B416C3D131A902887E567285E018
D52E3F5CBD6FE3D7127F05FD400419858073E58ED1F47F24A8CFDAE157230C6C801AF3807890
C9238E6682CE035436E6EB162D8B30E52D6E84E981D8A977CD59B0093E477283FEFF42448642
ACC058CEC4050282EA8508441E064EBDA93A40EBFBC68EDA94DAFD3675172DFF79A52E352044
D94D457E84702C33F1C53855D048E0D37BF96E9EE400D584EB9787180E3765A37533BDF3F814
78BA837FC6D007AE96F23F4712F0D8C610EC1F8027A0D0A993BA0F55D91A92A6A2CAE17E2F58
638CB84099348B02EE5347FA6F02851EB046095B77B5011E1A629834098593AC3BF9BAC56380
98C30EA3F0C5526391A8736AFCCD1C3E5864B2CB555E7D979ECBD909DA06F5AB8419C134AB29
2C296F4EADEA3118D7015DD6A3B9D7350229D8833E34A583AE3B8D084FD9CF948FCA765BA0CD
47FB37FE46BFF0BB49E7D2A0580968D09D35B8A28FE54848CF0BAAD6AF6C25AB15A1882EB165
1FC1DBCCF0CAB68A5DD18974C2C5A4AB08C52AAF2C89E2577A621054D8D25A340AD7B0D3167F
31FC5046819C9728A338AC204C3B0F196CE64AC34435B4491E0E357F26EA356C9049499F2036
28F5D3BD277A7B337AC5D89ECB7F26E41CC80DEDF47FBFF8DC2E716284F68E6750C0AA4A1933
B38E114C7A3761030FC8A5B9E1E7FB753E287576AB81A3D6F54691B9945C11B556604BA9853E
BD89536E56CE770BF86DD1B26D10D797DBB001FD0BE132E5B6DB3D6B9267587F30BC7EBB1B55
66BC7C5609F9D1125B4AA2ACC850A6C39FB0ABA181AC370E8CD49C56D0338832AA92AED01A18
B9D228FC350D0B2CE6E1543ECA4150C0ACE22B5AC3938A8A04101C3BD78777DFB6F7A570A205
1C11EFC3CD6CEC68F70EE9F950AAB03DB2891F942ED550434DA413CD2EFFA9D2043976AA20AF
8FDE9D2E2FD6F515BB36741CDA5FEAE7BA1E8AC777F68E6CE7DCC16EDFE02F57852E87FD8A19
1D44D87E69F7B9878CBC734C227C6AF895F083263F4B5029A0013E5909AF9DA77EAC81F17A23
284CE3BB3C74B26D9D08C5B7379CA8C1E8BE0C84EC0C69D07A645E613249369268FEE614BC90
AFFBEA486BA07B993119329573575DB8788DA21E5831DA7ED91E18EE3157EC6C72DB051CAF89
210460766DB6743D9C285FFFA2C2602759F88570367D5A2E3B97DD9B2BB977B3900CF9FE1B49
0EEDAC8E3640E43331D6AE45355460BE7EE1F38B11925A9DFA3F943074A7347CF0E03F852714
357115FA41A17531CA9FB49C3AF799EC0FEBD61B81631775290B1F38E205A78B317EF58364BE
494DD1CAADA4D5F84980D1FAE9ACFF35E2E7D6EEA26F97DE826765DD5E1268A53F5D8AAA8FEB
528E8A13E0E001BB04C033BC88B1B83E0AC2BA20109014C9FA9353E7F10DD7C1DF8B3FE48A3F
9AC01006A895B0019E7F62F450960BAD05A70BC457C88F28759CD1DC5904237C1B865AB4F938
6A2BEA70D5ECBAC9EFFFBA1680413C9B49B2E16485D0BAC750AE473B1B3F6A176DED4EB6A052
9478F120294E591D34B90CD62579DC53D94ED0A98A5CBA48225E113C0F8BF5FA1113F695B757
7229F5DEA917A5CB49B85D107CE29CBE83107465A98C6832FB5F08C6B82540123B675E69D442
7905C93B701C3667DD78A500F405078A7A0B929BF5DD21AFE771ED05E73FBE5699D4D2C9337E
ADA08B3FC5916EDE6AF94E7FF54A01BA67F72A3A130B61CA2E792D539FE4FB417CBC6E4911DE
84388B3E58BCA8520EB12A0ADEAB59119CC9795B64FDBC6C759D314BF93E91B8F0ED753F2A7D
1F50255EA5429A7C2C719E13734DC9F0AE706A14598F05609EFB370FF110B87D418BE62D6B1F
3278C5072F7C2C609E92DE9CB15654CED6EB336650A9CA2EA1786865508AB6CD71AB57503C18
7C0A68F532E3F05557C191D1029C4F6095ED7869A4258C893394D8636BD0DECD8F3851B42EF0
EE6D6D7B23CD07698EFBF2A6159AD01F2FC5C69FA5ADB8F0CECF8CF1EC99AA919A57E6EB4E8A
840A5761783C7DF31FEFF92651AA3975AF5A2003C307C6703089EC1CD63D8798CD4FB69CBCAE
A810E5D70EE6F2DC9ED3CAE29039A86173132A0EC628814994191095E1F578582B79274C6050
191EFA3BAFAF6F331B3109A04B5450EF7D1E8CBBD634374F200980BEDB6A34B19A2057523C86
706023EED5563570F6F88FD9B8310981D7C73BADC9216AC45A4BFAC6E4800CD101CCF035D2FD
D71A8D082BFEA07F3F9CF95F2E70FBCEDC89F27BA661EDC0DB4F2468EBA2E4290EF9B5670936
EDC728E55963D74C444E03AA2344D80C24405EB031F5933CF414705C3329FCF23D93C1F1C6F0
2AD7B4FC6E5CF38BA92ECE4EA1656327236FA26CAE52031F4F1FA98903DA4C361FC7DBD3B5CF
37508E1F22C582DE7E3E9F5278D7424A9F824FBA19021AC81EF7F0D3C6D67D53A26E4930BED9
CB72815F0884BF52D1DDC54E4AF35D9558345D498D63E7A7D6BC327FBF8F47C4997E2DC4C6EA
4E1B3FB9587FE48978B67EF5C8E8D8CAB7627A982DE551DA90275AB90DEAC04879021D593430
A30240CF389E10D256FA72A8656E8A8865750283CB245CE063C4EB16059F25AF21AA7F9412B1
51A3404D965C2CF02CE88FBDD3A708FC7CFA73DBA0C664272F49F86915FDF58477AB8678D42C
AAB245B637168C4FB33647C6A2CD7F96D54697C375D0422E27D121899462D8998B3624E203EE
5D0AB08E0AF286D5F1352F0E4D5B58774F0324B5479621488FAF503415333C9B232119542A24
54A72918BCBAE3628177414CE76975F786C68AB4FBE47B150539D9BD711C510A7BB87523437F
CB820000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark



%%EndProcSet
%%BeginProcSet: cmr10.pfb 0 0
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec

8053514D28EC28DA1630165FAB262882D3FCA78881823C5537FE6C3DDA8EE5B897E17CB027F5
C73FDBB56B0A7C25FC3512B55FE8F3ACFBFFCC7F4A382D8299CC8FD37D3CEA49DABDCA92847A
F0560B404EF71134B0F3D99934FC9D0B4E602011B9CFB856C23F958F3C5A2FBE0EF8587D1F57
74879C324E51FCB22888B74F241550D7401EB990D4F3A7AF635198422283CAC1B6CD446DDBCB
D915DB9BFF88844E784C6BF7389803D9450B0C21756A017306457C7E62C1D269F306BD3402E2
66DEFC3B5E7D8A8D2F5BF0FE6DDD40D07391DF4FAD4A6018DCE29A2B8F692B29F2023A7C0E66
DE8ED85C14F1F8492167357F51A7E84CC5D92E0FEE4D81CF7FBC8DE52D2E7BB57142033993F9
C08C315ABADE8DBC4A732E84E142D3BEE51557910E12CD8AA37C459A5E6B7F5269F59078ABA3
BE4641A11AC48D0B625C8325B38EC08E4C9E5E7FED976A5650D99D82114F449B9CA14C4EC957
702295A39A93EF93F61899B8EA06B092C3C1E503E6E436E0A9FA22576C8930AB3DC8C20F5D82
B69CDDF8FF4DACFA9C54BED5A3AA3EA5B129FE96BE632843B9B6BC91B615581A985DB56B1E01
CA60EE69CA92CF5C0882ECE62EDAD3E106D835348822400F0B66AF658F2AE56ED08F8B001057
1807009B73AB12A8CF14CA6C71F03C2A48C500F9D62266AF154A6375FF600D9BAC3F05CE3414
2D6867A79581C533176BB2F3117336671E2E44638A97167E2EA9644E31EA16C2AD2990EA33C5
4001E0C8156E6DE8AB6A4D40A7137BA275F39589FEA2E2DB8256ADC103D6F9CC038037A47E8F
D469C5F98A5E3C15BD4ACE40D340018B1CFF7D1ED8ABB0AC57B5B5A2C20A51957B96C453EDB7
DAE5AFFD91A46D938FE0A13363001D844DED4323F1EE6D30012AEA19B024A552315505535C85
DC26BAD31E09C50E6512802976D298C4E90D0044C362E6BF3AB362A454EE93DE25CE54411090
C29E9D75C80CE26A84404BD9DE3AEE0E3F921AC587F907572B8354A5C3165EEA7E8B2BA4E333
802132F760B41A900C698EB3D2738BEA0AAF7AAE96A558F08B61AEC7C7D65B2889BB7B99800C
FFEE5BA19AC90FCE11437BE1DDFCF0BCA5670B543B9644A71C8726D0C1005ABDB96F6E0CF7CA
AA3195017CA81519151C2C0B04F81E717C0691B63A76E9B25329CE2625B711CB7BF99D23EC2B
B5EC8AEFB8C1A3B422AD617B3DA4D49685FD44CC21A1FE5E1541163AB3E1594601D63C7E9880
1D7746474377CE93F81404F3570AFBD5DBFE77578605917AB96963987E6EFC2D3F99FA56ECAE
6422579852567F90CC90E4EF6D6F71D1858270205477E221018A375CA83C572B3F972C5181D1
8643CECB04909D84CF767174B3C0C8EC69BF1E9FDFBC0FC7ED97EC67D878EA4DDAC8CAA522FD
C6932DF721B81AF837AB56B547D4799241310D6692918FCF8A46189A78D6638AAD7CB4462D87
74EC73D184076595C94C0B4A8233CD34F2D92F6FF94F941DFD589DEF2CE790D5CB2159B95333
8C7384CB68C11779120A68BFA20B993D8C0313987EB96A2EAA2C11CFD838E6AA48A89E6DDEF3
FAE1A1B078BE9787140270556A96E2725A8CF1AD46FB52938900730154AEC60F544C3D49F176
3861F54B46A3B70315B46EBE51C42FABEA87A5339ECE2B64270749188D73A07E0E3866EF9AAE
A996FA92AB443C08FB8A840DED26BA68E94CC23CC1F6968B0F3C7E8F4FC0C5CAD0F7A332E7F9
55287ACF2485539C7B652F7A29D9E4AEC20A8E023AEDE26BD4C761BD3561269FAAC6FD5A651F
FFF9211F8DF220994DAD6D105A92D5794CF2AA526B2143C7150BA584A2B597F6982403D93073
CB066B569BACF95DA04B4202BD24059A8DBDD3ED8AA9E89B2788F3B078A81A557BC743C12A1E
00FDEFFD030C032E81DE3142A106C0EDE1BC9D566440BCEC4260295CEACDD54BD0E25F6B9DD8
FAC41F453BCC731777E1E6ACAF37A8178D11BE1BEDD6681815F3D5EE8D240B7CE9B14FCFAFD5
04216F26DC2827FB0F6158416EB24F8BD7616EBBFE9378718824CC6E51135F8F489E9A55A0F8
40608A99A32EADE4251F27FF86EC7F324DC9B534D7135E30F2EC1B6D93D7DB919651E03F30A8
82F2DFA457D307F17751532AD70E632A04A63CA1A507FC6AF4073126BE0127D86974B426F489
FF62A53C1986FD048AD76454D42BE16A6060101239B138BB638765C46EB006F7F8DD312337BE
08D4381272FCEFBD74B7B2EC098B436365586A832721A0113B2BF1D853FA8B062BEEA25CABC6
0998CF4D38B49A3F4BCB372198A196C9EB6DF2CBE59A59858AE212031C9AD7FBB9C3E8E9E6DE
45DCCA521F3AF361282F7B3EC507C8B3AFCF18B9678EBB2F11C01C9DC3C4FD3134C5A3DF6B6F
4C75EC985466C4F505847F1475C91E5D83A6BF754837DA02F9E868EB0DD76EC4D31C8B1ED935
ACCA73E1CB9B4192BB0A853F947228C3064E8F923A9133EEC9C52C626E29689DD54FA433B970
2636FBD87C5D81C4F278168783509D5F4256C77A855C97A48D18DE6EE1D47C7C33E9AD227ED7
02F120303731BEA6F3055D764046EED36A06C75855A928084C5773168AB985DEA7CD767C780A
91E740E6E088CB93D43A489145030221DE0E1B2DBE954EF414B9568F3B1C5329F5FCBEE927AA
23309AD22E10F9349B6CADE7A090D19B9460405CDEB89BF1617B2C297AF5629458235F1B8C95
F5BC442DEBB34DA5D20B11E96660CE9E5CD19A84AA54F42B106FC87C7C0405B0CBBC249950D3
A7C353D691D77BA031C840C8F43A220CFC749CE34C2791DD627CA074753963D2E59794496D55
AEC96FFD48EAFDB29F8ABC8D91932DD5B01F65EBDA034BEF3C7219E097670621058662C5BBFA
A939DEBF999E9F68E5C4E64CBB0774A9A186E741346103865FEFB088AF547545CF7763DA0664
96986377B587EFCA5C9EDF22EC13D1AA6F483C4A0ADDFE395F83534D7BE5285E6A207D53A8A9
60ED89E9BD27AFCBBDA23B2D9876A8D8CFCC299990D521E076CF8387D514570871376C21509B
95EA15CCFC7278851F14DE8308B72E111893F0338488BCEDD0F2F8EAF07326BF97C3727459EC
89F8121C96A45E3DB1C63D478D0A6DA5F5E6834938EF1CA41B910F25A82F2774E3CAE9F1909D
BE21EE8E003E27B84C43B39FE247B8E19538648F246D325357A246365B9B2B13DC68CDD7E44D
99D86C642565B1FC376D2E530048B27A7C44B6811719054D3AC99CBBF5665AE76F11E2781B8C
040F73454BC794B1432E6C3A58BBB8CBEF345D3178C8D01D6B26BF7F485A5C3BD36DD01F39B0
34E536ABDC6632EB4038FCCAE0453E85B3BED8C3D4620A2AA2DABD0CD93090E9B8E964C491C3
AEE45B592E4EB12970647E2A5E68BDA429F53074257C02975268F8C28F06350C26646D658008
FAB0562F40644EDB0FBAB79826B16CFFEF1302C8A13173CC9CF7C8FC906693E486FF096B2D18
E96841A5FA8A34A5B4B68462BFFA48102464DC22EB50F1F80A26E929D4CDC4B90589266915E8
433D46D433ED8920543777360D25546794CD9A3A1EACE8AF188CC18DDB9DD1659F9FA462A5AC
E6A6AD068140356E8C1E48DEFD171947F78F086C6E267FEF13D16EE68D0FB0AAE589F7E090F0
88FE80BD6CF8EC0EDD28C735748FC6E7FD421E33B16EA6319937D2D63A94AD76F95B61813DB1
81A113274D5F3B4DF5EE90E69FAFCAFBE4466F5D5F48EEA62A7CDCD4F9418437707F706B290B
86C30FEED99522875EF5E2D491920983BF4E9F1C71F20F1B9645E30521EBF2F1C9010103C60A
9A6DB7E6297F7C3E29CB150307FB7A1A1A94710EDDC6AE88742CC7044492DD7A217583C99A6B
E7B720246FDAA00683A3B82EF6BFA87F2FCD741AD8BBA68B751740435DC6AFB1BB88D1593DB1
52CE92C19E1AB29C8E8FE89477CDDBBE29B8DCF1EA6F70990BE9A0425000404F2F5DFBAFA35E
70BB87066464C992343E8BEC66EF483DCE474F3ED7953DC1F6BBC14EB3495704D1765D0B3285
A05AE494342F6B70D9A4241291B3147C77A8AC0E08E5BFE60C8B6E2048876A6CBFAD8EFE4860
95DA764F4AB9E4D8153F89BFA2D9BF2759826EC18F64F1AB083949F4BC127411A477D4C24D7E
0FB0C96A96A31386CC5892B398D48750FD09638BA6D62CC685688E79AF31F13B744F395984B2
0AA483FDA558C6A91CB9AAE9053E7A5B5B8659BF0631C543F4C370FFB006290353908786BB5D
B373233C12F3506E2C4DB0D59C1EA8EA75A7662B90C4AC1561303F4FB8536C1534FEAE4ED772
DCB49734F5285FAFC99FBB081ABC3DBE87180D9BDE2A844B054D8BBBBEF5CEB39F5CADE252EC
6164A74E75625050CEAB8FD8D8513550D4420FDFE6FDDCBB816E204115614FE82CEF36DB23A7
DD31CE6FC923B575EAABEBB5820BB2739CCBB41BE2A4A95CFFEC9332DACF05936A3194AB4F77
39E5B4A868A7CAD3B1D940056F84B41E81B072C02C0D0BDE7C64DEF54B1097F68368AC0B39E0
DF5E5733FEACF02EF12A1CD0ABB0805C2F7E7FD7C824D9B348E893D68F3F31B807829015C54B
8D2AA7E8DAA14A364428F3E706FC649E274E47914452704B1BC56A41CAAC736C8826B7BACA1D
4FAEBFEDDD0EE8FE3BCB53EE291356B7A4B699C33CD7EAAC34E3B92E7F3ABC32852453259908
74E34513647D521ADA13F83584CEF20DC503EB352BF881AAD4C00894CC581A819CA7CDE96A9F
8DBFC22767B215141C8677BFE6F1F0DEE4254986AE871F87BCCDCC10E2298BBD90A625337936
3FFB2B093C2F54001070E655E9C4CD389266DE373971BB763279F9EFC4E5A223990153618C66
54B5740049A3DE2A80D613CD5AC5BACD34315C43996D1A420DDDFE7365060EAC81AF060B8344
3FA8176CBE3F4C2EA819B493FB5B4A2E4A0039F028CAB0B47FC70F178DF04C7CD4DA22BFBBE5
344C9E9CDF1020AC1A43C8E5B9D19B621565A6DAB2B1CB6CDE2524B33FB1DA6B5988F5BE4E73
08A17C73E406DBCB51FEB3D79B84FF8B0284F7EA92BEB9CBA6CD5999CA7DD20EC02E000FB48C
DCA51B8E747C0E25B28431543D9095482657364ACC1C647B2140C502623F7B9E3F335C2E44DB
33DB82C01AE27AF66BC2284971A5249911D897263210DE4A9A65232738D83D10AEA8C5D3C687
128B64EAE94D6FB30B7BA9105BA8E01BC9925C312CCD8BD273E904D8FF13F4DF7EDD21C23D0C
09A32A4C90B0577ABE7AAA53E836CA60B1697621049BB36F8013026D77910193742725574222
DDD3ADF4E872E6D57C1DED571A1636893DD7F49D8280233CFF4339B075628AB591783783548F
17134E69EC5EC25B3B8036039DA276BA1507649E7DF1EF9E29F0AF07BEEEA346D470B4F1DF92
5040602539BD1D8218384B53BDF16C74A1A6BA2A7871B67E06CCC015BECF2F020295E27CFAD6
2D3EB7831922FAB24780FB158C21E769875373606E1BA9BDA9F15352EB5413FFE162EB2AC194
4BD7D980D232A2F3DB3CD38390E0DCE3241113CEAAC83EE29B2980EA6DDDD4EF5727024E4343
AFF44318AA1382662A78A41BFD6ED98264A6B0BC629CF924EA0A635B0885D682C26819043E39
ED44241D4E8B50AB92256F9431A8123117D77891AFFE4E2833BC0517DE287A747E88409CC30D
7D098A4FC80C6D91534304E7FDA873FEFF704EC1F7450226F09D5E89E245622973D9A789736C
71E6651182BABE81ACA969C62E1458FA67A3B9D38CF364F383E719F7066D2839D95F262F8A5A
F87DEF903EC3269466519E68E857088D318839FD0B0E51A6D358A93A543E2401F57FF7E970F8
BB7BEB37BEACAA000EC58DF62D2064EB45A81144C146B744B10406EAC2C1E350E2DC328B6A83
9DF820B289A84167B404BA1FC63E453DE7B58A9EF959D7E2FC1DAEB5CE90A1DD935E8C5D7DE7
E2684FF0502901BB451FAF9ACB439F548657E3BE938E7A2B5924DDA2E7010CD26A181D84A5D7
5294F6E56DFF88F3C207C9D457CDDBF2D3037AC9A93CE9D53FA0CAA4F21057762954580F0F2D
47AF43D5D7679A9D44D45D682EE73493A2B8C390E24EF27C84E701C879BBB1FAD6BC8B89BB27
959EE86BE486786D1C81612D9546AB59D5216367C027B5B0F51A41C9AE2778A04965A846990D
1727F3F3E09AD0B913C9742371AB5669A2CF4863833A19CE69FF161B1D6BB0CD61272CF94526
4584ECDCD290E2767F087A836F12AACBECAC49C3FB28A605C6220E8233EA2C9AEFDA87EA2CF9
D3D52FD6D16612AD07279DDFC4F20B59C905A146B1F4A51547DB82758886E9D3609B495BD941
616057E460B94856191791A2D16B90A7C33534A9DBAE17C96D68E009219857FBC92EBE189875
EFABA56704CC9305DE0D32C4CA5293B306A4EE9DCBB131C128626C4171EBCB2DEE830B9BCB98
B4FE23BC63C9186C21EB7D9CDFE2E685399D57D6D1A857C11FFE47F6D0BB79839B6C88702EAF
6A59BEFDC8B35A03768AF411EA16C277F7EFBADA006619B31CD2EAB657BBC8CD4A44340F4D9F
D34007ADDDF2DCAC3058D22267490E90657808CC716B7EC3444638215495A7BF077956F16EE3
053864EBD2EAE7B210EA370D71414952F2076D689ABD98E76030D92E4D49A79734FEA3F05719
8F8DE62F64468D06D0E6443EEE3F2677049B08E8A09907A2785D91C009F8FAF6F1DF1CC39D0A
E11E8F1C939A0C13E49A448E89B0EDA7CCEF06166A8449B358B0C661E40A7935A6E4F866ECE4
23CE4C978CF749F3B2B8AAB56AEEEDD498DB77143F77B4FEDF5C6502A3D2AB4D0BDB8EE456D7
DA3B9CC800DA8D0CCAAD981DA5193A528C7B5628F065B7FD1DDB0FBC4A74C32751E8B4747206
8A3A6F380CE2258D33FC49780EF2570FD279BBB54D4246F40CFA9F13AA9E13C6CC030DC19960
115C2DAECF52027F917D3D9D44C60B0B2D1030EDC6BB055926CCC512AC2BAFAE7C12D8ED487D
D3901FC2842D3A7A69117A8B82292FEA44FBD40BF6C27686EAB94A520F63B77B82D5425478D7
4B5E4E81A8439F560B1CE7C626E51CC3EFB877A9AF37BFCC1A72D40855995DF53B3F4451CC29
A5600CEA6B2FD2BD9DDF106FB7B6B6E19477426212F3B5C25DCB1B777B643A318046E02ABBEB
67201DD98D892D6E13B0853CC206B62AC7E7D386A77C6C9A3817FFD5009D515EB5F770DCA0BC
4D9DE562EFDAAACEDE34096EF6DCEE08C735DA36893C41592443E0B69446B93EE9F758EB75C2
4FCC4E8193A1F77999F2D4395E1BD24909CB805CE3A26A47ECF376A79F480C9402DCF3A86BFA
971DB7C977F813C21AC8C071B6F210B251695A40B735D7F8E27F9DA47AF7FDE2A6E7321488DB
E7555BA82E23FA2DE3092227E1A21C5E6DF4EC83A0578B4E99FF377C9E655D7D6DE412CF0F67
D3ECA45624BD1AD4EE76AAA5F99C73A1FB470C8C7EA472890E1436BB51FE764F95810DA0C3FF
D1C3136223F6610F3B226978B8F9E35C9B09DC863C05DF439717251910A64E4AFAF2323CE1D2
A168DC57CB1F4F2F9D24071F49444B1A5C6956F236734816FA3147656FD7C5F547748AF983E5
529FA4787E540BDC4023377A7B7E248A37550CB0FD519F30F1BA3A323D171612F802068AE4FE
FF8D067185F9E5211B1218656EFFB8762824E05EDBD304B71678B3C4808F7819AF193B247D3D
7A3EE51986157E6D101C07A521379A097751CC6C53FC6AA6519E2D0093AD0CCC5145F4D788F0
46EABE997100DEFFC6B7D79BEE09A92E34BCC15124D2405BB614B4E265378126544D041C4A16
71E65832930D6F15E11387F39862F9BCD513CC611A9F9ECDFA53175DADF03BAAF5C32FCCAEFF
3446E67A62D3B15294E426310F64B6509E88D3225DF909BE2C73A9CC8CC643645B394CC3F5C6
1FEB91F1522CE9882A60504C14C69CE7089F3EE5B3202D3E5C2C2A98B8A4C8655A911EE03DBE
72E474EFE0A0B1FB9062E474DDAE008B0ACE5016AEFBB40F157B9BF07ACBCA319380105AFD61
5DA19C9F932BC8D14480F6AC4E607FD4A7C34AAC43CD26301EAACAB8A4DC8584EFEB56A2E569
5E84030F39501223DF87FD3F16D3950713C483D8164FE2A180AFD985C11D55A9E22A61F0C5FD
3A0036DC51904A84B07D409388B897FC92C1C91A971B2482E668A27386B33494F751B5B9EC4C
5ED765A88F5A675960AA7F644E77696BEE684E098C69A8119BCA27067E52E1FA95C3E54CFA56
8FEB54B92C3A8A2DA2CB44C9DA1DA7BAE1B05087D025F767658D885E89D654620C2827013ECC
B38C7021F83863313BF35116AEB2669FFABD5F1F035C23BF0244099A32D2FD13EE00C09E30EA
3BFE334227C6A143CB716A3C584B6ADD52C6370F7BA917855F2295B9DFF2BCA64A0504D0E557
861EFB856A19CE99B64EB7EAD11C2474E79D5EC30DE5DDD094AC37D8EE50C4F4D39E32E284B2
F347848ACACCF519272AA1FEE3000AC3A495B54385CB50373AB7B790B473D0449B7622AD526A
1BAC985945964D6D2B05089ADCF9DB30F1032639205877D7E78DB7F9B136055C1451663CE4D3
9FE864E02B1339006A1065FB76C6E438EB132629AF5E1FCF6022E608674E3546CB02A893B558
F3B2C76BD0A897B4EDE61A21B8F6C34FFE820D66F3B89EDEA86E13EF5CF0E33E82BAC2B4CE6C
DDDB572ED1C9AD69FF853ABC58C0CACFFC0D86D80D7C8D10139ED4C9DDA73C4B56E375CA70FC
E18EB1E322F046A4A44AD7F2731BC2059E391688C03B86B305E9BD9BAB8F3D1B6EE52789D559
A5200AC84183FEE544DB210122C74BB2CA648599DB3CD1AF261567B84AEB332F0647288F8F8B
01D5068D74D7E89472D8DF3E901F6B523FE04C519843E0B730F403BB99CAD493201F950E943D
B95FC52B13A3AD8CCC6478D5CBE5DD019BED1ACE4D02E09353E6E31B9A9EA9C76D89D9490D71
3CA451693D235A0C8B0A3DED5CF2A846ECE5CAF52627ACDBE76CF57A09CF6768D0A53906B15A
FC5183B9DE1029D19E64B64BC2E075B536663C524BFE35C9E412A7C0D23D316E0645BAA41DF9
ABA61284F801F7CB852F49B24A96CD4C743F9B1D1A69F3E30808282C32C2C4655715D8F3AD53
F3FDE97823989864479EABAB5876C77CC134EB66C688BE3777C74B3A87EF1616DDE5A8A46185
997DF2FAFF5518EA7AEC3379730BC509D09C5C378B47DA67F9F5740B641DC790766896352D0B
E0EE84D686496066469C995583EDA0BFA51178091918D2B9EE8CED4163E45FA312885A64F177
F03E6D77DD649C7D71B47FE885D72887927AC070CC64E825917776264E722AA6157C22A429BC
0D38B56E5A0D6473FCCAFCC17B4BD8860ADDB9BC33E2FDED66EF95205FFF084578C37913E205
9CB3C1ECFA4142C0A2AD1781C373CB6FE9819F4CF8E5B5774D7A6BABB1FAA71D0C96175B9DFC
08A3154C2F1AD566E0D03E6A01D3848F0C6C06755A0511948D51FE8626A32AE97CEE9C01E15E
A61A556170E7E4D3697783BD42D586535C38CCA8D543A9AAA828C4813E89BC30B686049910A6
C01D7FDCC55895A3F7019B0CC78C23925D8CC1207C51FA19E6B8992A289EDD5669C33186A7E8
38D5A0A3C101C82558785010F877B05D943C5F874D0524622D43EEE25CA87C2AA4553804CB6A
D1508B9406BB1CDF868DCFFD19483BF1D8EE2844E62A2E1CD09807983B7742A841BA2A03D8A9
2568624EF3C504F9B2F4389E23E323D1FA1F4F0670711DA7D827400F36C9FC870EA2553C7E25
45E2A5086FED5BF966114D5FB48721AF70E04393326BDE080D3082C292C9C251E2D82C0C3F03
04E9A46203E0E5E76829E21A3B961F02AFAEA15397F0060E5059A5FC66A2B622AF1D62FCAC51
6EC3327C95A0C2810EB42A7209D12E90D1D41EF442D0F3DE55493615D4135B4F44BD09759657
58B16A8DF9D39E78A73DF41C2EFBACC2C91ABF75C849E2BBCBAD263F8577E16D60BB6BD463DF
3A4BAC62F28B44CE08BF52A268AC27779E3A317B965A44321615891B627541C53768F33694D6
EE76903BBED8ACC45FA00EEFD20224E09D95E93605987839D92C4E0E1853D8C3F25FDF0A8268
B38A6B8D9286535A49B25631BF31451F81B5ABCBA66A07056EE34EC320367DCE6CFA97113291
32E1155535F8094570639F9FC72E1ADBB4EA99EF7C7CFCEE8D74C2AC70927CA9973C4E1C4DB1
13613466EAB58C0037BA93230A3D6EF41739122912A15319374C6A6D7FEDA8B1DC15EDD2F286
12EDD846D8AA051F24523BF92C6920C2AE3CEED5868BDA6ECD483ED181AB69CCE78668A087DE
0A00A960810675F75412A8EB6018C638583DFB07B4B4CA48C2D3A7CD407F552DDD7A91556004
2B173D2DFE64EAA41500FDB64FE572E09D06BEE892AAF0CD711F3D6752302EA4F69AEA675A48
EE69C2416805E7E6EAD9889FE072F1C2F5D3A89D277A90DC9EA38271DA1A455CCB3598FA99C5
5A788073DC12B2265D409DE2DE24FB4399E911CA80169AD5812BCAB83BD0692C37A1B8053585
BD7303C20B6A06BDE9873823DE9E9EDD9F403E78E7C386341919035561CB94379210A5E14CB7
43687CD843FB306B6946D8BB1C290D802EE3F096F54D70743B22E661F81C89F190971F27FF9B
0E6C273CE3B35E6F5A586B411F6CF55C2909AD70D348C6F6322EF1DD08EA36F1B99ED590D012
3DB978BCFF31E5EE9EC3FB969E71C0864757AEEF1750ACD6A6F08A086CCF15E65A712ED37564
B73DCF2A5E86E05C7725DE9F13DF59ED3E92438D9017754365735E5731853520D9771223DE22
52388C4C6F7FF44614112780B14180C0CE01C50F94BDE65F4692CFF4B52F6D9D1FB562475BF9
E94120A510389E9B3574C62FE0CD45E19615971BECB8C2388B4D5D095B914E6F887F3F708D7A
65B516758CF5EEEE4DD127315FC3EF04CD5915978141B2CEFB3D2C0FB5DD64E25EEFC85CB2F8
80CC6AD20B9C9F0C1256A9C4E8CEB2B400C8D50079E6F58F7A064CCA9FC3EEAA7F7C34BC51D6
799520C5534EEC1A1EFCC52B9ED43E7695ACAF3EC4590D9C0BC16915769DEEF8F39BF7992449
4888D4DCA2484053A29598DEC70C2BF94BC2494BE4841F9676DE13196AF9B9A329DA016F17F6
2ED26A75CA3089750BE5DE919429B989EEB4C10C20AB764BA2C4035F14264B055771B6AB98E0
D673580FDEBADD2719C80E9B8322112C9AAA9AD2329B045EFFA948AF1EF7B0038B4D3C068CDE
62E5F808213F4A04D4979BFDFFFAC94483C546B35E965D4D0625FC01856623E146EF193A5538
09C0D1E182E8D7759CD2B467A84254A2EABCEAF9E764A05BBB84522353B2505C56115F489E4A
906064C9C5266F823741A1BD1695796BCDAD01B38003522EEF9FFB7FB7F79F8D6C43B6685C17
F72F06060993C9A30F8E31AE8CAE4F3BAD51D8262688A6443CE6A07C1CF676CC4F755849E2F9
DA19B14130FC72E31BC6E4E062C041EAC5EAC486032535FEDC0DA2F8BDFEE2B72C1BF0BE510D
BA08E0A5700FAF1686EAA93420F20F92C0516609ADAC4F7EAFB5FB2CCDA18BB3FEE2702A462F
8AE39A733B0699D29FDA1E821FB03964F477A2FF5580FA4874F60D6F3505A4287E17AC2BF565
9E42FD41F257EF45798CE2D8E09C0593FE7C41E67D79316E8D61CDEEEEEEC60EFC9BF26E803F
5C3EE7404D05ED2018F8C9DD0EBEC3BD39E20AFFB51582BD5049DE9AD7437849330674FD17CE
6B9B6F646F9CB66CB5DE5457BD512BECCAED183FD5C5D834846E6F8BE301FB267A4A67758590
3CE45864294FEACC65B46D604D84D846098339D20FE034B77A49DDF85718CF9DE18D10028B37
15994C5F2571EA3DC7E98F66601C647C80839E3F3477D78584870837F653243BEF6FF49C347C
5FE9C7F45A28F7BAC5AD9929D508628CDBBD4EED3295F06CEB89D378632C34D514A0B22BEFA7
E090AFBE45EA64C03BD1367B63763F4570D25F59E83D344E8DDCD26CA66C1787FF09EFB314E4
CDAA3BCAF8C94372828623E973768B6FAB1327C6CF5BEDCD37972CC2505B12D2A26F7D5AC9E3
F623024A9370A44BC95FB17C035F71BB43853DC7CA66BBA610CC29FAE5636B21C2366F88675E
C0EB2BE3C127BFD579CF818ED98D657779430F5C75A0CB97A52F3547907BFE2AD55A59B0B5A0
DF0D25000907FDB6D5781EA549FA89078516665CBEF095D9411A2DD1CF6A355BC77E2447ABDD
21DA230AA18D5E130DFEC1B75E5C1F6CB9D3C860A95E9FD960EB8D73EED1E168E357CF305786
A8F01B63EA2D9301A6A3F886CBE4F678BF1BA1CAD67F3924B6408561A435E0720DCDD29C53AA
53C1747BA074E6588B3AB7B66B5686AA58EC9BFE7DC107D97B8EE627C9E79601B95791704FCE
469944BC90EC77AE5A9A5F2A73A4894712899DEF4BA334DB850A7187988BFC315A5E207AA6D5
76741B3068F18C7AD741B6A4B6DEBF5A3C3E178D10E25FDDE0A01AFD5EEF225849E3B5BF1846
28EE473A34303C2524D78B8E7B8D9308F1A90852C8463AC1997C91DD233CCB7E4A16E95CCAA0
E4AD48E2C499397A4F558C23360EDE957D872238A446C39024A369429B2CE348AA5FAB425897
EE02B71F085DE26264002AD168130598150C4F560E0510A135014E55A74F65B4CE7E1A96146C
609280B49F0AF1830C3C8A6045BC7774D3895348962A7AEE947AC962547AA28B02608CE2F91F
EC34848EC86C4BF8507A9C0AE9A0697699531E11ED9E85CCF52231672F0879B801860B013181
5CCFC49012F03305D6D382E4E4565BD1D2F860EA8BD636D8582FD332972F1CBE62844355C933
786BE37490A7EE43217854DF7797EB8680B93D9220F643DD70B2993A7A0A194159A9BE04441F
478A77B3D2CC38302701166DEA70D72224C9481BE0E68BB6802BC6E9D131C3B3FED642779139
5CB3393D4817AAAEDD39AFD6508C9CB4FD67FD3BC18C65F27203AE022A522C1B750960B7A745
0EEB8718DC911D645198227B2E729B6CA4149EB9D21369500208D94593A087C76205D1046B91
4C31FB5F5D6FA1EFC908532B27AFBF73C27E2FC9228ABF72920CE48C03E3381A952A0B1F25A9
9EDCD216B154AE6279B33315E822EACF095C00D7359EA834885DB0E6D07BAA9091FB364CFD43
E378ED0C06B9A1F7C3A7922C85DAF6CAC5FC111A51292D4C7D43E9773F262AA032782252CEBF
2274842EA390B0056C3E0BBAF1DFE11D91679F6313316735FF6820166D4FDDD7E76A72469529
1E224466ED210C82AE79C44A828E7B625F872C5A3723FF9A09E7D77D0555C9984F7EFCBF3B9A
1B156E5047E312C8CB86D26B0E6345FCE3BCF8D0196C95C5AEDED0403733EB6BDE2F6A65CD1A
0FE13DE66A2DDB3F912ABBFE0CD59D4A6D9299E1309CF7494C93896FE76C132FFB98E3315B28
950E21CACA613DA51EA612678FE24DB3B04BA25EAD7E2A020318D2C79619B78BAEB21AEE2E60
69D8470392695EDFBFE2DFBC2274D8BC8BB3551CA84E341419C7E718187260497EDCAFB7F588
D1C7663CCBF8DDF1FE23C48D1A9B211BB0C75871CF8DE53C45A00E601F87BD65B9471CCC46D4
481C5E83BA65153CE608D5FF6595FCED940CC0999FAFB2F44E0055E57E59C73BF3AD6FF70CC5
A0F32A97D61CDCBEDDD34A295A3A7A9DF1EDD9169616D1F8D4C5E20A86DD2FA590B46A974D11
45FE89D1F0664C3E0FEF70DF6D393AE7CF0B662E285C02E9C447672F73E90138E68F216C0072
F5BBAB3943B40D24FB09841E142889A4B927E4A7F762E0ABDE430D6C4D8026F76A62B3B35BF9
53B1EC19932E8E24EF20D2A50BD0EC86D6C0A61D1B206AFDB625353E1FDC15F96F3A48303DC6
CDB7E4131FB3B6E7D80B1B332673F6D1DDA6BCD90F359014D59EB5445FB90E31E51D9E1962D8
20792C2AC64E60125B0EE5CBBE02AC8BB9CA43A2961A5012E0BAFB42DA92DCC8948B043F0F98
C522149E57FE699C9BCA6DF84D5FEB2F55C49407AA52345AF0F2B39C360876D5A6FD1C3C6D42
82F070B8AE2DD3BB78DD78C7801A235EEF4A700128A9CFC7CC3B122CE69DBF577F6531B7898B
A31A1B915CCACC4B3B1226104877EF805795A93A2F2EB41CCB759441A17E6B7B033094D0861A
5A55F80D94B203FEC9582926A9CB5F8CB395C110ECE72754485D674DF6CC0BB84882BA26FC17
01E3B2530A2D44DB5E8702DF2CDC597A8BD9CC12E95B7D274A51136B61E49C7F920BE8E6E17F
1B20EFD1F6F84ECF575B2CCB40AD7876E8B8C7B083E2CF8253D06CC4F6CC2A5FDBBD8CE6986E
18F759ABB35F7E77AEF16D5BB2DFBB457DA2ABDB2148EEBD4F88DE2B9B3244FF78BCEF9F98D9
3AFEF587269D7952B9557D0EC61FB268980730EF3B6C5CF569EA19DEDD3AAFEC29D8FB9DBC80
43E7C702920C678DEFE3017BD9791D74A6CE7A6BA312EC7407D2771A6F22E3E81EA35351C3CB
BDA7A7A5256C67AB65C84F0193D75209307DA141DC60D87B33684BCAAEAC9047A0F3861EC185
132A14F5F48F19E38E132FEE76B5D7C70AFD29FE30411C5B7D624BD75FBF27D89844B1845F02
7B866433344AF2DBF37587F2144E40358096A2F6CB884595E57C3A21A1B5FD1A9E007C530FBB
2FA384169531124511C0E643D093478AAFD5CBDEC5EB0EF47546A893EF0D04E30A89BC3D4516
351662F937F26C80CA874E471EABA85AB541F51FE6F94E01BA628A0EA320FF000A2C3B93162B
40E33F49C81F759B0CDFC167B5E06A6B2592D78794A4A91A03F9F95AAB96850F726DE1782B03
F66CF1C647872FE423AB0DAD21098C19A267859AB150D8CEE49EA83C0984C348D06E99EDB60D
797683B4B5255E3C521619DA2C26038BEEA2C6C013383A30D6155C3C6FECB3FEBF3205D291B3
E26CB6F76AB6E222FAE350EF49B9C15AB1DBCAE734E377610A27B1013F0AC3B11E9235E952F6
C65DAEB43581FE06E04BD94DBDD42AADE4CD6B475DA642910A0240BCFBB2848039B614F11B5C
0DE8B157BA49EC715748F2857009BBB3A0B550B4EB88631B53A69F025F61E4F0A1BF13265E20
78C6291C114B8ED63A7F3A2D3FA6EA7BDA7445CE3DFA913FAB9FC964D6A5599175CE8EDE602C
7F17CC5E9390AF0D3148FBE8E7D5C8780DF83D34E4C1CFC0BA9DB11975A171928147D4053086
BB7A29B4CB6620278E5D7D42B5778DB639D37D3149B525FA9A2B972D3F33A2E6735130446448
EABC73AD3E00E0B2F5E774ADC1AA4E9ECA4C0E5DC2AEF0F7DAA42D37CAFBCF8FE67CDD3E7C02
413E617562850E2EE2E68744895071D192B4505470D228C8CE86FF4B650F07E454F8DF8F5376
8226231441DC5A026FB268E920C71680BB1426E4FFB38B27A019398C3CBBBEBA91C4988E10E3
D873D3A7C8FC4FAA207B94A23E653BD646505B8688530D3DD734EB22AEDEAEE8274FB964378E
744E82C76A1E65E40A60DA47189ADB7FEF7006F180C2AEDE96672B55E12700D795951BFE14DF
F7EAFCF483E8036C07226D1259883EC8380404BA3523D786E55685878EA1CC6F9D2B32DD91AE
126BECFDC77B9825D602E3F18EA08021413BC95E5F64A120D41C719CD786BF2EF3E1A9B5CF28
D80F65B01191653515BE6B53E59834541465F45839682F587530B63A3BA92D74062042AAA119
12B071EC81BF6667D22DC7302F0A5299F3F3432FD03820E43BCE1007BBF0620163A0AE9C1A62
B6FF44204FFA819F9D85849D450ABEFF5F3EE19B3FCA8EEB405ADB8A05C4809BCA050F846975
C56B5079AE720299A7ECC8D846776048693005704658E43640CD89E6149093B4778AB677B379
7DE560AEB7E09DBE57D723A4AA62EE8C42A83C10418133D262E5E9CBD39532F3881662FB84C3
8F33ED685443965795C725956506FB106FE0960832A2C292560D3A43EEB72F4355B836CF5044
767477AAD5346469F8E4E90F712DF820A0B7183C0FF090444A994D81E2941EA3C373282BF57B
9952FEE56B1B0B7AD89AEC79A85DC03FD2A35F5B87E061D15B65A48398F836788F6B41C749DB
F425391D99F0B31420DEB5C800EE281A427DB0C1FF7E03105C434F95907BD74775C980B4AB46
A88652C8D59BE6CDB3531123CB25E9AF5CDADC324AAEFB9F8DC7E1EF4D288C6DA52487B922A9
C9526875CB3E528AB79122F9886517E892115104A20A8EB4CA7628083B24C0B0F0DD2BB0D35E
3E1D3BD0D50135F7B7F1F5FA5349C9953C4F61F00EF5F11E662AD12E8D9F156E32B845FB8E12
1297658DBFCD943F1AAA74F38D43EBD080C41DDC92101722D829DFD3EA37DD5120803EB06734
6B636815A8738403DBC18BB8D8164A8E450A7273F8164031290B465A44A268CAA510E9EFBB71
114E603718BBE415F2426ED24BA413B286C42902D8C5E483070D3A3C57058E6D640369797383
5C78166A00C235F8B4A4D155E723010F7500A7179625D248F2DCD8A368AA5FC85600143AE81E
BE8D901EF42702D30AA628595AD111ABF0E1E06A7939420D648F03FC840A51919C588BE0F7B3
BF71B51EC7DED081D0E2FACC72D65C77FD6864A2A30748803D0558ED2BEC1FC3A91710CC9F6B
2C8A66F8C4EB43635926CB75B89AF438F224DCC5A542C653790E2CB2831E6AC5590BA51EFF51
40C5F620102ADA7E964D21ED4E7AA39B2735E67E1862227C6E1DA2210EA7080000E90162F5F5
2677F188D75022B9A6173AA3F4E45449348EFA7A4D119A8C4682A1E205DD922BD9D65A5620A8
D9D103B853D56B872122F3B649565C904E6284D66979793B16C853BECCF478864EB043CFB096
42F0675D88E62AAA8088291E844F34AE84CE4A93721B4F262E0BFE50BC17184D4A2A469FFA94
8671A565C708A79A8DA61041C5F60B1D82A50C52A6E145FEBDBC69CD0F32D81382EAB87FE7EA
2EBAB016E169E5092C277D28A0C1197B760AE2EE5E307FE6B23D120605E03374AFA65DE773C9
B543D6B6321732A158873823AACEDAC38B2AE5DC0DD9EC0BC159C6861C99B18722B6C84CE819
07EA32F1D8434B6CD6C68523720859F1C1663A921B7DA0DE2A9775B181AFF992AB12E1A1F3E4
54E7342B9947D893557DEA500F36598D00064657C8B952E299D679BA20D0583FD6869F131495
6CF2D1D8E81A0C20556F28F8729ADC075535CF1006D8F1750E479AC6066823B31E969ACDC75F
62EF2704DB581A7B4FBCD22ED0A794B52494A69F4D57816E604BEDB0C1CEECCD3F80B6B50C76
065503F13C1DD3834D7DB2BF297B0C8B4875985310DDF076F0D6721FC205C9C0957E43E07EE2
CFE21647A2BFBAB8136866C9C4EC51706D04E2408E72B6106F02085E5213C5D88BA0B90E0078
FCD4A4214120820F0809736F4E3C06C6E0E6B4468A4089236565AD25A85730BFC3E476E5F0A4
DE180BE7A504ED02596543DF24359B7EAB8E5CB1AF98528D4F0FA8DF2EDF90C2C6D75600BC94
61924029635FA8E2BF07BE105288333A93A0A70A6C4A7F6D8D5F3EE677A017478747CAC65A57
A0FAE14371CB16FD6C39BAAFEC9AEA1CEED0E66F30E5F4B5D0E8D9D56DAC6D552163270CEDDA
49E5272BC389831BF07FCE638F7299F5C0FE332B7E29089D77B0140604B8AC0377C10C002046
8F250B3F03BBB37DC29F5B1CB2189063B8BB0F278AFF414A86A2F8A18FF13EBEFF00B4D723E4
90B2947195648367E0A7DFBCED6EFAA53EF849C79DEE21E5665409A44422C3A36FFB74FDFD10
17D31C32F9E269640AC36C3A519DB5F76198F1AF12F71ABBDF8CE85E7E6C2ADABE4B47897CF2
4A1C7B5934494F07790965C18296B977E332BD853232F2E2BE755F36AB8B1773964A689E1BA8
48F9F7F01BC585E125F00B90576FF82BB1BF90557D064D38079520D19DAE87A298514BAF1ED0
0B89467F5FD445762B80F1EE8E67FEBE8B5B2558B32CE738201712612A56D824983EB5403A70
6383D135BA5F1EDCE9833B81465B34244901802B7684AB914548C88C32FE91DFB0917751D843
5058ACBF0BB78D11118F14A0B9411BAA1A6E04088543E99B70130884BA971F4DD03F1AA3F9DE
4B1935663AAC294C9597AE21EB145DB431FFFDBF163B23F3C2675662C37CA63569A818D47B85
3B59983C8B6EE24560B2C7D426283995D86A7DFEC4B6558BCDED8A74D214BB6C86CFB902CEAD
F6C5FEFFCD06777DD761F9F9EEF09E9A510E0DA31C3B847130961459642DB3E533407A19AE36
00973E4F70EF0912C462769AE399EC9861AE5D2A243CA6538943520DCDB2A86633F3D95F1F14
E6D63126FF361FD287539C686CA9A6E4B46154467CE9CF10EAA3DE0EFEFDD09BF305A5584C29
DAC82DF9418734B01CCCB57666E0EB5E5617EFFA3059FBEC27D3DFF8DAAD45EEBDADBD272AE7
9909A4CD3476F9E1275298429DDA620C15B1E229135A472B013F5457269B9682A3D41E20C66E
EB7B874F26FA9CE0B2C8658937711366BD4BEC4F30A14BB1FECA238CE9476D66D1BF4259941F
61A7DE0FEBA45E5002A9AC44A7587FB206277C01F479D7CFCE8809687AAED92F7D148432CE8B
AC0AD62DFF7640554D59E88CD83022A8A42D2CAD6EC197BEFB73669DB969D468E7519943F53D
D324F2E9795526537393C3E5298B9F4E9961A182A324DE0D8109539FD483E1C6B0588584A30C
B5052487BA59B78E2959B3A2BF30DB1374D585BDDA52E088AA672AF40A933C94CE9B9F63FC83
ED72B19AB818CBF269FC03F38DD982A48B8206307A10E6833B3CD33869526F10FE1C92F7D0DD
56C163CE8F04442CB0DF0E496F2A1DCCBA88D0BF260C0EB856E081EED167C6EC1D8105B2D3F1
73D367CC27D0F26FD89995A2EDC6D1A215F57847F7236753FBEAB4954510CA68688E51034121
F2CD0D46C7B8E89E138FC4EE229245D537F8F5009B76D6117403E10DB46109C7B58A67E0C14E
6347DDE8242030734D02A5C3986148528BF20973DF3D17DA67E53334B678643F09B7F887CD90
87A6F635FA5FAD0A2EE43668A8B1973A42866A399B280787809820D0AB51787DF2A3907A564D
10FACA4D9B6349C60852C06444FA49F8E2563ADBB0EFE7B8250142BB06FC4C93C81BD8B51F85
86AFCE9678D4373ECF051908E3435470C360935180B80B2C03B5033E2AE1B256B426E09FEC5F
902F7A8878B3ADE833EA39EF3D0AAC1160E1AC3FC15170DC3FAF6D17664E6292C51B268666DA
DB416E5738176D6CEF2152B529C6DBEA6E563B5F7DEBDA3E49EE6EFCB88677EA2AAD003CF528
6B21E648EC332F0F0579EE648925B05D50261FCEC1BD57A22E58595CF326B5FDB2FFD9B8DC79
4C5E7854EF9EA34411546D28C5112B9DE1C25B861233341B2CC117C9C310160F612AC6F13F53
4DFAAEC92D6B2CBD9C3F3C0CED06B910260F7A2DD09B1B9D44346CC5A7D10B4D637275D505D1
301078EC936B96BCCD9A2B783A93019C5B769C15636CD94E9D4A24BEA9521A41703FD6F4EE8E
362FE33E21EAFF8AE02DEBBE9D9B379B7AA0AA0FE94C3320CA64F41FE488FB58CCC5F13314A9
F8A8428DD1D713C07489BB76A462E9C0E237FA5FCDFD3A0349B6B77067F055B7FB0F28953384
537535177D190465C354DFA1280FB3E804D3FC0D6E2FA88A5F2829E9AE07E9F7844463AB695D
A17806C271E20C58939A04B5F8DF439659990D8D8F885F3A7A43A4BE49C7ABD03DAF5DC78CE6
6ACDE634AD08C33363EB642ABA7D9C34C71C74CCCBF7F4ADF9A201E203F6540BC467DB200646
9FCA0ED2234AB1A31E73FC05E8D8D906E40B3055B3696D72C48080934CC62E8E850350E70CB9
558CEBAE7EDDF38DFE79FB501A6EE6676F9B7697FB4A90B84CE04808434D244ED68AE441F19F
FCB2E0E62DB832C31F7EE26D90CB6FEA5DAA44C297E51E6F9952C794562BF286BE8727262E51
5DF58D26BD9B97A5ECB5641D517DE35941143757645D511409808347297FD5D84E4BC1595158
9C4E272C6DB003B51628D3753DCE430C6154F4A7C5009CF5AA61D9CD61CFE3398701B65CAFC9
372339E6642D01C461EC04840A4F37E8289A232B1C06D659AB081C25CC56DCB1B914EDF4C7F2
3CA7598B264309A0CA15F079ACA4F69630C6AB6192EDD8A2350D3D1F239FCE30CEC5C7597971
6E22A6B3917E8F0A05D75F8D1EFE57E71836EF46D41E4CD87F11CD8857A3821E6A7E4D596C39
739424E37535699B423A22CB07CC47041D7B97260181794435F38CFAB11A7F571A725D084101
07FE3E53B16CAFF56F14B35CEB1363EF20271620260552B0B9FF5ACC9E8C508A0F07A4768AD1
77975F80D7EB3FB92B04A9AC5FCDD9738982DFE4B8DBD646D0F1035589116E961E1000B677DF
7B598EF17FB7442E07F625CC07E7B7BD4FDFED5CBA26EF286DB92F99CED631ADA9B6E4AB3654
C549D5539A2C6B2BEF7D9685F6C5BA2AE5273D15CA66EFC6FC14B3DC2FD47B50E6FE3678531F
E11B861DA29708943D8914EC5B164EDBD2B04DA634314AA7EF8158C3F4311CE9FFD5973DA940
22C33E3A69931930572FD8DA9DCF8AB915CFF613E7628C5773652D55C64E1DCEAE37C879FC17
A35028F33B8D14731DC832193B35D6EAE7B2B5BBEAE7DAF05B3B34CA3235D81FA537EADC80DD
C32567E15F80BB2A484CA51AA8F3C853696A740C271E1FB34D3DFA72394B88ECABC1F4E92CDE
907A139A5B57406DAA97AEA576412937FFE4E2689853C7B86FD869270B2FED848BDB95AB3E04
C77836021AE12BBDFB0BC68C09AA4F5B607D8B724C24CF6DCF4F54222CEE4EC643F1D4024C39
8ABD99169DE91191911AEFA67675C21D539DB7C39462FE640C5F9C9EB684C6037315B548DD49
F0C35252F2E9D5D4571880E66CDE49FA9653949D2F28AD44426978A2127122CD77B607E9D03C
74D9DD7D11E4A9AC2E3457FA9C79DB76AD398AD5743F6E077C36423E0DAFADD1D391EE4451D3
F94EC65470BC74FE2D2252F0540BED609F760145914E9437D9CAAC61BE91F76C5F1979C9C6A6
F73E690DDADE3B1295251F0E9DC3100CACBC3EC17689A8CE1AA3089A387B2727035514F69E27
048AAC20A38EE49ABC7928D0109D3B230B37F6092388AB62CA5B382DB76922CBBDA2D61B5745
6880763654B4D83478DB9C0F63790EA68F5C154EA4853D02B9A849FFD65684C368E68C6CEDCD
85BF1F041EBA86E9BDB490CD8CEF298DBA42ED4FAFD561C2CBA47869505575220B8E3390BA7D
411C2BB7B16578A834BB1504CFE2644713BB30F2C76D9DB397F45967B8F146E7C4782B203A97
BE20412D4B2B6D53511525292E48896BC91D3891300E48DB9B7A650DB26FDF8992063729A8FE
4E8C6F786FF4F4BCA2018C2861DE6002A8D4954BD7EC80CEAB7DAE6CD07586E733B1E862DA8B
1D4D2B0381058A810522C303C06AE34D5EA6F05C97B4FDB3FB1DEE799511F2EA9750D53E2A1E
CB6058C9988B55BE1E6F1B682C689C996749691B6057DBCEEF6AB5EFCD604DF7420EB44763FC
30B4812891FB2B67402A24DEC15BA326BC89E6C574597178EC7CC644FBDAB6493E545D89CC86
BDF8826284E8697D2417FBC5630CFFF686E9F8F6C5F7788E975FA9F201FFD1E99B75E69C2395
F2EB3CD74E2E61B44049DF0B65F91195233228490EA9B9380800C1B43905B862770DD378C920
CC3EEA51351DDD3EF6C68302F96DCBE3D740F4A3E359419599817FE10E5EE241B516A7AB852D
01B570CA085D306C75BA899A5BE0F5BD883B1A6EDFA8EA72E5F66878BFE1208151032ADE4804
2F2C7DD0D66220F5EF66F4D3BEA1014EE7327242F8A8D948750934D22B7C36B2CBC01971D5CA
B439BB320D7831FEF3C9785645D9996615DB538084C5072F2D20F6A8909C248AA6D34DEE11C9
1E5C41C931DD5076C9CE87398A58AB06A1AA7A07DDAC01B730957DFA34FCD86188DBCC7C8A94
101F09209E7B123FA9D671222BB65EAB845F7787EBF82A0F59A7EAC3CCD936F54A048AA9E36C
983FA1376E1F825FE112D4FAC62BCE3DCB285C5138215EEADC3FF9504496AEB0C443DC9EB28C
1C3F27BD1C449FB7ECC661697186F9C31CCB922F2B9C9CD4AFD63BA3CD71A95A52CCCD50C9C9
BE17A47D3123DB4898A75275D93D74EADFE72B7BE3679FDD9DAD4C885196194DBA0D297F8033
1B1471EF61A839DFB26FFF95487496B4280D02CBD88C1DFABB04F98207ACB5E5AD8B4D4D26FC
232FE653E9B30BD50930833E2B9D72A7A3C57C9744A0992131CF0AE770788FC6376FB187EB6F
1605CAD55B40D0B9132B1799170BA18EBB01A6B92D5CE2580E5D5BC15B14113CC32643C74805
17AC33E95FA1B318328613709D3B05296982772B4784B762103E906EABC30A8C542598B970BE
13D8F79EC2D4229118B8A71E708F049B728205008B75CC96661B1F19CB27320E6231644CABB8
E8A3C07ADD08A88F5BD1448FAECE9C2E9E959FF42AB856C9F0C45B170D4BD63743867FF08D0B
C568D473801E2B40F9E99DA8DF577732784B52FAAD05893033ED069CC2996540E9BAE9916E13
9276031E66E1ED34CAC0228B8C7B8E0E0A8C9CBDEDFB20E406D5C2698733F1912BE83FC517C9
268D3287C66D5059D84F52604387E0684850DA394D1F2B4BBFBFDECD45BF88738074512A1905
70057E2275BA2803036A91F9A32E64CD7429AAAE7DD6D28C3159694901450896D483717E9ECC
4820349ED3E5FDEA88B1F9AE1A7E9A9090DADB0DEC035EA6EA90399F3A942E3401EBE5B483CF
0779ECA7685E8D278CDF6EA2FBD2A7CBF18314F5257756CD3E342479E3AB75A6DFD4F9D7C3B3
5AE5042A2B7FD3CF5C93ACBC3167BDC9A7F0D25D0CEC8F73D79A98EE89A769E5A41AAFE97D55
688F39C661B575A6601ADB6399B43DC5064D54F07E8299627A114254B11F1E8DDD1E7783CC7C
ADB44A96E8E54CB72A448CD387FACC2BE66A5D9A4583EA6B1C0E4E7685739E22F50E52488EE8
D38903E9BDF9CED151FFBAB79C1E159A06C11C70D91E114ADD520627460CAF3E57F77063FCAD
E73F05C563FB50CBF0F2913B6899926A6BFD891E986FC06001C9D8073A781F0981FE9D4C4D17
E49D1793608913238CBE6B973F9493DF8C7123702646446944399EE25B1E5A40D3AE74728879
203E2D5F005C3955382FA450B86A58C68BDAD3FE1793D8E184CE250070CC6F8C21E277DD506D
4C8064374CDB89D4C5EF1859FF45BCA98BB91FFF5E52BC1458991E9C296CE2F8BE62B7A34D2A
DE95004D86ABB1925B24296C39130971B68A2B1228EBA1575447FEFF25F6D887EF14B66FEB4A
377F60681A4B44F63B6A067E367E379628CD7342D80B79913F4797FEA6506A56D47DDD7E0AE0
B06D1E9D52359EC8D1FFF0502D3D7898ED4642974DA2483F6D5F4F48FBA2862B9684DAD5F1FE
7434786F28446523FA121E0445942EA29694E03F2CE367B6EF118288033B36F87CD456F566A4
767D31794A827595EA4E03E805A5D0255463FFA40893B34EE0107FBC6CC1D25215A70FE0F9B5
526E65C3E50376D9555BCC9F60BDD3DDBAFAECEFE4659ABCE230EFCC3BF8BD7F7AC3F5CFEE3E
AD7E09C9F2027DD12F7D85837C9A693A330281D730982A1A2B854D5BB19879DC69A0FDD1033A
7A858BF14C949B17D26B491B123F3DC89E67100412DD9DC767EC66FB690EA83850B80DCFAE83
EB437F5A5F4D22517DA8A21075D6A0CB1FCA94446C8138FE3F28B8BDBEEB3DCD67E4D6C9AB24
9F3BCAABF7EFFCF8162C37F3DDB6DBEA59D74D515BF19507880F19F99EC7AF622FD9ACE7BC07
5D853517B494438AD1B7BA2F0C696E77543EA59F951D5B8C2D364DA095F4B174C878FAB8CE90
B0312FC2D3C62B4A9F02166FA0EABC1FDFA7839A250BF3627D3AD5ADD5BDBCF75B271157E012
F723A51A76ECCACCCD693F81590D99FFF80B21C7FEBAAFB921C0A91AE44E8C3A870FDB69B2E7
7A65D13626A3113B069A1382AEA90C6076D4D4B553153B3CE24D1382117307E0D1195E39AB80
58E44DDB927058A8D71AE41B86ADD4692AF0E852F0C1C92A6B5CD4E7C49C7774BCE30E0F5256
4437E6553B1E6486FE7F8DC97451C934C3939EB137A8EC09486F10F2A7FC4BD3ACFF77F03B1D
92F19A015FF6F515E9963C870DB70977F9B697E07CEB75B9AE87B03FD70CE2008B941924DEF6
27DE71F750EF0F378CB2648EA07174E62FCA3FCBD6C6F1F91C9BA4EAB493E28751FBC57D6897
8F553DBD6759FA9CCA70AE9A7372A70CC6CE35137CBE4C289575555D92083E92DAA3845FB214
DAC0FDCB355A5C08A1F3647C85E3B747F1FEA12CF8AA1D2162E03221BDCDFDCAF4B74DC3ECE1
657CD9819BC34ECA91FE1E7987FD75D3E434307B208F2077457E99134E108E38B99B6D1D8DBB
530D3AC7CC5811A7FA92BB080D8E2A3A09CF3F6452941D063D275E2AC849E0B35B39C63551C1
90A43F3C3564AD6F153C44F67E6D50E311ED225861B94CD108D278A4785632CF7E47E89C8FF4
3114044CA9D48BC15C5EB1E9D1DD3965B84A20522340F81FD0EA60D7B763BDE818B5F9522634
7A5220F043B89DBC6A41DF825DDBBBB05736F7709B752B42A1FC78B1DC61EF6DFDE867C1EBBE
0E7F332C0BDCF86B706C2089EFCB1896B62ADBACD8E2358C75060046A54784A41F66B5DDE678
06625477FCA24396747DB263092F82314E7440FEA9CE8630FCC10D7F4BA6821613F64A16D00E
4BD9BCBB0EBF087C2A88720504CAC249D2B2E67A823C4F34260A7672E8D6E7AD168806779B39
ED0847E82037AF28416AD3B5C5C6823ED9D1912A6B45874E5C67B258DACDDF6BACF5D735899E
A6C62DE3BCF40145859A58C0D744588D070AB252A26E87FBBF2CE51E95E5AF46AF3EEDEB147F
75EA1F698B2D3F582B76381780E2BA8F6F2AA75A0DF480A0B5BCE7C3EF61755A4D9BFD0E9AC8
5CF716407021CC32CB84C16A90C37E83EB5F0D6B7BEB221FDCE3F9A6701F6BA690748F767AAC
D6F886F1B2A54037AE8D8B8546E9DD0ED71C2E03B1148BC4763F95CE2A92F2E29E3820F8BC5E
610200FBCA96221AC7CE0E8DE251618EBA754542FB8EDE1632D48C0D20E882F915BE1F742ECA
7FFEE8F323B05EACF81846F87CF833E6FD877E01172686BF92B875FC6977B3D524E8D8BF0215
C3D72182BF368C7F89506B058A2A6042CF86D8DE16BB8210321B5CB1CF42CC5DD52E29D82D9E
84C957E52BAE129068A6417FAC32427F8C1AF08E2CB44F7CBF3E8B1451DEB7B2CBC772227117
736D41FF4A6772569A4B2C2C48908A1E36FE12D950521F269A0DCC4449DB961E101D3203E88F
7910663B7C672EB85F26562A35A26871947B14D69F7E09153F1CC980F0663644C9EBE030EA87
1399577ECE5CFFD2B7490AC8CBC565359683207E92D072854E094E718CE9D4DF1117A46C223A
5F095DFF3C1721B52502F7366170444898620985ADD2CD198B292433C88ACF33C022AC15E910
E56EB3B821341BF3ADC6FBCF1CB7BA72A2318D1C6D36810768674C325CEC8B2F86E19A0CEB06
64AEC6E1F57BA2952DE44C1DC85FA8AFBA808459222C7608842D4DADE3C8D21210F366BCC222
BA7BA907328AF3304F9AE2A542FE84DCE9B4B3E13C23E687BC3360E578F660F31F948694ECB1
766365C13BEABAC7B589D2ECBA799491735B417532E392D56C9DE2B503C2A49CADA4280C863E
D36CDF747D1BADF31AA0F4C6AB910BFB708F2B3D763C041836C9C4792C8CCCF39519F3B80BB2
0C7767314CFE03C5BE8FC81AEDF28ADA7C576135618BCE77ED1ED0ED1F8804D4DAFC126B4E94
83E61917775578AEBC58EE5823CCE006610FF2108E5EC5E9F6EE0B7B09BCD064A2EFCDF71CAB
DBA10D0FE3DF95A68F85965CF756B19A9664A167263B2751A9B7CA9CD76905A9A16D070912C5
FD49959C93601DE4998FD65F6B506B9F54A16C92BB88C6CA8751CEFE60731952B2B9550251D0
612901121CCA0D3A8A51D7F1F5D9C771EB86BDCE40ACC8F35831C9E5ED6F5D5332275D01748F
88428E97DDD24A036CF030A8D04E3EEB7E86E6B6E6F01BBA6ECDA8B4806DB2DB9D053CA1299F
5C6D43A64ADE6A7A6F19AC608CEC86FD93407D6BD802EA487D7C46E5190B6B34266184235859
250E09C49583F8B856EC06E4C120A0E12E4E305540AC662E171DFE00F687EECB571D2DE79473
E7D22FE4BDB30B9A526F8D68B4129D71FB1620CB3182FAE6B55625F9C2664AAA3FFBF9B799E2
FC92EE7A19C5E37F0EF4B3A6A902CBED35E34E86D9B7E5E41E5ECAE9876A83B2F2BFB7038EA9
0A232AF9F300BFB6A45F55D73BCC6B9E5852395D5CD5C77819C568741A7FDBA3A2FFC81FB1B1
EA0D4D9B450199617FFA0BA8CE26FEAA16F62CBD663798FBB3CD164D6EE6E4F505067C0EC75C
1C5F81C699DF4165633E0708F8CD2BE2280350C902890FADE818E5B31A6FDB45F7A6F8E5F924
B4D670B9E3D4EFE00D2B04D6F433753454B3D3EFA16276577DE3F28D146907CB6C05570A6D4E
DC284093A4B2588162BE6BC867A00CA1A9254234766503FCD3A0E29D9C5676EEABBB3E26FF09
1E21CA21FEB29365A56B6960E1E76796C097D80454261FB63D5F941B66D9DEDFF932793F1569
75004F36E2D91D2203049E5D9DE711D832E78CFA18E2B5348B74AA8605E6425D8099C6B10EF3
E4A299FB76F028BDCAF8ADEA2E908E3535BBA4B42A905F30D13129209DF390139E3C548087BB
BB46621E71CDE60F450A8C61B247CEBEF47B5F311B3CDC843790CA79DD6C72AE76A679AF24D3
6D0B1B5388485F880096057CB6287845EE438CE1E6404C5BE7371EB6C060092ACC76AE336835
1D481984240E51E33061F1D9FCE34A4C65C441F5B4E4D0781103AE0B0CF637CA2FF26182B855
B696605FE114AB2F7DE5F016E396B5A4FEC79F05ED451EB3EA7CF718936E0CFD2F9CE7781162
825FD98BE70C3B16123F8D9B0C970DCB545A7CF6A8CA6B4FCAA319C6C4256B10D6D7AAD98931
40122431F2B0068C10D0398F55FB91DAF2C624A716726513EAADC369BB29FBD1B2B7DC5324D4
08B0B02E46ACCA565D1413D1F65F545603B06E28637C326053DDD2B78DA99BF320DA2A565258
CC9F548B2F87511C628610AA00A6C8F5CC5BA2CCB13BB9EC7F123EA7FC49EFBEAF5D7244EACA
D013A08D3FE370767128687A488302AD3D95067AF108B76886ED16B59E7345DFD143A24CBD75
E828AE300CA7D24437D4A5F0038DD5265D82CBF39A4F8F542D491486F5BC3566931665909986
41510AC914312D22803F242311DFBA932BBBCA9DF24B56EB52209A5A9CC8AF2688B59F348E7B
8FB08281143B2C849BDA4FBDE9D8819E97589EC110FA9F31FF85D07B6D58D58CE5DAC7F22D0F
97468FC790D913622007DC8045E2D05DCCAF592A540870FB4EBBCE3B5AB9818D49B4E40FC919
FB8FD87617733360FCE02FDBA5E57B33461D5E085569129B5B7B657DB36D29E3F87E17E9C7B3
8F6F1FEFD369D314E329440BD0AC26697B34D4E87048EC54F7C381E66C908A658BA83A811285
E93E32BBC6C641BF0F2412C276B85CB18FED61F22ACA7FFDBD37B994314CE4B711B82402DD26
632B7DC376AFD3C4D66BE5E40E282B74FB120F6E4E144D90404C7A4513F2AB180E00FD410AB9
C10CE9B1C2A8EE695E4CEB0F1472A959E70899B1A07DCCB20546431FE6B541A05291D5DDA490
991BD3560490CAC148A2D623903B630DE49F10DDA865A74AF0866C2FCC595F6FD0A0CDC0A146
5398818C46554C37A4CB1E543C4760E804B39564BB853400D0E1E9DAAC58D0577AE177726D1B
9075BBC70B2AECC2F7F44D34F4C691485BBAE03E43E8BC5535CCDFB1CAD1D66F38A49001C4CE
CBD71202FCC47BBD3B224812C677F4F9E4FD523D44EFCFB05A57E45AE2078E3E16DC785125D9
55D3B941F4FD72FF547B069EAB30BFD33E3EFF0686FC7E582CF73EEF9866D6E62C19AA005F73
4CD8FCC0A012F41F38107E135CE4C0AD8A8B81101FE4EF8F32065B2C279A435CF5A032DDCD52
9628509FB6773B475DC13517625705B5D3A9D9EF6995A37DD3F0D6CE5451845CF9151C40F990
60ED58E0F2CF5D6DD71944731CC4ED0FC72641E287E295CBB53AEEFC3FF3EC0A5DBAB8C3AD31
E5F6B339C1748A9E58851F6CDD6BF091227B2835761B7D9A10DF0242A7B61B39AEC0A0697F43
794FBD2A51A66F860FEA136A9D7DD82B42B61710909104E0FABABE3F5485CF1474D494B97508
DFF80A698BFA58ECB590D8C38873724BFBA60FB1150B04282AC1022A1214E9513D27C5D45DFB
C47631BB27CFA2806C2CBB130DDA940B65E75F956846F4E6438773C94E8EAED71EBA5E87A886
DA7A846EE29A43CFC2D130A3FEB4762091B6AC357C973487573A230DFF74A29E203BD78B89E1
729B747FF9B58BF1FE5FAE6DD70E9DA091A330078845363681AC2BA501286DDA2038A0FE2235
C10656143783D50129A728B4EC2C64405B7C97AE562AFA240D35FD9E3A6E034683C60F32AC09
968A76C775D5547D85D7A3168D6F19F12FE132DEEF497E90951A56CB17E543A76F8A526B1B7C
481CEEA4F5FFC637DA5CE954A742BF39837F08DFD7156A4F4E4805494C1957B2577ADACC0D3B
F9B0EFFA5860F454EC947625E70D7E4E652ACF276F57F2137F451540ADC35D501CFC1F7597A1
502A198EA502D67E7886790A84DD9D225E83D9ECAA18FF9EFFA77AAC3AE57D034E67CBA014C5
FE1E3403AE4277D864856FEFADD2EDDB1161E8595DB1B2CA6CCADC4253B95300ACEFFBF9C3B3
32E1FFD71B91898CD0EF1B9F64C3969FFBA7929BAFBDCCCB943373EFDBA057003069C4ACCBBD
82DF6ED1624FB8D0D4B3E561A05B13550A7EEE9AB35E47E9A96FE49EC2716AA68224E3A65AE1
E96D530FEE45054DDDCF949E7F3977334E3A9AE459085F366393D232B2CAA244B029F2BC602D
05B421E14C08563C4296D3E9AD328DC324EA5685E2FED03DFA3D3AFF2482EBB368484FF8D015
53CB8D5686067F99C5617FA2A7F6F183F4BEA8C1AC39AF726341501AC8875104D11DBF241B9D
C9929A8B70ED71BD62AFAB7981E452086163DA2DE543E52D57AFD080AFE373E8E321670F8A47
4E9DFF36441F6C1A4D2AC6DA6E5C9FFC0C4EC9CDD8614C2D65D55019378D678CF46F483FA9EA
0152D9D3A12175774B56B11BE03362D2A36BA13945979C64163A696B0A6CC760BB6111EC47D0
A5260DFA7FD147FF35AB84DA889DCF4BA4146647D5BF8773096FAD1EC8001A6085C4F4721428
F4D4B85F1C03C71576F497D3A5A99392C647DD42F8804DA5D33CCDCE19DF1A16C143C449F1F9
37F6F75B05ABD0CE90E4EF696E1BCEFCD950634E414DC724B0084BCB515CD4ACD71A6CD3784A
402C3CF3ADAAFFB763C5F7E17BBBE19172E4455923BA48869B4D9D0C1EAA623D9C728D887C15
BB8377AC74239EFEF6389EA10C7C8820AAF857BF8EF2B64EAACF096B742ADB9B666D96715364
CF18D88AD8DA6A0CD303557F04908CD28D11ACB9A730AA3A37B6028914674816E6AC076C4559
A84880E82D433A5F5722531B0287F11B24AB4CECC2264BAB4E6601C990E32E1C5F9AEA52CA22
2D2698507A4B235531C3FB7E9FDF6FDA186888A74B902A0EF3457537233376E8667035C092CC
C3797AD2FDFE1CC8BD71C49B91E4520091922CE87856F1DC60A209A9BC9D97B0141D8820E1F3
B86BFF25CD1BA07E5664D32C09CDAF569EC7815F41E0E8731E2FCE769BAFB3A751B3EB7082C4
992A4FD8BA363D0888FF39FF986B80D5568CDFE1DEEFF98CC54F05B842694BE023E0E0507DE4
7AC1B53BE427D31E0DC9CD5963BC3A5183C54D8C9046068BD6F300F4C0CDB8CB779E6828271D
BB9EE44B70BDD1C1B5A345AF01E5E9A74260781AA473199CEFB232EE9C60D14DA8C5D3D22291
A33E592BB7FBE5E9B28F18EF70DD0877DBEB43EBCD12F9AC95B7D46A2E0DC88E3B7D34C6FB32
1593E7FD7C070D44037B2EB5C5E7F40C2BFA3A282D85932C19D3C3D07F5BD37C5CAB34816E9B
008BB5988A1703DD971AC36A0F1C61DE0828A6108A1454A17E63F68FC5604101184FAF38061C
515C0439010551A933CE9701EA75A59D88310C564CA3C4D9BAB34668C6ADA1792C550D08B029
5E6A2AC490B06A3BA9118ACA61A951BDC06EB5EA612992BAD973AD703F5B25D1007F47CD92E7
4D824140CE1A827616DF813898FBFE32C87E692FD324FE78FE9101B1789C8C094207BF77C290
16ECC3734E103ADE9FC7717ED2E6979BE347F72A514B943A7F1101ED25B0AFDCD6C8374182ED
E624911F458A5EA76FA982C3CEDA0195275DD50BE2AB3FA62F5545F802CE3784159E281A810B
87DACB95D4D75AE2EED997DAD39BA7346083A046660F0D63D4416EC1AFBCDBFE18966B4C4C10
9D5C9E9DD7B1202D6AA73AFAFBC169E752DB200656FA28A29A9AEBFA1D4EAED03478778AFE82
E0AA2DB79ED37AF8C5B940ECC6A5FBF38762505235415B285C72DA21F4FF986376E407C04843
24B3A2ACFC6D796FF53B5412A1A73DBDAD921F402308041C18C5D7FD9705959A8C0F5EEA851B
5AB726748A6F0BAE196F879A3A1A5A87F7FC723B7A6E85189914EA451E2BE92B908AFCD4BE5D
3D2C6C1C40984D10483A9F85648CA31977A4CD0F9781CEA0EBFB97B8B07DA6FE5694C32F0B5D
23D58CB259E54C46DDABEAEC138EC1C5922337B8CB2741341E3DE7D141E7316B2F0DC75C1A62
ECD7106141548C31F7B90C0F70106E4E788FCE549DACF492225530F427A6BDFF5ACBAE8913C0
BBD9E3DEA41EE41FC7C13796A4A7D32AA56305F2420AA9BA5C0A0425861F97FC2B0D586678B9
5F28A395FC340E5CB4D0DE633E406347BB83E56126872B389CBD57C359807E3AE6CE23C5F1EF
746BE92625E161BAC1584CB79940DB009844EA870326A7BB6CC8FE67084726E36EACCDD1A5E1
87D49E1CAD01037E58EEA820171B29968A2E4A08352959052EF9CA920E736C7337D85A44A3DB
0DA96FB9BFC14177AFE17AAA27B79E1C92B4D53F4CB9C277BAB838C640EFAF3EF4D95CF7BC61
4F3EECEED6A657E1FB361302500E5DEA28E5B5EE4F3886C23F670090FCA5D2EBA7A5E4B3ED0F
AEEA8A7E6DC041F9988D43F645BB388FBE848EE495B391FBA4C0C3939F3B5B3203A5527F397E
D758BEE1E0F0FFE9A379DE0FD8CA3DB83B767C3BAA6214BE3FB012708F1327E1C96B8FE26597
A0B8403DE77750565067F42F1587B5EEB69D5024A807E98A3BEAF5FE5F88DECEF57F2FAD58E5
20D282ADEBD2051F086B3B871F0839C71379E6A0F800C7022978C84EF6363B7A79B10386E38E
8C7DDF0606ED85B780145FA4428DA212AE5386205BA129AD33D28BCC36A0B6CDEE13C37A6C2B
7456F0C3402FD5B3E3DCE43B479EF0F81DC571FD102BE21029C721E4148729755F19CFF14B1E
0E30CEFCC09D175AF0811BE99498F4A8632B85879AF0E005495FEF5548F2A1F8C989140726D5
4BA1FB448E54549A2434A1FBD152E7DF166EA70953C6595CF824CC77984DCB8F8807B7347131
CB727A589B651697C32E0D52BFC2B36B4C050CF9A1CE072746992EA2ED9B052DE1B2B9A21A89
682B2BE4A1328C769DBC40BD71202D0287D1F8B909AD0E95E5D80BF8314B457A042F304CA330
14D4578D50158EECDE6821D1B672B1973393FCFCD432EEB0EB4FB362DCD9B4B280EB5EE2091F
A3853D779EDAC21A120FA7E03B339CED20115F404C3A086EED187281EC31F25A664811E2B712
351528C4F0ABCE55D29BDBC1E067C01CB44F8A3E094F104097C5A36DCD1CC621E32747176643
18D99F5F5D1EA11959CC751FF9F3739F735A12612629BD3346A840DADF0A61567D880597EDC2
2C70DD8EE5DA9171AE46A8D1D78A64DD2E0F01042CA59FF7F83EC74E1CC0E786DC17A112A062
7640B89D5F3EA4A57DAA15E9965A81021CF737E0108267C404ABED66D9CFFA22E05C351194A4
1913A0D12931F26477A06773829D8AEFB25184755DA27F5DF42B23F493D024CF38C544257830
1EE65AE593127DE8B9E0F19287015892DD881BBF034DF3C789470B567B7AE5130E821870E504
F893CF1844FE400752C5CA00371433A36DE4C96938F6B7FC81D26DEDCBB7AD4F2519857A81D4
F06F6A23A74825477C912968FC03B13DE8517BE24831C0E223A601AD7834A3CE0C7059822D1B
663094AA1D7DE8C524D1E0E5558C664655454A3AA0A5034B50429C5A2AF0C3C862C6D63C415D
92B2B720CEFCEA0D0C6CDEB5CD89EB701CB49CD568E39059E7B7DA7A85B44213F1060598CAA5
8D8830DF46C628B18F908DE0C7360B9175F698FF66C5E4EECBCC0010F43C251001F06C45AAA3
174C8841237E204AD5D7E1C403DFC40F9FD5F469C65625EBA0BC5DF2344228399846C285D9A9
6E21EEBCD9EA38F25584C5D4B7893E64AF5261656E3FFA0CB1FC10CB512328E87AE3C83CA38E
9CCF96AED112B93EF8E4D5CE7BF47E8A800E00C4A0AB624DC3C03089BD5C415E8BA33DB289F0
8E151E5E45865E9CE2EE9E160CF3646726DD25D5EABC96B72A7D2C89178FB92F0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark



%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 80 /P put
dup 82 /R put
dup 99 /c put
dup 101 /e put
dup 114 /r put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C416BA27CD03BF6D3445233A039410A1F7F55E1B5A2B680AE40FED2830CA6DC
B83E39DA6872C97CBE03C44D982C47BE80618AC6E1DD05F8AB3E9EFE1FB871C9
7A78FE15CD227F6A15C26035F64131B3654E17919842C7246A9BD9BCCFA82DF0
EAFE9AE9A70632F3B5F06D010E6BF1D35EB75AB7E85FE638865E5DC6240B401A
93B8E481A90422F7D0D4A260E51DD6435FC6A7C2B91B672FA23D9F875C001E76
E91B3299963FFBE09B172F2CC30E08B95805267B9AF1648CDC1F1D78B25DC8D6
C61A1079A1FE96E5E5C674B6BE583E3134464F5E6D442E7D8B58020A0943117C
EAC8DDD45CE978AE146B8C4F8728AE29DDA7896369D59A6B8297CC9EFE00FCB9
EFCA2D26256C59E4ACC809B0EC851E3DF647BBA2684C5C2EE1F17A327D5B5D62
A97BCD03931315E78D198FB6DD459C46626E9A2FD208B9288D26172F6A32D3C5
E85739E3F643B1E78C9A9481A3E56F770FB4F832EB109554F2EB348CDCD48B2D
1356BEE147D4DCA97733A958BBB60A3AD2BB074851B4934CECA77B8E7E77EF7A
0D718D78C364AB5C9791975F69C45E77CBB356A452E4CA3A87AA882967E6A39D
CCE25DB3353B5F15718678B0A949B4FAFBE38FDBB6FF51ED402B6C9190F59CF6
4C6BDCE94F0692F3ECBDB17981A25C8A76B35157210C4BBF2430421930CC535F
0A1935E9E4E8C6257470ED43CBD5615D36A5B57EBC8EAE4BA2F378C6A2FBA8C6
26A259BEE35C7C47F39E9778AE76B1C82B0476BB8FED48007331AD6EB47E895D
5BBDAC8B1E0B93DFDC9638E98493C50C5A58C6D8489A151C79807C3FFD23664B
2EA04BEDB30378E949098BB35D216BFCEE406C6EDE97A1BC549BEB6A4AD949E0
8BA24C0465732E250920E629474C295BCD8C53B363A2A70090CE62F0066E51EA
9C0735C7A0044B41F4A2D81BA3BF5899C90491B12562C2F9E261AD4EEC9E0FD9
01797748887FC7B136ECDBF6ECB0A10286D6ECB6DF3C2A7EDAF9347CF998FD31
91D91E59C09E094114B293F1F59A41A77612DDBF1FDC6D116FD8CFA09CC8AE65
F6FE0B1A516ED403FF15C730C8FCC664EF5685E7B4D396915F9DBEE64EA3E494
A65AFA815CA08B8160C3161A4360298E4E7E6BD6A37357857639826AEE082AE6
BD45E1B1D9C6979BBC32FE7547CB2C8C30C7A2EB66CEB43D963C3F71077D4DA2
8D008F183A318DE6CB300226DAA8DBD8B1DBF5F084CD2330C1A283C8BC7A3B91
E29D6BC53477DDB4A0800D162C9CF1F359F8C7BCE3C845C5DEE7F5F719387406
DE56766258D06E198ED66BEB2DCCE900E424E494E83B77962EDAF55B6901909F
DE4E12A10BD6626162E173F9BEDCD623B4B6988B3B298822DD0A83629AE46029
33D98C76F22B1E2EFDCDE33484F9CDA543D56803B23F3990233F533F6939298D
FBC84325389C5363DE38FC4146DD3B6E7F592A7E0F8A9DB21F57597E85DEF65A
8A8CBEE0034994AA478C464E746742EBFC7F543720EF5976B857DEC05F28AF9F
88BDC4E9ACC7E1B1880BCD6B0C7D15D54B905B712BF9E6FB1F1F8F82BF973AD1
70C24CD2C27E65F82F31317A0DDB76550311D0C9185BAC2819A3F2D99AE737E0
834C089A80B6C9CA7630500248DE6EAC74719399A087E82A9065B400AC560FB3
7985A9C1B7160A57A0E7410C19EEDD44240C729BD347B9DEED9FEBF3BBDF9811
3D219EEE5084A773B652FF63669F3024F7A8348B1450F5EF475AAFF6CB81149F
30762221BC0FAA4900AA56ED2157BDFE736AEC385A0DC4D3627C4A179800ADF1
CBB5FF090261AE2CF9D1D8BB722EACC98F1B41A06FD1F56F710F3B84A0B24475
D916D398C9E5C1262908B509B2E47A494F39F1EA9654495DB57A91D4C48D8089
BB5BC971D26B510797D5BF9B8C12ECD68B9A403BE8404A8B6E4A3C206C0FE96D
FC1D834E69472D1F9AEF2B347B17801B2EBD1A77A5CED0C9BDFEA05AAD9F94C6
771EEE98AC261B1F1405CB0E7083CFA9085C6322EA698DB70127D3E444F16930
E786E68C8B185F5254ABDB427483D69D6B38577A4DA85F2620B93F9FC70BAFB3
F9F4272DE5186EC3AA7E3F3B1B3157156AA4F0E3C57D530254178A559DBB8E9A
BD0430857022534B038B016598A29C03FBD30A87E5C5B007B1833E42BFD0CF76
196B0B41C7FD4732BBC99A6084ED2AFD41835968970BEDFA1B6272EDC7840F27
A79BD80DB79A3C1C62B34085189CDEE908062DC6B662CD38752ABF6307EAD201
5F4D1DB59AC321A9FF79AC7DCA1F03C35678F2C5C4A9D014E21742994EC22824
B94472621723EB1C662E9AE39377CE729BAAD4908A0C47CEE1121A40163321CA
324734B5551B8B3D1D1670EBF7F4073AB436253FB8A03366C16E7BB4DDD86110
4CE741BD0C84DD0802DE19CB8013E457310BF0C3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI7
%!PS-AdobeFont-1.1: CMTI7 1.0
%%CreationDate: 1991 Aug 18 21:07:18
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 76 /L put
dup 77 /M put
dup 101 /e put
dup 102 /f put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
/FontBBox{-27 -250 1268 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962CCA6FACCEA6B71BEEF7C056FBD376F2F0D0BD6BE0A0A8259139B28B99C6
25119B8C60FF7BA002476930DFDC2F6B1B5A80F1C0E544A22E3F0FB2FEAB64B6
A509B61E1AB96121FBF7F2BC27CDE5B4961048FC2169C8DB745FCC7AF0EED507
284038B15CE53E69AA22CA76C2A208F6AD8614CD500D479A5E0FD25E7BB14C7F
C47C503E4CC38975CB0A8F7E109665FB69EBAE6EB68B2D6FA3C967D5BDE7830E
9CE6F13DFAEBC852DF1D7D0CDD33DD4D5CD6D94DD8AE0D48AB638013CF75A25C
04FDEA8775EC52A13AF40FA41F7354624D917EE620318C702237AF8C0E1FFA02
127F862D4DFD0A56774235A881AFBB8F7F4BCB33811C581CFF38462F669B7F97
1F97AC09373B8F9B7E653013AF8170613E8D7E17235A893BE296A0CD2096B71F
16778388993EDF1B003EBCE23DD02949CBFAAAB5D9F6A08178BFB8ED1043FC1B
0B90D9AFC27B19783740E8DDE0E5E01D116A8CB083C721FBB8EBF71018A9570E
78590CD831116BC0FDA4229F79A581874FC3A1F108A4FCA80CE27FA54A2A7505
5BDB3D52E2595512837732322FB5BBE459C0205EB38439E34A39544F0A1567C6
F29FBB7CF931708C8F92786CCBCBB443D54462B3B4B7BD38E90D325EBC31BA05
FAAB393C7EBDB9EC48E4ACC15A247D2348A62293A726FCA4250B4A407F64270F
923EB516CB8A3B5D19876C8755EB291357E4E4CC5903D1A536A635E267F7A971
B1C33AA7F58E1ADA931C450EA8367B18E20E683CCEEC1BC079E837DDAFFF0D16
23C4AED0DC04DD9458A630FD498794823FFA55705315F0687E7592A5DFC8B8D6
FE2F3C67CF74BFB55F5F67C4A4E0C2D9F6ADD7BBA95A82FCE099FAFC86409003
79B14BF79C7E5CF7BA65CB132E6CC4D8D345A8EB99DA7F1B481FEA938CD77EEC
3A2E7D1C304824A383FF127F85FC1CD4AF5C19406798B617D48887E1375567D0
8A228F4C529AA431FFB4B0795F882D29143E02B84A4DDBEF36133B5C543AC21A
68EB78338BA5DA3905A14E328D954A2DFBAF58A6E85C3341C1F951AEC4C6B7B9
EC05021D70B89666F442832EE314054114E334E9AA125443F14ADD4409BBBA7F
8D1BB78643847387D6904147CFF7D71AB0E93B99469000F01977FE796DF1F513
B7E77ABC2EF98E2A575ACAE526413167B6183648D7092CE2779BFC8037E1DADA
FCE6C4D89A2B81D4DE016076F947697297FCB5755D793CCD7582364FFEACF001
31233359CBFD8C2BC8057FE3553BD4585418FACBEA09D8B325D59822F4783ACC
64770AE7428343E22D1AD1185911AF8A0147FC24F9D620F0AB6ECE046C29202E
D7728178F4094D6BCDC692B24579C8687422EB3761EF00AE1BE4B3DDE649090C
4378FD883B80A3C1BC740DF26DCC3C47C4B751EA14D5D866DBE7DB7C3D126E87
E676B05EAC3870EA60410AB22295146F7A9626FA129659BD98DA32907B05C5F6
9C6CA2C6FAF888427A043B76137FBD9184F5283F068831F1FD47E1F5AC04389F
4452BFF2241DC31BE38DD3ED5A784C8705DABC672046DA4E9C4D82DD9333093D
8F8E60A6F01CCA2A25711469C2E3A945DAAF9DBB76762529B6EA443141DBE1B2
6F5E0E8D66ABEBC45FDE2A3261360345DC3294A0FE7908878E71789ECB523C7A
C2D71025FD0938DFD40A7C31ADDC86083F74C0AED67DE5C4748633F429903A55
451C364AD845C7667137A747CF471F54B05D0C12A8AD9E9EA28917F4A7543505
8A8FA7BAEA6598513745A401DE35144FD38D2CE4F62225C228169C4A3CE82899
3FBD946A1DC1EF3631364660B157E311A0380F1E22EEF880B51976ABA9A70AFB
8423E2B5B6B38751F3D6A873BED8C25905286930E8E4F14D65E45CFE6C6E59D3
5B5205CBCF7E32628DE4E422BAA199066CA53016E018C39F1A3250A572943C94
5D38B49856C22A8471A700D96AA76BF180BB906A6DD061DA4808E666632CF461
EA884A1E4FD1F731582C6A0ECE78EF47BFA1DD50A2506B0CFC975DE54E8861B3
B7C2325043D6AF18EDB8E7990E93C54C19556008865DCEDBD7B0BA4814D2D586
8684485B48211DAE56CBA21A675FB463980254CBDCF1D1DE429F0A49CAEDF1D9
CE20B426D35AE9C43574CF38224B61A82EC5644A3AECABEE7243A15864D36A2C
BCE639D011C41DEC1B1C023E7D4B2D57333E07ED8233B2FEB395CBC0E9763E7C
22CC9E71FB504B1A75E4DF8E3FD481C2527541FAD4077B06EDFB1FCE782FC8C8
48812F43459452A3CD03D4B165809A83767B8B2FAED70F1B5493A1EF7832E562
2EF4CFF2401B507C1915A614467DFBFD268F72ED3CFBBEEFFD65AA2AFB02D2D0
9A25AF945AB2CE4C71CB9C9CC90AD7D256DFE53FE1A97DF497D0634F8C23BD12
9DAD6268B6F0549F99F09A863CB29873770801C5938E5DC1186BAA45D5D7ED74
36306F414A5C682B05AFF70A1AD4056A3C27BF422D90BB2DEC3A25040B82C676
330195D76EA6E4F0FCDD9C4B445BE752971F01F8E5F6C1CA27E882D3DF4EF9AA
6775188B9260D5511E7420F00A917C765EEEBAA4F8B488E5C04255E9EC13FDF6
42A7675CBA377179BE841CD89F9E9228B5B78CD0F289CE02E55397ECAACB6E16
53035DADBA7F4862E98A03BE7C2812A7D38CD345CC988EA02FB0FD6CB2E5500E
F9E4CCCEE96030371EEF534006A280863D632E7F295AF367A19B84621420A816
AC4610470A0D0C2F742C7DEAE87C85B4478D02322BABF9F98803D186C1643457
C1102FA5410A75CA54AED58BDBAC6117EEBBB17DB9A5605FB7932224F22D9C64
CDA79D1050F807648328EA0D830BC8ECAE0AAE7479F83D7DF0366C2B5A192CCE
0B58348014E9347BD8CF2336D13934314BED0D7D61A4A45C53FBBCB248478CCD
2A3926F096785B685E91FE822D9D3C7687E069F7EE5D99FD448E2E0A55A3C9B6
D52A3AFE99E15BC6000254193222C27A76088F33A1CE2637710A16B0588A46C6
EF6E379CB151970488800D4EEE9FD1B06D371DDA6EE6D6A0688AB3C1BB1207C0
21888E0978DB8A15127E8709DE84F0E05D97FCB7BBC2B1BAF123A8DD7B6BF7D9
E7B3B43393DCDDEC1C7658FE3762DB194868982CA86F02E649833AA78E97D729
9B627A8F2574C1DB6FF1C3525DB733899435AB8D99B377356EDE197E8E4CA0EC
9BEED6926C0A75DAFC69DF464DAF693A39E0CEA7B83674F829DEA74B63E4247E
6434B3EF3A986F94B0A352CE7A1DA6F172BB4B886C93C8A1EB0A1F78973CA188
D334524F4038F30E694828271A6AD1E6855BDD7B859CBAA22A9695F981E67EDF
4C09B77989FA23E6289794128CCBBA3F1322CF82410B534ADCA0C568CDFA8832
3127248F3FAE957BFEA4DC77A100C39864B77BF3AA6BC21E2940BBD4481438C5
CC778715F917F93DF689A8E942B99D32313F6FE2AA11D6576832B8BDA4FCC61B
07CCF424917C0AAF64A476E890FB1DCA4E40A2358F1814F93F79F860608E6AA9
58CB24500E78777783D6BA2F90C9EAD6ECE5B77BA21A3980F8AE3E35F860C40F
FA4A9AEB7B2DF9C85CB27934D8017196C840DB0C9989143CC7FF807BF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX7
%!PS-AdobeFont-1.1: CMBX7 1.0
%%CreationDate: 1991 Aug 20 16:35:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
readonly def
/FontBBox{-55 -250 1289 751}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04F3C90C160DE16F890E93B13B46BB2F4971D900BB550E53F
EC6248832A83CF441B4851445885479839AFAA2903A27676E5FDBCD653467C5B
6757DA1B722133018873A10B4FD9D710BBD9BE518D989B67DD4533F8702D640E
B84C3CC2607748FBD7C4BC6DA98537C7A83BCDCD871BC342E318F22902994EA5
8F5F698960BF55B6DD1ADBAA57D96E80D7C28E06447C5E0131B450234C39D332
D6EBE6E76DD503B658866DF4DB6774597338B1DB90AC6C0ABAEBA29CE9656E89
167D88958F3BF262133689AD41A5B9A90DF2838A221C5067B73066612A0FAD18
6A3670B2A69D1731367C8335600294ABC365F383F983A8AB1E37C1C1804893F7
DBF122DA9C3843D1715ACBEF92F28AECE850981251D1D25F13B0DE4320D26157
D14147622A29E7E7F6A037AF34A0197D57AB2A9F7129001F7F636F3B07E0F12F
D409D880B878EC8C911E3B1F24AE299AC56227FB9D6ECDDDC5F8DFCD18D8D0B1
4BF4C36A2E36F69E7291A1A0F738ED27D586BAAE8C04E00D5B3C88316AD3374C
5164218F5588EEDBF966055C55E9781D75B1D7B9C1A2FD2682E7CB88FA9C6889
8C5510BD1964BB505CABF99F91C7110745DFBC4B8A2A15295320EAF27A97ED84
C6E59474C2832859A5E2536E33893D90929D6D2585C73A6F3D316B96DCF60413
912E288DC3945E3A2C53EE1580FA68D40CC336D9AF2EDB87DAC04ACBF223D379
5482F7EF56A8DE5175D4D988BD67040B7B4634B145F6C995009C1D9671217E37
758B75D54A26EF8D6F56822318B256B2C43B27E2892E250E98F438334182171D
99CF39FD8F18FECC0C511B82F9E4B4F4105FB790D635D44CC9EADB5CB62797B7
1804D607C2DC0FA6B8FA3189DF227517838B660B5E092EAA22FE7B7672982DE3
48ACDC77E6B6B13077F9E50820F3F60A48E4AEF50FCE0896AEF90A40258194E3
B80E55D9A89212C53A9F7665AD8C98CB48A7B704BF548A11AB5C99F90FAE742E
2AC4A1F8CFE42C6F69363A76A008E0EB6C34D3C2C13BC74998CBBB4C033F19A3
FBCFD04EF5DB31CE38075000E565F8AEEC19CA472FF247116329DD2F48A1A2DD
7467764A59003C93C6747FD1D9BA1811EC17266C3C76319524CF3268636A4800
F8F4F616E4B27F3EF044512DF071418E9E5B5AFD12B28B5150D386BC6F0E75DB
4981343D3489871DF4BC33BB6DF960DF470D2745A7349D91960C2950AB94BDEF

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 112 /p put
dup 118 /v put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA62096D089075D406
DA26D85EEE2E39C5B7B8744351560D8FA3A5A87057656A44B0C6EE4B4EFE3380
8277D947D080AECAA54AC5EAA48CA4A8D440083C99B6C425B64C934913363097
BBC34829CFF22B2286F2439B95D48C104ABB6F15BD9C543C02BAA1E9B80906F3
98E709E4D642D169A45681E0C39074A51C110542CC37FE9A5127BD39090EFDFF
950AED31E65936442C20E14598F0BFA3B6C2011B842784111020D76D9D154648
8B7E05ABAA458C5CE797A327685C2CF67DE36BD013A05DB41B01540963159E3E
FBB7126AE6231E3C48243AA2E95DF0659993DF1C0DEA4E495547C25D2893E35E
24435F55A2D66CE9FDEFA9A40E38B7DC25D78E2AA6DE2D8C18BDF9A390CB27B1
7E572A8DB0D0565F05E271CF122E3770490B395CD0710083A77BDC82ADA7B15D
4FCBB6EEF0D1E8D9575FE95B6B95517D685A8FBEA16853877991059EA431790C
34B0DF36A8825B776FAAEF162FA24EB17C99F0EDFACC763141BB17A96BCFC812
74142D452C210D2B91279D88C443C2F8967138A65F45FA34328D15C87D38CEFD
39D11A9D53C18C3435ED03A52149BC1B5BCA08A201142248276B7E4F8924750C
8361FDB1FA328B4A292B55A210FCB74F1B7D0C32C7ECB4241699220EBDB1EAE7
37051C55625AD1F9B8F9966E65A7C94A8BAAA7EF735E4FAB04830EF077A8D788
B224C18433977A97CC824F55F98CE5C578A52FF470E124B6A09DF2EB1E99918B
82D8BBDB1DCFE65325453720F02A01A65CCF93D555CDC7F4D5012C1B23E48331
7E848D4299227895D8AAE708196E122DAA1E98C127199A84F062F58BDAD01BC6
64D35CE925F6F04405595BD5A8A008C01248A4D19B97CB47F87BB44B486BE483
5A8BB911F79B093DEEC937526816B7E00D14BF1C354506C4D96785E8BBF18326
5327078D87FD6B36EEDF1DA4998798FADD963F55811ADA2DEDB3BA1B1424F280
5232AEE0D478DFDC64095D442198D9D530581F1C40D357CDE1ECEAA3DA7A33AE
9217CF89BE38E4310670F11871BF62DEF89CE32FC2649522985C27941C58E4F5
0B973097BD601CCCF53F12D13D19855A629CBF28A863E809E0E7ED3292690D80
506F68B4283694A2ADA3268CBB7AAFE4CA280D8B87DACD5744E3657070C90184
D5CB7571CE59EFC33322D2DC33619A9CF1BE2E2A5AE6ABE1C949D8A26DDAD10C
31155176EE406EE59D21B67BC0FB6941CCA4524FD6C183067CD6D07690D292C2
C3FD46377855BEF54E55DFC3E6B975A3E2B674C259A404620C5A8FEC8E9349CF
1BC9E1F1E45BF220AC4332339F5552D2C8F0F258C6CB193C2A79FF28529E885C
4F4BB982B18FF9D098670E31C382D599E0FE7D14ADD1F04B95E0DCDC01C81BF5
11DE70D8761822CEFD012267DD48EA3E10DDB2D716CFED9A744233CCAC0384FA
4F3AEDE966E1BF2E8105A30D405430D950CAA06020D94F4C0CE90B01F6A79DEA
70DB2A9CBD3D3E9505B4EA81DF095A7EB10587973048ABE5C00E7A1DB9B19E0C
57853082B282E1516DA5FCBE8E153784BF534B769CF7E86CED3584902D9DBD9C
B776707B10CCEFA7654D4AC607BD49DB4F4BDF929BC9823A37E0637B1F00AD7F
017F1C2C0877608B69AC3B8B15AA5610C84BABE78A8E91455D7B31958A42779F
81F61133910BBE16E854F9A5C4A381138B2F2DB036938D9D670F6512CA398851
E6BDB09FEC91CDA94120CB15CD7E48792D7C97FECF6002F1996CA861BA988187
4AB27D20671DCABFE87601C77F7F58B38C74CE7419816E945B31531B1DBE0294
DAF2E75DE918
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841EDA6677731A6ACFEC0BABF1016A
089B2D24F47B9D66B677886B90AA787AD865B5F78EE434AA47B7B0F1244A4215
251FDCC670FD01A92226E2C667C2344298D001575BDF782D969D836ECA11E229
C7A17E28F70F9B17273FF243452DA885068A8BCB5165534F3996CBD8D97307DB
593D606C197AFC259E691C242F6E1E651575B6852AAD54567905E6F542DCA109
7F6DA24DC9112FBF7CE48B387953787B2BCB841873AED2DFA83339D39E14F4DD
3A51584527AC3A93630D121E2AE0C89D9C3F2FFA767743B1276BE1E648041010
0FD510F1A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.1: MSBM10 2.1
%%CreationDate: 1993 Sep 17 11:10:37
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSBM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
/FontBBox{-55 -420 2343 920}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6A66A4000A13D5F68BFF326D
1D432B0D064B56C598F4338C319309181D78E1629A31ECA5DD8536379B03C383
D10F04E2C2822D3E73F25B81C424627D3D9A158EAB554233A25D3C6849ABA86F
1F25C1667CB57D2E79B7803083CB7CC0616467F68450D9A3FEAB534EB9721003
DBFEEFD050F3AC3492F5C74162A9A531ECEC0F47610B4940E946D21CAA771D30
A6C27ECBA11708CC46C62396BF9D1990D579D0C394899D24FE7A4382EA18E7E1
160E7283AF5BE17254790628E79FCC206F28B5566075B3A5697D5209062544FF
D85FD89D6F43D6588B242AB2666B5D2861CD38A8CE676503EDFAE84D12A71E77
8405E468FE391F4F3F50D2C57ED55512036B0DB8E76A7EF413ED08673E56DE2C
16A3B65CD478433C0D2F9FEC4E662D54DAA43CFA6957D2A9AF8979BE06F70B68
ED4C8C493D6DAC4971A3F1D010A7726D084EC1074FECD7D12D72AE16C26194AF
21AF5774D9B860EEE8608D34F150092F09C19959BAA670022B9A9F263CD391E3
74DD1D1B4CD4D75273CAA4E37F68C631723E08FA35AD34C0AFB4621AE6689861
854D16CE1C375FD159A337E221A6FF1CFFB5693A0623E7EBB58C2969F590D081
AD92DD9E5322E26D6A15023664AC73A355998BCC48ADD0E7A4BC79790519606F
A1FEF6075033BCD422EE8233B83D1E7C20043280D531223D5AD4D5B41669F884
95CE4D6DDE819B588742B930C579EDF743F2C74C95F717FAA6154FADC3FE2975
F59CFB1C1A29059487E75C48505BAEAD7145667D4E18E46E610C868A257173ED
0D30EAA4C090854DD8378E92D0A376226EA7DA63798F247BAC770FE26D70E72F
90CCFAADF118304646955B0310C65F6CA51BEEEF87AFFE294D08C44354C73E8D
7AE0751CEBE41E68D7E91ED09D4F0FE329150A34D0DEE8F7AED88AFB66381817
364A65B9F1F9C6416198FB016FC8456DEEFED46BF4E1F873527AF52C13078ABF
93CFA6D5E87708787DC837B554561D07B2DB9A89B886A92E7615598566203FE5
96A6D048ACFEF549BBCE51A9EE6CE333704CFD95926DFC740F5A6896D22EBB27
79603F94943CBC04381C62F5C0AB6FEFCE9B71ABFF7FA10A060D7CE5BFE481B0
32E05B3C998C9D89CD66E4DAB5422D01B386769A45984EA2B3250786533E85CB
9F1595D3556EAAE9BAB4793D6245EC8B8D16A47697B51772CB644BD58E81F416
B01A9223997DCF9AAB43FB3CE9C8778039BA2D8E075FC02BB3FA5D66CCA58D24
D9E0261DBB8C11092320D9B0F5CC79FAF53EF2AFD99D5A7732B1962668A85807
9468AF19C570B30F7C798A4DC45D0AAB6E51DE57FCE9F19C468741F1B55ACB6F
C9357E6ADFF2A2E2E84037170DD9E3F217D22DDEE6E8660C7988961BDE9990AB
4CF63B8D0D60190BFE810A5661C8E02D32283B304CB434533629D0D3826548F7
EECDE3892C213BCF51BB7257B1C073A39928D1B67DC28E98CB0F7D1D0B158EE6
D49E399D58B3C6321CC9A2696F019E6F7EC0DADC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 61 /equal put
dup 94 /circumflex put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4A78141CA32C
B3C74E1A0AE0520B950B826B0ABD81766035058ED1654D00FE541CAD1D246C0E
DE85FCD3C0BF7A70B913487B1A527EA823C00C39DB61FD6641B140FCED8580D8
046741D2494B4E7CA1F120CBB0A532BE049CABEB70A39018E8212F8178E93C98
B377AE2880FE39BA0EE29451857DB34964DA26ACA4CD23CE284ACE37D89571FF
CB67DE7AE379B74B32ECACC5F3DE0566CE9EE820E96F27653C75935851CD9360
A83C7EE8270383CB8A80715BC2B62B1F709235A5A73D99710D7665182D461095
B98C8A0FEA44F0F1959055D50BABC7880E7BA1CA4CD72531A240A622663A0A1F
DBE4FB907F97515CB1100282C9A0241F65F84EBAB1701FC105BD25F82807F4CB
6A5EDB5CB156A7D55F64146818245C113C81C6FBE3D3FEC86504CA41BC6F6699
1F7A7EBD203E68C66A478897FD14BC35970B54DF081D264A9DC4F1D275915FF8
B5A45402B0626F532D03E05FBB0386BF5440E32B219615D40DA42282AB9948FA
1E5398DB1E5FC511D39E61755CB2CFEA055FB4925AD0442A4C8335A0D48EE7B9
9FAE435805FD5CEE4A44C400AAA84300AE86B721EFC5B2B1B3E849CF285CA1BB
15C648B9D0E463532241DF7CBA62FF127C064D31F99AC01DD7A630DB69FDF287
1F6F9A3B4D887AD8497C525713A4FA8B3309D1901DAC54061C83971FD6442276
ACAF254766745F03E2CB81DD92A46EE9884841EF9F96BE0A3E5A3248A0D0FEEB
2AFF3F5813175A7818625078E5FD7552BDFB7ADDBA1C20AFEEB15572D697685E
1438444ED2968BB0589FAEBF8DCFADC697D9EF4512EACB15C8CEC52B07E8DA1D
A8302A8F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 50 /element put
dup 106 /bar put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57030ACE57A0A31C99BEDB251A0ECAD78
253AB32E9AD71F7E106560BA511DA17DA9B50B0585742DD7C5FC3BA0B94348CC
1C27F194D9FD5DD303309D4E1262DC924ECA34D9AD0A1C03CA53FFC8036F7E2E
2CD4BCCAB4E0DA5181D6F2CFE5086AE9C19BB6B635ABA6B4A34DF4431D935227
1BF75321A9237332AE45D8CB1F0C5B52ABBF37116E2A41FDD215C30FB11FB137
B125BEE01DA2E9A5EDF196053523AA39BF0DE78D06F591671FB4CDA235EB7BAD
2E0DFEF136325FFA9D409A0777659710E56BA159313C6ED3AA93F165F57EEBE0
F77203A8CF13542C97EB55B2FA31A5DC6AB5C748200E5B6C094FF7BE5067F308
1DA72F91543CCF223C5AFE8D116A77DEE83D1E7290524B7ED9D5873CDFD66B32
3ED4CD8EFCAAAAF6D9CE82989BD5034E5E5CB9FD9C23E5AAE4FF0F059029A878
1CA20D18D6F12D662E8B7482E76729DAA5DCC14495CE9B7138B6BFDF5AA27B74
72017AE59C23B4BBBB57D19947FB82A9D666F323ACDF538D9D86F4FB728F6ED2
AC895795D4361CAAFDE4EC52EB0AEABB5FA8BE22B9E5FB982C512D3029A40E03
C5A61109283067A8BE6F356E70C622C79102057B1925B150CFD076AFEAC11FB3
1F8B95D21BB8AB2E0F35287E993A1561D7C9F20F4ADA016915159135BEA2A18F
CB61C5C22388B123EA78AFFB99EE57C3543F3CCB247FA3DAC91387
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /summationtext put
dup 88 /summationdisplay put
dup 89 /productdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CECEDA9D8BEA4AD62BA3D1CEC6121BD58420C1894CF1877C844D327A
5143B422E8B97D174A2F92F614ABB9FF0B98E3AEC77E3B1258D150077351A238
FDB68C66AB2DB2C2A8636067AB6FB50C01F88F8CFE578CBE2E1DF8909AC40AB5
82195B251D44DD6E944B329ECE6E388F6F07115A0D71E27C7909B574312E999D
D1439A94D8B54FEAAAFFA37F94D3C0FAD287B1C5A91857BB23A142A42992E820
7D83DA7799DB4B121E184A2CADBD4631133244561A00774B4E20EE42BD9F59FC
E07CD6C072E94A9DCE464F0ECE3043CBDC6E4B3382E21875D17DE4855DE05DF4
C5DDC2DB25084696BB0B51B09BB3C545912968EF4E58462E5463D061ADAB3EB0
324EF04AFCB8974A04344C9A22A09745D8BDD80225A353FB05D25F10CCB0FFB8
F5F674A2C16E92BCCA51057A18E3AA89AB405A1F5F5E3A1F46C585971A57DADA
B9D59F8CDCEA5C8697FF57807119D095B178BEAED3375C724DE745C25166F8B6
809DF65800BBCC7BCE14074893A8A59665932C7840E4DDC913D6E7F22F7CC84C
1BF390C4330FEA59FFA81EDCF8552EE17EF2C236AD8352F57DB6EF0463FA0ED5
70F4106BE753262652DD52582854CACD32A39475E32300A394D6DCE3ED7EE360
A51158398890B033994FFD4D76518460EC5B87BDB1019D56D479815966DF84C7
7E480376C12D075DB6F3506B2D0B68C2FE468DBAFEADBE873C3D3182005D0593
9356983AE5C524B86A4DD8C5F2D3D2663CB75C5F181CEA0FAF0484CB7B23891F
C805F3BCA050515495BB3CFB43F59A86824C62C3C59405A34671FBFEC0976BCE
4BE80932F33A18A37D58FB09A9286234D558EB937A8A376FB50876F33DD9E371
76E5B82B9217FCE987A6BF7E7F08CC9B124863F7938D5667ED3AD0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /omega put
dup 59 /comma put
dup 60 /less put
dup 68 /D put
dup 84 /T put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC2B5EAF79DE5C7B96D2D0C1B85F3CF152A5AE316FF6284E59EF5F29A
228125B937322E3F482E8ED8144904E487FA73DE790E9F679871AB3510099F1B
BE96D9790EF2523022D5212E1772002E02448F4A72736E53A0386B92AFF62D13
3E0E925E13461782D0B7FD001DB0CFC3923014C16F922DBC4D0054CC811D5888
1E5C5A7A6E7204B0093D72C13A4C30AB68966D7A62698CCDD610AFD4638F057C
84DEBAFB2271C9B9360F735027904CC0CBCBF3C1C0603B51716C6D0497564787
BC273C658E0121BE63C13187A095A5338711A7972F998FB3BDFD51DF533E41D6
20E56727D1967EA8F4F6758AF6D114EF495F0F4E71012F5D2E9C1791E7303F5F
62AFFA48CAF9A746DD33FBC7C6F52F9F215421505A320520DE0C85014144DB10
C6A8C0D4FC35E53DEDA9C7EBBB9C20BB0441D803CE963B553CF54FE75FBA0B47
CB968EB20B7662061333DCAB8F6123572409390A13F5E170F8349D0EB54A40A8
795BD0C35280D41EB0C089EEB60AEEFA421CA3CD69EECEADBE5FF103583B6E65
4ADABA5074D1F60697498D580392B8200564104B0D9BC5E1E63B8C192DFFC1E5
02819BF35919468632859C6FAACBF59824589E9E03EF068D178BBE66A6F8EECF
AFBF5CA8556A176C4B7C56CED448ED5B81248B24156B185A205EEC4B598BFCC5
FB496C41B7F0175B85CDD2C51DC95F1A569BFD91C714A9F54ABE5BF78D75529F
D4F59E0478D774C9077012B088D0046286B91277D17268F22E7AA8B21FA04ADB
26AB5FF743D4B59F3BC1D79C8DCA197076BBF8DA3168AADA10BFCD48E3BCB88F
95F13D39F90EDFD247B001816CCB7EC6051910E56D73209FE7CE70CD3BEC06C1
CB18AF057DBC2C5EA6057E048F48073AD1CDC06A1750CF8DF0FB2C061C7A7B89
634162897C436907D83752F6E0A5848613A9183C1805B851277554932968D231
E80E3727DB0625CDF6EBA235CBDD2C970B75CC0E56C40901F9FEDDDFA859E233
DBC4188217517E2A28550ECADA2ECEAA0D979548CE9A1A7217FFB3764F11C9A3
4E18D9CAC7895BFF12F4C03B6E418EE4046CC41F9B7E1A4F4BE0CB03CBB8800F
1211AA93F1F51ED03C3F4EFCE3D026C9524DB474BD761EEE2DA0494E7CCE9702
BEDDD15FA57104CA7904AD466728F442EF7D591D691146479ED0ABD05F206484
D9BE68F7B8BF15E7CAB879EA93729D364DB67D35DF41475D69D494E4C1AEB227
1088298BC0B284C2D139ACE3ADE862E7046807F138832AE56166A2541F9A9780
9632AAA42376F414C98BDDDC1344F61AFC2B3A6B7FED11F51F45D67D9D578934
ECAED69238A3E8D1F72EF3B3B9F2C503B100EA36E8C710E9DB91F7BD24194AA6
B9CF1DD015F37E936AB65E85FE0F10FDE82EC51D51FDE22E747516301C404A5A
4026F05C0A9B1133063A43D45BF021AE02EFA852195A5308AA8BF2F11D9B9547
57B52AA944E3BDB63820D02F8ADD475BB4F2BC460D4BDA5482B5E16AEF0BAAFA
28ADD9193974F5F5A8A6E96C0F19998A40EB90C21C5F31B2D959A854AFB83E8F
4BCF85084BBF5C40BAFD63F9943763B5BFE70817C027F3C276F02D535AC0E273
A6212AD87C3137001DEEF071C6B9CB6B457FA5B7D904489339BDA25E3CC17154
0DEDC784D0DF06824954E64E693B41AECC5E93063BB17A133EB8C11547FB8D3E
FB8A0DC84B70CB4E962B86185EBEC95C20C81C985D0A39C35304F7D550B2AAE9
4FD864C3860D1CDF6F853C8000AD6E994F6FB314F799DBF33D1A15D55BC95D04
643596FD23204B0939D055E4422EF3030776916D0100F8DDC7F0C74048CADA10
1987E8F22828A6CF0D35E7BFC8599C673B81A25B59922E1E4775232853D401CA
A320CE7BCA776947E05031CA7D9FBA1E8BC6B93EA5D52F39C8CC4533923F502C
7D5A45FC7EF07967930F9163E69411378008DAA13B935F246B35F82CFCDE9BCD
10DDCD82C3B4634BA2ABA4856A68990614A001B38D98EE439A64E1F64CCC60C0
8E37DBCF9A3CF76558E893175BDFAAA173F040FA2BB95D031508C4C7590F2A61
713DCA6AE5807D973596E9B9F618968DAF38F3E805070449389709899CAACCDB
7F565D20942F498842EB091EEA7B66B047550C1393CA33180DFC993C58EE985A
89F2B1FCCB979E2CDDBA3979BF01FC2234B1CA508DCC41EFB04C49CF159A48DC
483DAE8A3F6DF70E54A717A126C34B2E47ED4F29DBFE0D720C54CC440FEBA999
C70B0D7D33ABABD9CFD6439BE16167711D1CC46474754B3705DB75FA6967487E
6AA9FE7A69E9DD254DBA60E057CCDC8C96A73943031617671CD697557265749A
4780B71A062AB6BF0C87532A2F41862DB463E3DC5264A3C65525420F9E45790F
9EEDC20915AD4D89F6768562723538BDE864FCBC4A394365AAFE054150C255C5
A43B9D93FC86E6BD89E9D0A58C41D44C2A8E392A81C92DC0B673944CF6B1D108
7EB9A83F17D9393FE45E70002DE2BF2AF2FF8F601925514367090EF1DC7319A2
967E15AD865296D49146FBC8F298CB318393A1A7261B2E9315C52BB8EB04A47E
D81D843AB5DB3C5AF575377D5CD33547D9C1D1B67F0233E7BACAF974D39C3FF6
4BC4CB26128E4852BF9D75B4EDAE38A6769B6F6CD5CC5B9526F387C1D8FE79B7
7239DE1D39D4686BEDB1FF02C79E695D420EB8214F14B6D344FF50238CB6971E
2993B16744B67CE0C79A59DA2FF48AAC2CC36181B48DD87E669608E1C427AE3D
D01B5C05B4B231685D533CA77089A024D81D5C2AB1B257C8003ED303F11798D1
1728AA3075BC32AF06C7023141BEA8FAE1CDF43C8C8AEF1557ADD06911C228C0
7518077E90B4C4563BE24F4CC87B2749380FE7C082BF6A11D0634B88BA7B1AFA
05ACD75337F165CBFDABFE90D39517042FA7FC15FF0A1D2EFEE3CF7EF27D9770
4EB7EAFAFE9B1FC601AC77BA322A4429A60122CD4924C2DE2F50B628880C612B
CB811D783CAEFD52AFB9511EBD7FD3FBC4694851B72261D7978B15FAA01F116B
9420D6B1D3733C0180F95E647211DCADDF74261A1411EF7A6414B160EF9D3412
22B43452C712DCAA1F7E44A27ACC352B776692AA9B71144F25E478909292B48E
C03F25C32F476BB5394B24CE38CD259FCAA69DE8F6F7F4BD21CA82A517046DCC
B678A2DF2EAD150BAF24774BDC978D75A858D9FDA95ACAAC0F225D57D3ED9DDE
3C9B59C395B88F492FD5E9BB97A2EE85727FB678A70E989C228C0F1DF462E52C
D26D761B8C09077C1A5B43EFFB7CE8AC447FB4E2327138820AA88B9BF14F979E
375DD0D2BD5DAC101645BD77E3FE428EB778F67F4F287849815EC2E5BA36DC65
9460014B57B110A38CB10D4E003C8CB303F28C1D1CD9DEFE0BA0F6539D007017
DBCF947FA035B7F704B6BA7DED82135C2691A1F00F63C1DB5FAB2A8C3F840B37
FD9671F39CD793EFB40C06B422F0F6A29AF75BD8E6951C3F73BD99C715A5F16D
22F219A84F1861E67566FB30D38ED4CA5AAB301FDABF49AEBF0BD01601D6B565
D7E73AD02403B4C24EA6E6582A098FF1F9C518F012BB475DC675CED8A89138AB
93A3EA093764BEC144EF33DA4F945A2CD265E52B36196E0E0C289F5A296E254A
E909098F3E225F9DFD84A081B52602FA12EBA4295016705A2208BA5E02B3AC54
2BFA92E5227B06E229BA3FD1882B68D8A1A3F7AA643CB63E8A1361B54CD3F51D
ED606D747B91062EE124CD68B144B9165C6F1C95645B02B5BC915C1D3DD60A4E
D90F4F9D1CF96162718F43037A2826F884335C017974B1BC29CAB38E42D4A375
4A5E12D40ECC8EFE51966DC4F7297E1742863E982ACE8A8ACCD03387EF9BD72D
F16E2366824455CD5411C3665D15E4B4379FEC63C33646B7BEF45CC76F626039
041AD95E55A9BAFE3F9845D1096D37D9D6842EF00B1823EE179FB76C17DF0F3D
267344E68AB3D3148BEF7810BA287145DF0A2AFD630EDE5ED3FE7101BA7B0F8C
C03AEE3FB7E7B9F0FC5D0C5B909B59FD33AD7C8511E57B8ADB303DE15DCDEA75
9DCB89763BE7C669F730F31323704EE124BA56C5F6B9176F5DF689E60517100A
09B7C188EFFA1B8877B5B93BCB6764061BC2BB6C7D4A6516DA989A5EB638577C
444DA842062D3C616C20BACBB8FC4A91655E327D068A11130D4D3C27094801E7
DBD9E195BCB5B227B269F2BCC3AB30B01A0ECAA6BB3A559FC190258A381DBE65
2B9DF6785E032A292CD5432008073B56737DBBECB343067A63D0A5EF18CA55BA
4E9E74DFDAA81F1DB72E1AD2AE13A1F0A6F15C077BDF63FEB4BA6E72A3A692CE
8A97EA611B14C988204BFD12507285FFEED5149E98DC6AB9F377994E9064444C
33CEDCD7EBB246BCC7B2F7DFC81453F975172201D89C93B6A96CCE28BD3F0545
74C1042960289A2AA7F0CC4E5684374EAC9EFBF6041B76DC28C65820CD6FAE67
67583F1E8D68B11733F24BC6550F8D11DCCC02D26D8EAB7A2C777DCD66B3257C
3AAAB746855C935A96CF4E4F52DDCC4583375C23996995709294EC4F69FDF75E
D380451E95739B5E51C44F274ED980908D48B5F52B9AD41EB81BCD97B396D96E
210C337D34BD460483D3FBDDE7972A077F223A75BCD3D74D6A80F7B5E937E14F
DD81185C637C97B96C1DA9D06466F6782F4009A68C0B8F19AF17862406AAFEDB
2CFFCB6B31809432DD4EABD7D62DB95A33561C3F3F4C0F52208B11CAD8C16E68
F341E4FF4F74A49D91EA2A61439A12015C69FF2004C8324BB3770778A28FC3FF
6715278D660289E6DC26E9E48E68D18CB5DB3C9ED7866AB023BA2D2D69296AC6
2F8888DEEE15E46FB5079BBB3B1CFBD353A07041BA89F7A5C0C235C373A34B8A
EFAF1E8CE0D56EA32A0786405E06C4D2AD085178687F9FF473CAAF1E7802D561
0E04D1A529E2ED0C970E10334CF22C37899474F1748451DEB4DFC09BA3381A18
9D297F0DB511DF93EB2B413136EB5D245A1B6D71FCF48324E0795CD14B509D1D
28CD3527BD253CAD4B4AE4D5C08597C926F976B5D9A2A3D27E35ED42FD215C60
EC09142A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 20 /kappa put
dup 28 /tau put
dup 33 /omega put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 78 /N put
dup 80 /P put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 98 /b put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676BFD372CE59D8EDF2A7EC350531C1B65FFACFDE73C80EB7D47B02A6
ABB8F672FBE84D8786BF4D5E9811F73D4D92BAAD683A3515D1432B8E3AFFA84F
1BC34BA5CB00DE4D72F9F833CDE8102AB668CAA147F42565618FDCDD452E787D
02E794F4A670CFCBC43F091D5E7026FF01943FB6EC0A5CC59478D14B6A18536C
132DE915EAA0525F0B5DA0819CA59382304A502570539AEAEC9454F44E7735C4
B45BB2F004162CD7490E424388579552F38AC74917763D45533863B52578AB09
4AEAC8EFA93DBA82BC50C07D52DA07463370EC68387D31B1960CAE5EF8758FBD
0720411DECCA115E8B770AA558AB889CC59B3D3001D8FAAEC11036F9AAA7D109
0989BBB5F7E6C2EE32225E3257E27ECDD6FDCA7648EE2D92D5DB883E5B38D8BC
30A1818A80BB670E5A6CFAAF39E476E62069B743BA88637C41EFDDF93F6EF2D5
0AEC13444BF6F92F6614C448E5F1001DE72947E3614E12497D1B282E8278CAA8
8DA4AF01639C92A318A6C2D3BADF0F0B8C042C936B1F5B2B7EAD243EF52AC32A
ECD11378FF9EE9D2CDB6A4D08073CA2FF700767788BD5EE2BF84AAA75D2A7958
37F1AEA94AF3C9FBA912ED0376C4592EA3C6F678E0CA5C469C4851B9AC5292B3
C90CEA8DED64BE028C2AFAE631F098B2DFA3CB1E610291C648608147E3CF8ED5
13943CE0CA7290DDD954EA89556D82783B838F7BDB3656BD436AF0466AD953B7
4307438D4E92B57A49ACB6FACB8CA2FFFAE680A711CA494EDA4E93CBAA34AE26
F3A8B3D314047207EF1639E9196AA35182B5E4296763A0BA7826301125E9929F
CDBDAAE1EBA72C90F11D703038520C41AF0F3A03B8BD1FE4FBB98FABED475BE9
56190920BAD29586C1C39B01BC05DCDF60141A85DDF08DAE11439450FECB9A34
94D942B5AC87D41D642970DA400C56F54755692C754462B7BF91FF39E487A503
28054516FC673AF3C33ECC111C29488589B3BAFF32922A8518D367EF599A9C9A
58686E4718E4E1D4320A59DB83D13C7015FBD9EE29D06FCD1307F45C5EFFC931
D46E9F77CA286ECEFDD37489C383E52C9459EEEA9FC170F01C3DE37AC48EBA4E
1A253C61B1162BDEC02AEFAC5DB4525D760A96F738BC799EFB26D1FFF1A6EB87
AEC9C6A0CBFAF23307C77907FC34352E848BD89F98A4071B823D4C3C213EC77A
916B12E3B24361FDFBD589240908F68BA2C45538B0C7219557DC317FE0CADC02
72F98CFC0D9FEF122FA54E38F52696D6F1A01FD6A253275F7809D7D5583E0A78
E597AECBA40A68C1BE66FD8685B8D3077005663B39A7567B605EBD364AB78D3A
E5486A6408DEF042B6F515650BFC3984F16EACE2B0D7C0C1392B44B4AA815B76
4EA7F680316F712446CD5C5354448F1EEE0DBD21C83DEC19E8E5550B12FADD46
31236433992E61711E4D6EE8D4E114ED5681532679438930D985AFB42CE153C9
5E21B28FAD92FE384B3DC1234A6A1422F8A7C76D344824802B37D3E6A1D8485F
35E3955580F6D6FB084EB946BEF48E398F86EF425CE4CF9352683DCC1B06918B
864D3231D8082414A8A4F3B6E5D3E9AEDA235956EC5D53E779191440BBB17EBD
C0B566662EA2ED6F7605829C2DCD6D12338459146690F753FB7DDB55A1C3A021
D2428DD87C10DA83957A0FD3F598A630FA83231D969DF8C9AB1479C88036CE96
D144312F2FB0C586C135B666C2A27AF6BE8ABABB69AB6DC7430D9C5741E5C57E
1A631E576E62349B47C31A8F73FD997BA10B5C9FC010685E93CA8D3F3B2E6C99
B9517B5F9B54E5D8E664B1584FFCCC77F9C9C1740440F0D49E5DAD5364AF98A3
1D5B167FEF31A59A985287718368B3384AE0ED7E50ABB6202677B332E8155355
650A7BA34D5A4AFC1F317021BA0E13DA1D39F680D4674704BD2AB2033314CC5C
276ECC9C683F376E0456BCE155AA2968BEF32C03EBFAC28A34ED39095D8A2FE5
1E65FD4A9AA79FE864C0E0B521EB871E2322451B2EC24663781414A8E23A3FE9
DC5078019CB7A16AB93276B5A882FDB81383BA4EF5CC8E3E64BC552B54DF9180
F6FC1254614E641FA3485A0727E934691427F6E974F4C8C6B529CF6D53BC1C17
8933F010025C83A5CCAD10D4CB20F0FF0419855B01ABB2F9B15D3BD886BB5406
83B710DFD405D42215F7E2725A49BEAAFB3D9534328FA4035A8AE6C9DD5908F3
90EF393293CA1AE4B5708626FD0ED3A7DCBC8BA4C21990C7F71C35DEE608221E
4D1CC45B21A91FFE496AAF5E05326DE5502434B79E5AE41E1D4FDF5F8513B556
29DD28D0568B501EAC549FA9C0802BFB3A41F14B35A23F3F8BC11E29E1ACD704
B6AECD67D7E8DCCACA0B4AD2421F1899E3302998ADDD0FD48B6C361EFDFEA27F
CCA022CD02325CDC0E3023F138E2E93BAD5538111D72F381FB29BCD4BA9FA622
E31355094E59C66D6BCD4E4C98659504188B409CAB09709640921906A57B371F
238B5CCF1611C95DBD62B8C934C616F110E7442906AB98D922C3032A3C5E7FC6
96833E2013C7229F86C84711BA982FA6C30086F6D13CBECE25A798C8BED66CC6
8020030AB0BD539FE3FBB822B4242485929524C59898C46F1433E6D78CD2ABF7
EFE9E043522C03416CB56F47C3CE400CBA77BA471E82942D5F5657AC30FDE630
77AB05C2C1F091819FDDEDCDF60B318BDEF071DA074B5FC2C2F7B8B48BEE5CD2
44894CA156A930BEFAAE97EDCDDBE6E309E65E281340BC290B2251FB8C0BF203
337E154B6A0C94063E733E90B67C529D581BF63BA54157220D28CDB7A6F21BB6
D4C1175A8FC9ACD7F14224013A8767F6E50910ADE448CD0F44398395B419EC4E
CD974EC844B7537DFCFE6D5764AABBFD78B8F132A9CDE88099F5DB7551672D09
E346290EBE31F5DE354FD79B7F3FE9D319E4D5D0AA90826F2BBECEF3C64F1C27
50BD8F344F50C5BB5B47D58A14037CC512F386CE007D44ADB18DC53542CFDA2C
C23E68423056512A2F88695325A988F29D6B82C27895EEEEA08552F0E5D70E9B
BECA95A217700570517FA8775530A724FE393888D53A0ABC9D83FEE4B9223B6B
A9E030750664C6823C78EE928B0C4B953D15EF59CA5D781C936C7C9A2669919A
3EFBE18F3B4862DF544601E279806C1ED130D1AEDABD35A87F4898AC5447952E
AF0E811AFA47F44E09354D90ACCC878F20A091051C86CEA94DF590AF30503983
027358AC94E7B72C22B4121BB640A7FA7EB6471706660D871E47E0812714A676
62EACF58CEB74D7AC6BA5D45A8EFA9E9AD087765E9C4DA68C732AEF505B52178
000085C9C732C52B26FDC9516F61C5788B53B5F4BB8A10E843AADE3A752916D4
D497AD9087D289FB81F3E59FB86AF7A6592673CEB495FD0FEFB055E7628D6CA5
8290A6CBFD3840F3B7082C2BC41C8A9AB5D8AE04154A64FFCAE2BC8D199DF28C
2D3BAAE87604946EA9185105037E55ECA32BB9994C1CC3924B45A744D32AA80A
91D7D6C57B39BF972BE50F4914F43D82DACDE50169CE9277C9E42D022D42EDD6
4EAD7DFBD580E8FD4DB82FD39A5F5E09665327A903E566369DAC07D4EE91992C
71214E117F686372D8CEB2274587441725C9DA4B68698433A8702B3D5B40E6E0
BF989D9C6A137904AC9C65BC19636A36A7AD96199387984CDA4D39C74D3BA4DE
958B322A02788720DEB981A48F02BF7393811AEB7C5C3D9E175AA7AFBB777BB7
CAF78ABB97694488967CE3B514D26D2916A3DA320D9334014017585A760224D0
EFC2E5C08A2A5485D30E2B4DB0456A8E913DBD2C07020E888DE3C5A836F0C333
A3978FEEC135D0138E9E78DA9CA0613060F5F8DD8C93D625383B6DFBF6813B73
B8DDF233FEB9D3A340B6AFD672A50DD6E67F7C39A462DD97B259ED2A3131068A
73356BAA58EA0B1DFE5DA835C560E90A6507A0CB27D8520C8F73CAEA741620D4
9D36A95737800D555008CAE2A7391EB7CDA8E39B4D2BEF7E47CBD41009BCF5CE
C7A085526F2ACBE681CB83E8EB9D863FB704D1D03E95AA143288839AA749B518
41F1C1836060F02F824F8BC3780C4CB220E49688F0716EA511514295B95B3D60
36C010ADDCC0D991C9C4B2D8ADCB15AA5A655909BFAE53A022973D7EE5C09D87
11CCB3E3AF9DA878CA14A74E24490C3F224A254F83569E924AEE454BA643088B
3ECC5BD2FDB8F780B4C1EE66CA0BED1ABCE3E55B45F3A044B4E8489A721A3776
5991FE23EAF26237F6936FB1A45B1D72979D4B8ADC5EF4E42BAB5168C623BEB8
DDF2D3A663F795B80D44569CF7083C0CAB6ED4211905F3F0EEE84124EF854456
0FBCBAA30676CC6625D3F3245444B3255624619DE20DE76C018D47671F9ED59B
29A48547335ECC06E714E5CBE7F3A82F06F46B03624DE7E515B5E10EB9A88F15
AD4FA35C1C46D0AB6BD5EA3B71A671713E7ECB0D527D8CBD6E228411AE44CBBC
E7279499950CD7B30E9C32CD10A3538F38B68A78A8D55362DAEE5935BA544FD1
733BA80E8045E50401DDB19652CCDC5184BC2B11EA7E866DF8FCEE3550A2C896
DAECB4E191285CC8BCD4563C367A63B8636C03370B655B610332E96BE8CE85DD
82EE5D9F2851ADA0F802A852F142AF990374860A17A703A3CB29BC240DEAF1CB
006D3646DBDEB2E2FEB4F2F9CCC6F240A2D0372D5CBC3385969FE3D83C21C7C2
92EDFE73283743678FCC29B4838DAF6081F30E0FEF3D320107CD8B63B84CE12F
3FDBA60075F369A202DBCF9755B44BBA7191EFB9A45D068978F7996338F35B19
D7309CF8037F3BB1196CAB9E50E4ACA9B7059C3194BE904FA6E2D544A3642094
6F3B5460EE99B800D806E0F08899474A30D4DA0AE87494DB1B74742AC7ABCAC9
CCE52E2F7553999A44F33B7DED660F97DF576991FBE0C31A15491F480114FFBF
849CBE1780276AF92394744589203E91B51E2AB92DB11AED2EB7082F1A2BD3B1
4474F6359F446CD09D5A70221E040F29B90B198A16D063B4DA35F1A6B98FB68F
4B01350711229DEF270BAA1A9E0A68A275A2C56CE2BA6FB8538DF8D8162AABE6
CB1AEF709F4EFE8624B5B08C43BD54A09643D332C93ED5148A12DE0959626431
DDC3613126FF05CCADABD261D46D7B659D7BF4A801933B13DB95D56E5EA1D9E2
A807F5F22D6D4B4DFDD50BC70C46B643BF7C815E28D95D8C7713A0BC6661ED23
93B871F286BB4B80755796F2AB72C8BA3D084A995A316DBE013DC5CE1CCC4D62
983900D98BAA8A20155A448D98492A3EC54D1A3F7CB6FDA010BC09ACDB16C007
B2F45BDE2EB6F0FBFCE8F5A8F22A31275A7A4359F5E65107BD6013DDC0F2D700
DFA1FF1EFF210560194918FC3B82264F3B23B993BFA9657E7EA5EC1E6D95C7D0
CE8FF460395FB46F90E3633C8085D5604DB036D68B4882BB221BC3DD961E8DEA
032F6B422A5E49A96FE87AF999DC889D4A42061CCB19B23C69869EFE7DE5E26F
086B344A0F65C64425628EF600BAF3A6E9CC32D93FD9B2B9825EB77EEFEE03AD
8B4D854763B481599F2A57B03B4B9C6D7EE02BD11557C5A9B16E5140EE400C29
16AEEB30C944568B0B81A5FEEFF1F7EE16493360628B93114D14E4DDDB4B473E
6A8B7303BF0CDE254C9F0D09D1021BE5C8F7B89A7DEFA2B64D70C29226666D68
F4BA6A09EE4FC4D3C104131ACAF568C45C5D5245B82C4B431EF916676F9A816C
75457E904921AA0F638EF4420383C0B6D0CBB8B06DF2EEE6CFC53AC6106433EC
34516743942C86F9AB7461C8AE9F9FA77474B007EF09D44B16C4D8BA78856F2D
ABE471E9379ACFD40AFE0D413CBF9EA1E1079A918530069585EB48103D8D742A
4CD64C080F3D7B5230E7D8C6E3ECF45B9783A14B805DBD8503B6AB4AF00EFA30
6F98CB2704652AA3FAFCBFAC598C7FBA2B4C42C72570F9DF45AC80B09D98EBD0
17EA5A464325EDA5CF3DB38628FEFA6058BDA1A32F2EB406F1F61D531AA136B7
6EBDE04C1BCF6C1F96A811BF035D712332BEA29D4076D61CA2E0A4A2F7BE7136
C741F9179FF7BBA76CE6E92B6CEC5D0D71995CACA2A55FB9848BBECA9142A50B
8AA09A64C72ABBD59DCC553EE68CB2B1E3DCDDA6443F635B3978DAFF5B8203DB
39E81278C9C834C03CE2306BA368A5701DC48B3CA35B801103241F0CFC520956
A017D5370C1D2503377515F895C503649A0149C5F31A1BC60ECF658B706DCF9E
35298072587752708263A0C408DAAD172DA64709072AE962994DC7056501AEDB
28625ACA0CDD374D9CB4E96390AEBA55C0F78182D4FCE894761C9DBC38987877
FBE6E7C2F4D85388B9B65F0A4F102A80854AB590768E261AFF5D8957847729A2
820ADE2E421D2B31F48F1297DEABBC37BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (icml2014.dvi)
@start /Fa 135[50 50 1[50 50 50 50 1[50 50 1[50 1[50
1[50 50 50 1[50 1[50 40[50 10[50 50 50 45[{
TeXBase1Encoding ReEncodeFont}19 83.022 /Courier rf /Fb
141[35 12[38 1[38 16[61 1[56 9[54 70[{}6 83.022 /CMTI10
rf /Fc 138[37 2[25 5[21 2[21 1[37 1[33 2[37 33 12[46
13[42 19[37 37 2[19 46[{.167 SlantFont TeXBase1Encoding ReEncodeFont}13
74.7198 /Times-Roman rf /Fd 206[25 49[{TeXBase1Encoding ReEncodeFont}1
49.8132 /Times-Roman rf /Fe 206[29 49[{TeXBase1Encoding ReEncodeFont}1
58.1154 /Times-Roman rf /Ff 134[33 4[23 28 29 1[35 9[21
32 23[61 43 76[{}9 58.1154 /CMTI7 rf /Fg 150[21 105[{}1
58.1154 /CMBX7 rf /Fh 137[50 5[53 112[{}2 83.022 /CMBX10
rf /Fi 255[52{}1 58.1154 /CMSY7 rf /Fj 173[60 82[{}1
83.022 /MSBM10 rf /Fk 161[33 32[51 10[33 33 49[{}4 58.1154
/CMR7 rf /Fl 136[60 1[46 28 32 37 2[42 46 69 23 46 1[23
1[42 1[37 46 37 46 42 14[60 3[60 78 8[60 60 10[42 42
42 42 1[42 42 42 42 1[21 28 42[46 2[{TeXBase1Encoding ReEncodeFont}33
83.022 /Times-Bold rf /Fm 149[23 55[55 48[23 65{}4 83.022
/CMSY10 rf /Fn 166[106 120 7[88 80[{}3 83.022 /CMEX10
rf /Fo 134[34 38 3[25 31 2[34 1[41 59 1[35 1[23 39 1[32
17[39 15[54 7[52 20 25[42 33[{}16 58.1154 /CMMI7 rf /Fp
134[41 2[40 1[30 39 2[42 6[29 48 40 41 39 2[36 10[78
48 1[49 3[53 1[67 17[65 23 23 24[52 4[36 7[48 8[53 11[{}23
83.022 /CMMI10 rf /Fq 137[37 42 25 29 33 1[42 37 42 62
21 2[21 1[37 25 33 42 33 42 37 12[50 1[54 3[54 71 50
2[29 7[54 19[25 45[{TeXBase1Encoding ReEncodeFont}26
74.7198 /Times-Bold rf /Fr 107[33 33 25[37 37 54 37 37
21 29 25 1[37 37 37 58 21 37 1[21 37 37 25 33 37 33 37
33 10[54 54 46 3[42 1[54 66 46 2[25 54 1[42 46 54 50
50 54 13[37 1[37 37 21 19 25 19 2[25 25 37[42 2[{
TeXBase1Encoding ReEncodeFont}50 74.7198 /Times-Roman
rf /Fs 144[42 2[23 4[42 8[42 32[65 4[42 5[42 42 5[65
1[32 32 40[{}11 83.022 /CMR10 rf /Ft 133[32 37 37 55
37 42 23 32 32 1[42 42 42 60 23 37 1[23 42 42 23 37 42
37 42 42 9[69 2[46 42 51 1[51 1[55 69 46 1[37 28 3[51
1[55 51 51 7[42 42 42 42 1[42 42 42 42 42 23 21 28 21
2[28 28 40[{TeXBase1Encoding ReEncodeFont}53 83.022 /Times-Italic
rf /Fu 134[50 2[50 55 33 39 44 1[55 50 55 83 28 2[28
55 50 33 44 55 44 55 50 12[66 55 72 1[61 2[94 3[39 3[66
1[72 1[72 10[50 50 50 50 50 50 2[25 46[{TeXBase1Encoding ReEncodeFont}
36 99.6264 /Times-Bold rf /Fv 136[86 60 66 40 47 53 1[66
60 66 100 33 66 1[33 1[60 40 53 66 53 66 60 12[80 1[86
3[86 113 80 2[47 7[86 19[40 45[{TeXBase1Encoding ReEncodeFont}28
119.552 /Times-Bold rf /Fw 87[28 17[42 1[37 37 24[37
42 42 60 42 42 23 32 28 42 42 42 42 65 23 42 23 23 42
42 28 37 42 37 42 37 6[51 60 60 78 60 60 51 46 55 60
46 60 60 74 51 60 32 28 60 60 46 51 60 55 55 60 5[23
23 42 42 42 42 42 42 42 42 42 42 23 21 28 21 47 1[28
28 28 65 69 34[46 2[{TeXBase1Encoding ReEncodeFont}79
83.022 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop .7 .7 .7 TeXcolorrgb -392 39 a
Fw(000)-392 139 y(001)-392 239 y(002)-392 338 y(003)-392
438 y(004)-392 538 y(005)-392 637 y(006)-392 737 y(007)-392
836 y(008)-392 936 y(009)-392 1036 y(010)-392 1135 y(011)-392
1235 y(012)-392 1335 y(013)-392 1434 y(014)-392 1534
y(015)-392 1633 y(016)-392 1733 y(017)-392 1833 y(018)-392
1932 y(019)-392 2032 y(020)-392 2132 y(021)-392 2231
y(022)-392 2331 y(023)-392 2430 y(024)-392 2530 y(025)-392
2630 y(026)-392 2729 y(027)-392 2829 y(028)-392 2929
y(029)-392 3028 y(030)-392 3128 y(031)-392 3227 y(032)-392
3327 y(033)-392 3427 y(034)-392 3526 y(035)-392 3626
y(036)-392 3726 y(037)-392 3825 y(038)-392 3925 y(039)-392
4024 y(040)-392 4124 y(041)-392 4224 y(042)-392 4323
y(043)-392 4423 y(044)-392 4523 y(045)-392 4622 y(046)-392
4722 y(047)-392 4821 y(048)-392 4921 y(049)-392 5021
y(050)-392 5120 y(051)-392 5220 y(052)-392 5320 y(053)-392
5419 y(054)4131 39 y(055)4131 139 y(056)4131 239 y(057)4131
338 y(058)4131 438 y(059)4131 538 y(060)4131 637 y(061)4131
737 y(062)4131 836 y(063)4131 936 y(064)4131 1036 y(065)4131
1135 y(066)4131 1235 y(067)4131 1335 y(068)4131 1434
y(069)4131 1534 y(070)4131 1633 y(071)4131 1733 y(072)4131
1833 y(073)4131 1932 y(074)4131 2032 y(075)4131 2132
y(076)4131 2231 y(077)4131 2331 y(078)4131 2430 y(079)4131
2530 y(080)4131 2630 y(081)4131 2729 y(082)4131 2829
y(083)4131 2929 y(084)4131 3028 y(085)4131 3128 y(086)4131
3227 y(087)4131 3327 y(088)4131 3427 y(089)4131 3526
y(090)4131 3626 y(091)4131 3726 y(092)4131 3825 y(093)4131
3925 y(094)4131 4024 y(095)4131 4124 y(096)4131 4224
y(097)4131 4323 y(098)4131 4423 y(099)4131 4523 y(100)4131
4622 y(101)4131 4722 y(102)4131 4821 y(103)4131 4921
y(104)4131 5021 y(105)4131 5120 y(106)4131 5220 y(107)4131
5320 y(108)4131 5419 y(109)p Black 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (Recurrent Neural Network-based Music Language Models for Improving Automatic Music Transcription) /Subject (Proceedings of the International Conference on Machine Learning 2014) /Creator (LaTeX with hyperref package) /Author (Anonymous Submission) /Keywords (Recurrent neural networks, Restricted Boltsmann Machines, Probabilistic latent component analysis, Music signal analysis, Music language models) /DOCINFO pdfmark end

0 0 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.S end
 -138
-124 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.R end
 -138
-124 a -138 -124 a
SDict begin [ /View [/FitH -32768] /Dest (page.1) cvn H.B /DEST pdfmark end
 -138 -124 a 0 TeXcolorgray Black 0
TeXcolorgray -138 9 4050 9 v 0 TeXcolorgray 0 TeXcolorgray
17 241 a Fv(Recurr)n(ent)32 b(Neural)e(Netw)o(ork-based)h(Music)f
(Language)g(Models)g(f)m(or)f(Impr)n(o)o(ving)1084 390
y(A)-6 b(utomatic)30 b(Music)g(T)-9 b(ranscription)p
-138 555 V Black 0 TeXcolorgray -138 915 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 -138 915 a
-138 915 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 -138 915 a -138 915 a
SDict begin H.S end
 -138 915 a -138 915
a
SDict begin 12 H.A end
 -138 915 a -138 915 a
SDict begin [ /View [/FitH -32768] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 -138 915 a 652 998 a Fu(Abstract)p
0 TeXcolorgray 0 TeXcolorgray 28 1138 a Fw(In)35 b(this)g(paper)m(,)i
(we)e(in)m(v)o(estigate)e(the)i(use)g(of)f(Music)28 1237
y(Language)21 b(Models)j(\(MLMs\))f(for)f(impro)o(ving)f(Auto-)28
1337 y(matic)k(Music)g(T)m(ranscription)e(\(AMT\))h(performance.)28
1437 y(AMT)36 b(is)h(the)g(process)e(of)h(con)m(v)o(erting)e(an)i
(acoustic)28 1536 y(music)16 b(signal)g(into)g(a)h(symbolic)e
(notation,)h(and)f(is)i(con-)28 1636 y(sidered)34 b(to)g(be)g(a)h
(fundamental)d(problem)g(in)j(music)28 1736 y(signal)j(processing.)75
b(The)38 b(MLMs)g(are)f(trained)g(on)28 1835 y(sequences)c(of)h
(symbolic)f(polyphonic)f(music.)66 b(W)-7 b(e)28 1935
y(train)25 b(RNN-based)f(models,)h(as)g(the)o(y)f(are)h(capable)f(of)28
2034 y(capturing)g(comple)o(x)f(temporal)h(structure)h(present)f(in)28
2134 y(symbolic)h(music)g(data.)42 b(Similar)25 b(to)h(the)g(function)e
(of)28 2234 y(language)35 b(models)g(in)h(automatic)g(speech)f
(recogni-)28 2333 y(tion,)22 b(we)h(use)f(the)g(MLMs)g(to)h(generate)e
(a)h(prior)f(prob-)28 2433 y(ability)35 b(for)f(the)h(occurrence)e(of)h
(a)i(sequence.)68 b(The)28 2533 y(acoustic)17 b(AMT)g(model)f(is)i
(based)f(on)g(probabilistic)e(la-)28 2632 y(tent)32 b(component)e
(analysis)i(\(PLCA\),)f(and)h(prior)f(in-)28 2732 y(formation)k(from)h
(the)h(MLM)g(is)h(incorporated)c(into)28 2831 y(the)28
b(transcription)d(frame)n(w)o(ork)h(using)h(Dirichlet)g(pri-)28
2931 y(ors.)80 b(W)-7 b(e)40 b(test)f(our)f(hybrid)e(models)i(on)g(a)h
(dataset)28 3031 y(of)20 b(multiple-instrument)e(polyphonic)g(music)i
(and)g(re-)28 3130 y(port)32 b(a)h(signi\002cant)f(3\045)h(impro)o(v)o
(ement)c(in)k(terms)g(of)28 3230 y(F-measure,)18 b(when)g(compared)f
(to)i(using)f(an)h(acoustic-)28 3330 y(only)g(model.)-138
3482 y
SDict begin H.S end
 -138 3482 a -138 3482 a
SDict begin 12 H.A end
 -138 3482 a -138 3482
a
SDict begin [ /View [/FitH -32768] /Dest (section.1) cvn H.B /DEST pdfmark end
 -138 3482 a 148 x Fu(1.)25 b(Intr)n(oduction)-138 3791
y Fw(Automatic)h(Music)h(T)m(ranscription)e(\(AMT\))h(in)m(v)n(olv)o
(es)g(automat-)-138 3891 y(ically)g(generating)d(a)k(symbolic)d
(representation)g(of)h(an)h(acoustic)-138 3990 y(musical)c(signal)g(\()
p 0 0.08 0.45 TeXcolorrgb 392 3990 a
SDict begin H.S end
 392 3990 a Fw(Benetos)e(et)g(al.)
841 3990 y
SDict begin 12 H.L end
 841 3990 a 841 3990 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2013b) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 841 3990 a 0 TeXcolorgray
Fw(,)p 0 0.08 0.45 TeXcolorrgb 885 3990 a
SDict begin H.S end
 885 3990 a
Fw(2013a)1090 3990 y
SDict begin 12 H.L end
 1090 3990 a 1090 3990 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2013b) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1090 3990
a 0 TeXcolorgray -3 w Fw(\).)31 b(AMT)22 b(is)h(considered)-138
4090 y(to)31 b(be)g(a)h(fundamental)d(topic)i(in)g(the)g(\002eld)h(of)e
(music)i(informa-)-138 4190 y(tion)27 b(retrie)n(v)n(al)f(\(MIR\))g
(and)h(has)g(numerous)e(applications)h(in)h(re-)-138
4289 y(lated)d(\002elds)g(in)g(music)f(technology)-5
b(,)22 b(such)h(as)h(interacti)n(v)o(e)f(music)-138 4389
y(applications)e(and)g(computational)f(musicology)-5
b(.)28 b(T)-7 b(ypically)i(,)22 b(the)-138 4489 y(output)31
b(of)g(an)h(AMT)g(system)g(is)g(a)h Ft(piano-r)l(oll)d
Fw(representation,)-138 4588 y(which)20 b(is)i(a)f(tw)o(o-dimensional)e
(matrix)h(representation)f(of)h(a)h(mu-)-138 4688 y(sical)f(piece)g
(where)f(the)g(X-axis)h(represents)e(time)i(quantized)e(into)-138
4787 y(re)o(gular)24 b(interv)n(als,)i(and)g(the)f(Y)-9
b(-axis)26 b(represents)e(the)i Fs(88)f Fw(k)o(e)o(ys)h(of)-138
4887 y(a)d(piano)e(in)h(increasing)f(pitch.)31 b(A)23
b(cell)g(in)f(this)h(matrix)e(is)j Fs(1)e Fw(if)h(the)-138
4987 y(k)o(e)o(y)f(represented)f(by)h(its)i(X-coordinate)c(is)k
(sounded)d(at)i(the)f(time)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -138 5070 480 4 v -138 5234 a Fr(Preliminary)g(w)o(ork.)
33 b(Under)23 b(re)n(vie)n(w)g(by)f(the)g(International)h(Conference)
-138 5317 y(on)c(Machine)i(Learning)e(\(ICML\).)f(Do)h(not)g(distrib)o
(ute.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1962 998 a Fw(instant)h(represented)f(by)g(its)j(Y)-9
b(-coordinate.)1962 1148 y(The)25 b(majority)e(of)i(recent)f
(transcription)f(papers)h(utilise)i(and)e(e)o(x-)1962
1247 y(pand)31 b Ft(spectr)l(o)o(gr)o(am)h(factorisation)g
Fw(techniques,)i(such)e(as)h(non-)1962 1347 y(ne)o(gati)n(v)o(e)g
(matrix)h(f)o(actorisation)g(\(NMF\))h(\()p 0 0.08 0.45
TeXcolorrgb 3275 1347 a
SDict begin H.S end
 3275 1347 a Fw(Li)20 b(&)g(Seung)3663
1347 y
SDict begin 12 H.L end
 3663 1347 a 3663 1347 a
SDict begin [ /Subtype /Link /Dest (cite.Li1999) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3663 1347 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 3718 1347 a
SDict begin H.S end
 3718
1347 a Fw(1999)3886 1347 y
SDict begin 12 H.L end
 3886 1347 a 3886 1347 a
SDict begin [ /Subtype /Link /Dest (cite.Li1999) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3886
1347 a 0 TeXcolorgray -2 w Fw(\))1962 1446 y(and)27 b(its)h
(probabilistic)d(counterpart,)i(probabilistic)e(latent)i(com-)1962
1546 y(ponent)32 b(analysis)i(\(PLCA\))g(\()p 0 0.08 0.45
TeXcolorrgb 2854 1546 a
SDict begin H.S end
 2854 1546 a Fw(Smaragdis)19 b(et)i(al.)3387
1546 y
SDict begin 12 H.L end
 3387 1546 a 3387 1546 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2006) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3387 1546 a 0 TeXcolorgray
Fw(,)p 0 0.08 0.45 TeXcolorrgb 3442 1546 a
SDict begin H.S end
 3442 1546
a Fw(2006)3610 1546 y
SDict begin 12 H.L end
 3610 1546 a 3610 1546 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2006) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3610 1546
a 0 TeXcolorgray -2 w Fw(\).)66 b(Spec-)1962 1646 y(trogram)22
b(f)o(actorisation)g(techniques)g(decompose)g(an)h(input)g(tw)o(o-)1962
1745 y(dimensional)k(spectrogram)g(of)h(the)h(audio)f(signal)h(into)f
(a)h(prod-)1962 1845 y(uct)24 b(of)f(spectral)g(templates)h(\(that)f
(typically)g(correspond)e(to)i(mu-)1962 1945 y(sical)f(notes\))g(and)f
(component)e(acti)n(v)n(ations)i(\(that)g(indicate)g(when)1962
2044 y(each)31 b(note)g(is)h(acti)n(v)o(e)e(at)i(a)g(gi)n(v)o(en)e
(time)h(frame\).)57 b(Spectrogram)1962 2144 y(f)o(actorisation-based)42
b(AMT)j(systems)h(include)e(the)h(w)o(ork)f(by)1962 2243
y(Bertin)20 b(et)g(al.)f(\()p 0 0.08 0.45 TeXcolorrgb
2398 2243 a
SDict begin H.S end
 2398 2243 a Fw(Bertin)h(et)h(al.)2788 2243
y
SDict begin 12 H.L end
 2788 2243 a 2788 2243 a
SDict begin [ /Subtype /Link /Dest (cite.Bertin2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2788 2243 a 0 TeXcolorgray
Fw(,)p 0 0.08 0.45 TeXcolorrgb 2829 2243 a
SDict begin H.S end
 2829 2243
a Fw(2010)2997 2243 y
SDict begin 12 H.L end
 2997 2243 a 2997 2243 a
SDict begin [ /Subtype /Link /Dest (cite.Bertin2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2997 2243
a 0 TeXcolorgray -2 w Fw(\),)e(who)g(proposed)f(a)i(Bayesian)1962
2343 y(frame)n(w)o(ork)14 b(for)h(NMF)-7 b(,)17 b(which)f(considers)f
(each)g(pitch)h(as)h(a)f(model)1962 2443 y(of)39 b(Gaussian)f
(components)f(in)i(harmonic)e(positions.)80 b(Bene-)1962
2542 y(tos)30 b(and)g(Dixon)f(\()p 0 0.08 0.45 TeXcolorrgb
2506 2542 a
SDict begin H.S end
 2506 2542 a Fw(Benetos)20 b(&)g(Dixon)3088
2542 y
SDict begin 12 H.L end
 3088 2542 a 3088 2542 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3088 2542 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 3138 2542 a
SDict begin H.S end
 3138
2542 a Fw(2012)3306 2542 y
SDict begin 12 H.L end
 3306 2542 a 3306 2542 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3306
2542 a 0 TeXcolorgray -2 w Fw(\))30 b(proposed)e(a)i(con-)1962
2642 y(v)n(oluti)n(v)o(e)d(model)g(based)g(on)h(PLCA,)g(which)f
(supports)g(the)h(tran-)1962 2742 y(scription)j(of)i
(multiple-instrument)c(music)j(and)g(supports)f(tun-)1962
2841 y(ing)18 b(changes)f(and)g(frequenc)o(y)e(modulations)h
(\(modelled)g(as)j(shifts)1962 2941 y(across)h(log-frequenc)o(y\).)1962
3090 y(In)j(terms)g(of)g(connectionist)e(approaches)g(for)i(AMT)-6
b(,)23 b(Nam)g(et)g(al.)1962 3190 y(\()p 0 0.08 0.45
TeXcolorrgb 1990 3190 a
SDict begin H.S end
 1990 3190 a Fw(Nam)d(et)g(al.)2333
3190 y
SDict begin 12 H.L end
 2333 3190 a 2333 3190 a
SDict begin [ /Subtype /Link /Dest (cite.Nam2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2333 3190 a 0 TeXcolorgray
Fw(,)p 0 0.08 0.45 TeXcolorrgb 2377 3190 a
SDict begin H.S end
 2377 3190
a Fw(2011)2545 3190 y
SDict begin 12 H.L end
 2545 3190 a 2545 3190 a
SDict begin [ /Subtype /Link /Dest (cite.Nam2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2545 3190
a 0 TeXcolorgray -2 w Fw(\))j(proposed)d(a)j(method)e(where)h(features)
f(suit-)1962 3290 y(able)32 b(for)g(transcribing)e(music)i(are)g
(learned)f(using)h(a)g(deep)g(be-)1962 3389 y(lief)16
b(netw)o(ork)e(consisting)g(of)i(stack)o(ed)f(restricted)g(Boltzmann)f
(ma-)1962 3489 y(chines)22 b(\(RBMs\).)33 b(The)23 b(model)e(performed)
f(classi\002cation)j(using)1962 3588 y(support)j(v)o(ector)f(machines)i
(and)f(w)o(as)i(applied)e(to)h(piano)f(music.)1962 3688
y(B)7 b(\250)-35 b(ock)28 b(and)g(Schedl)g(used)g(recurrent)f(neural)h
(netw)o(orks)f(\(RNNs\))1962 3788 y(with)21 b(Long)f(Short-T)-6
b(erm)20 b(Memory)g(units)h(for)f(performing)f(poly-)1962
3887 y(phonic)c(piano)g(transcription)f(\()p 0 0.08 0.45
TeXcolorrgb 2870 3887 a
SDict begin H.S end
 2870 3887 a Fw(Bock)20 b(&)g(Schedl)3378
3887 y
SDict begin 12 H.L end
 3378 3887 a 3378 3887 a
SDict begin [ /Subtype /Link /Dest (cite.Bock2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3378 3887 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 3414 3887 a
SDict begin H.S end
 3414
3887 a Fw(2012)3582 3887 y
SDict begin 12 H.L end
 3582 3887 a 3582 3887 a
SDict begin [ /Subtype /Link /Dest (cite.Bock2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3582
3887 a 0 TeXcolorgray -2 w Fw(\),)d(with)g(the)1962 3987
y(system)j(being)g(particularly)e(good)h(at)i(recognising)d(note)h
(onsets.)1962 4136 y(There)c(is)h(no)f(doubt)f(that)i(a)g(reliable)f
(acoustic)g(model)g(is)h(important)1962 4236 y(for)25
b(generating)e(accurate)i(symbolic)g(transcriptions)f(of)h(a)h(gi)n(v)o
(en)1962 4336 y(music)21 b(signal.)29 b(Ho)n(we)n(v)o(er)m(,)20
b(since)i(music)g(e)o(xhibits)e(a)i(f)o(air)g(amount)1962
4435 y(of)34 b(structural)g(re)o(gularity)f(much)g(lik)o(e)i(language,)
i(it)e(is)g(natural)1962 4535 y(for)27 b(one)f(to)h(think)g(of)g(the)g
(possibility)g(of)f(impro)o(ving)f(transcrip-)1962 4634
y(tion)i(accurac)o(y)f(using)h(a)g Ft(music)h(langua)o(g)o(e)d(model)i
Fw(\(MLM\))g(in)g(a)1962 4734 y(manner)k(akin)h(to)g(the)h(use)f(of)g
(a)h(language)e(model)g(to)i(impro)o(v)o(e)1962 4834
y(the)22 b(performance)d(of)j(a)g(speech)g(recognizer)e(\()p
0 0.08 0.45 TeXcolorrgb 3329 4834 a
SDict begin H.S end
 3329 4834 a Fw(Rabiner)f(&)i(Juang)
3893 4834 y
SDict begin 12 H.L end
 3893 4834 a 3893 4834 a
SDict begin [ /Subtype /Link /Dest (cite.Rabiner1993) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3893 4834 a 0 TeXcolorgray
-2 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1962 4933 a
SDict begin H.S end
 1962
4933 a Fw(1993)2130 4933 y
SDict begin 12 H.L end
 2130 4933 a 2130 4933 a
SDict begin [ /Subtype /Link /Dest (cite.Rabiner1993) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2130
4933 a 0 TeXcolorgray -2 w Fw(\).)44 b(In)26 b(\()p 0 0.08 0.45
TeXcolorrgb 2345 4933 a
SDict begin H.S end
 2345 4933 a Fw(Boulanger)n(-Le)n(w)o(ando)n
(wski)16 b(et)21 b(al.)3360 4933 y
SDict begin 12 H.L end
 3360 4933 a 3360 4933
a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3360 4933 a 0 TeXcolorgray -1 w Fw(,)p 0 0.08 0.45
TeXcolorrgb 3407 4933 a
SDict begin H.S end
 3407 4933 a Fw(2012)3575 4933
y
SDict begin 12 H.L end
 3575 4933 a 3575 4933 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3575 4933 a 0 TeXcolorgray
-2 w Fw(\),)28 b(the)e(pre-)1962 5033 y(dictions)16 b(of)f(a)i
(polyphonic)c(MLM)j(were)g(used)g(to)g(this)h(end,)f(which)1962
5133 y(w)o(as)33 b(further)d(de)n(v)o(eloped)g(in)i(\()p
0 0.08 0.45 TeXcolorrgb 2877 5133 a
SDict begin H.S end
 2877 5133 a Fw(Boulanger)n(-Le)n(w)
o(ando)n(wski)16 b(et)21 b(al.)3892 5133 y
SDict begin 12 H.L end
 3892 5133
a 3892 5133 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3892 5133 a 0 TeXcolorgray -1 w Fw(,)p
0 0.08 0.45 TeXcolorrgb 1962 5232 a
SDict begin H.S end
 1962 5232 a Fw(2013)2130
5232 y
SDict begin 12 H.L end
 2130 5232 a 2130 5232 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2130 5232 a 0 TeXcolorgray
-2 w Fw(\),)k(where)e(an)h(input/output)e(e)o(xtension)h(of)g(the)i
(RNN-RBM)1962 5332 y(w)o(as)h(proposed)e(that)i(learned)e(to)i(map)f
(input)g(sequences)g(to)g(out-)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray .7 .7 .7 TeXcolorrgb
-392 39 a Fw(110)-392 139 y(111)-392 239 y(112)-392 338
y(113)-392 438 y(114)-392 538 y(115)-392 637 y(116)-392
737 y(117)-392 836 y(118)-392 936 y(119)-392 1036 y(120)-392
1135 y(121)-392 1235 y(122)-392 1335 y(123)-392 1434
y(124)-392 1534 y(125)-392 1633 y(126)-392 1733 y(127)-392
1833 y(128)-392 1932 y(129)-392 2032 y(130)-392 2132
y(131)-392 2231 y(132)-392 2331 y(133)-392 2430 y(134)-392
2530 y(135)-392 2630 y(136)-392 2729 y(137)-392 2829
y(138)-392 2929 y(139)-392 3028 y(140)-392 3128 y(141)-392
3227 y(142)-392 3327 y(143)-392 3427 y(144)-392 3526
y(145)-392 3626 y(146)-392 3726 y(147)-392 3825 y(148)-392
3925 y(149)-392 4024 y(150)-392 4124 y(151)-392 4224
y(152)-392 4323 y(153)-392 4423 y(154)-392 4523 y(155)-392
4622 y(156)-392 4722 y(157)-392 4821 y(158)-392 4921
y(159)-392 5021 y(160)-392 5120 y(161)-392 5220 y(162)-392
5320 y(163)-392 5419 y(164)4131 39 y(165)4131 139 y(166)4131
239 y(167)4131 338 y(168)4131 438 y(169)4131 538 y(170)4131
637 y(171)4131 737 y(172)4131 836 y(173)4131 936 y(174)4131
1036 y(175)4131 1135 y(176)4131 1235 y(177)4131 1335
y(178)4131 1434 y(179)4131 1534 y(180)4131 1633 y(181)4131
1733 y(182)4131 1833 y(183)4131 1932 y(184)4131 2032
y(185)4131 2132 y(186)4131 2231 y(187)4131 2331 y(188)4131
2430 y(189)4131 2530 y(190)4131 2630 y(191)4131 2729
y(192)4131 2829 y(193)4131 2929 y(194)4131 3028 y(195)4131
3128 y(196)4131 3227 y(197)4131 3327 y(198)4131 3427
y(199)4131 3526 y(200)4131 3626 y(201)4131 3726 y(202)4131
3825 y(203)4131 3925 y(204)4131 4024 y(205)4131 4124
y(206)4131 4224 y(207)4131 4323 y(208)4131 4423 y(209)4131
4523 y(210)4131 4622 y(211)4131 4722 y(212)4131 4821
y(213)4131 4921 y(214)4131 5021 y(215)4131 5120 y(216)4131
5220 y(217)4131 5320 y(218)4131 5419 y(219)p 0 TeXcolorgray
0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.S end

-138 -124 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.R end

-138 -124 a -138 -124 a
SDict begin [ /View [/FitH -32768] /Dest (page.2) cvn H.B /DEST pdfmark end
 -138 -124 a 0 TeXcolorgray 557
-149 a Fq(RNN-based)18 b(Music)g(Language)h(Models)f(f)n(or)h(Impr)o(o)
o(ving)g(A)l(utomatic)h(Music)d(T)-6 b(ranscription)p
-138 -116 4050 9 v 0 TeXcolorgray -138 42 a Fw(put)34
b(sequences)f(in)h(the)h(conte)o(xt)d(of)i(AMT)-6 b(.)34
b(Another)f(e)o(xample)-138 141 y(of)k(symbolic)e(information)g(which)h
(can)h(impro)o(v)o(e)d(the)j(perfor)n(-)-138 241 y(mance)24
b(of)h(acoustic)f(models)g(are)h Ft(scor)m(e)g(informed)i
Fw(approaches,)-138 341 y(which)41 b(ha)n(v)o(e)f(been)h(applied)f(in)i
(music)f(research)f(tasks)i(such)-138 440 y(as)35 b(source)f
(separation)f(\()p 0 0.08 0.45 TeXcolorrgb 622 440 a
SDict begin H.S end

622 440 a Fw(Ewert)20 b(&)g(M)7 b(\250)-35 b(uller)1153
440 y
SDict begin 12 H.L end
 1153 440 a 1153 440 a
SDict begin [ /Subtype /Link /Dest (cite.Ewert2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1153 440 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1208 440 a
SDict begin H.S end
 1208 440
a Fw(2012)1376 440 y
SDict begin 12 H.L end
 1376 440 a 1376 440 a
SDict begin [ /Subtype /Link /Dest (cite.Ewert2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1376 440 a
0 TeXcolorgray -2 w Fw(\),)38 b(v)n(oice)c(sep-)-138
540 y(aration)43 b(\()p 0 0.08 0.45 TeXcolorrgb 165 540
a
SDict begin H.S end
 165 540 a Fw(Ewert)20 b(&)g(M)7 b(\250)-35 b(uller)696
540 y
SDict begin 12 H.L end
 696 540 a 696 540 a
SDict begin [ /Subtype /Link /Dest (cite.Ewert2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 696 540 a 0 TeXcolorgray -1
w Fw(,)p 0 0.08 0.45 TeXcolorrgb 760 540 a
SDict begin H.S end
 760 540 a
Fw(2011)928 540 y
SDict begin 12 H.L end
 928 540 a 928 540 a
SDict begin [ /Subtype /Link /Dest (cite.Ewert2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 928 540 a 0 TeXcolorgray
-1 w Fw(\))44 b(and)f(tonic)h(identi\002cation)-138 640
y(\()p 0 0.08 0.45 TeXcolorrgb -110 640 a
SDict begin H.S end
 -110 640 a
Fw(Sent)7 b(\250)-35 b(urk)19 b(et)h(al.)330 640 y
SDict begin 12 H.L end
 330
640 a 330 640 a
SDict begin [ /Subtype /Link /Dest (cite.Senturk2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 330 640 a 0 TeXcolorgray Fw(,)p 0 0.08 0.45
TeXcolorrgb 372 640 a
SDict begin H.S end
 372 640 a Fw(2013)540 640 y
SDict begin 12 H.L end
 540
640 a 540 640 a
SDict begin [ /Subtype /Link /Dest (cite.Senturk2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 540 640 a 0 TeXcolorgray -2 w Fw(\).)-138
789 y(In)45 b(the)h(present)f(w)o(ork,)51 b(we)c(mak)o(e)e(use)h(of)f
(the)h(predictions)-138 889 y(made)32 b(by)h(a)g(Recurrent)e(Neural)i
(Netw)o(ork)f(\(RNN\))h(and)f(a)h(Re-)-138 988 y(current)j(Neural)g
(Netw)o(ork-Neural)e(Autore)o(gressi)n(v)o(e)h(Distrib)n(u-)-138
1088 y(tion)49 b(Estimator)h(\(RNN-N)m(ADE\))f(based)g(polyphonic)e
(MLM)-138 1188 y(proposed)31 b(in)i(\()p 0 0.08 0.45
TeXcolorrgb 326 1188 a
SDict begin H.S end
 326 1188 a Fw(Boulanger)n(-Le)n(w)o(ando)n(wski)
16 b(et)21 b(al.)1341 1188 y
SDict begin 12 H.L end
 1341 1188 a 1341 1188 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end

1341 1188 a 0 TeXcolorgray -1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb
1395 1188 a
SDict begin H.S end
 1395 1188 a Fw(2012)1563 1188 y
SDict begin 12 H.L end
 1563 1188
a 1563 1188 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1563 1188 a 0 TeXcolorgray -2 w Fw(\))33
b(to)g(re-)-138 1287 y(\002ne)46 b(the)f(transcriptions)f(of)h(a)h
(PLCA-based)f(AMT)g(system)-138 1387 y(\()p 0 0.08 0.45
TeXcolorrgb -110 1387 a
SDict begin H.S end
 -110 1387 a Fw(Benetos)20 b(&)g(Dixon)472
1387 y
SDict begin 12 H.L end
 472 1387 a 472 1387 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 472 1387 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 516 1387 a
SDict begin H.S end
 516 1387
a Fw(2012)684 1387 y
SDict begin 12 H.L end
 684 1387 a 684 1387 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 684 1387 a
0 TeXcolorgray -2 w Fw(;)p 0 0.08 0.45 TeXcolorrgb 729
1387 a
SDict begin H.S end
 729 1387 a Fw(Benetos)h(et)f(al.)1179 1387 y
SDict begin 12 H.L end
 1179
1387 a 1179 1387 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1179 1387 a 0 TeXcolorgray Fw(,)p
0 0.08 0.45 TeXcolorrgb 1224 1387 a
SDict begin H.S end
 1224 1387 a Fw(2013b)1434
1387 y
SDict begin 12 H.L end
 1434 1387 a 1434 1387 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1434 1387 a 0 TeXcolorgray
-2 w Fw(\).)36 b(Informa-)-138 1486 y(tion)27 b(from)g(the)g(MLM)h(is)g
(incorporated)d(into)j(the)f(PLCA-based)-138 1586 y(acoustic)i(model)f
(as)i(a)f(prior)f(for)g(pitch)h(acti)n(v)n(ations)f(during)g(the)-138
1686 y(parameter)c(estimation)i(stage.)42 b(It)26 b(w)o(as)h(observ)o
(ed)d(that)i(combin-)-138 1785 y(ing)g(the)h(tw)o(o)g(models)f(in)h
(this)g(w)o(ay)g(boosts)f(transcription)f(accu-)-138
1885 y(rac)o(y)20 b(by)g(+3\045)h(on)f(the)h(Bach10)f(dataset)h(of)f
(multiple-instrument)-138 1985 y(polyphonic)26 b(music)k(\()p
0 0.08 0.45 TeXcolorrgb 522 1985 a
SDict begin H.S end
 522 1985 a Fw(Duan)19
b(et)i(al.)884 1985 y
SDict begin 12 H.L end
 884 1985 a 884 1985 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 884 1985
a 0 TeXcolorgray -1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb
934 1985 a
SDict begin H.S end
 934 1985 a Fw(2010)1102 1985 y
SDict begin 12 H.L end
 1102 1985 a
1102 1985 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1102 1985 a 0 TeXcolorgray -2 w Fw(\),)31
b(compared)d(to)h(using)-138 2084 y(the)20 b(acoustic)g(AMT)g(system)h
(only)-5 b(.)-138 2234 y(The)27 b(outline)f(of)h(this)g(paper)f(is)i
(as)g(follo)n(ws.)44 b(The)27 b(PLCA-based)-138 2333
y(transcription)c(system)i(is)h(presented)e(in)h(Section)p
0 0.08 0.45 TeXcolorrgb 1352 2333 a
SDict begin H.S end
 1352 2333 a 0 0.08 0.45
TeXcolorrgb Fw(2)p 0 0.08 0.45 TeXcolorrgb 1394 2277
a
SDict begin H.R end
 1394 2277 a 1394 2333 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.2) cvn H.B /ANN pdfmark end
 1394 2333 a 0 TeXcolorgray
Fw(.)40 b(The)24 b(RNN-)-138 2433 y(based)19 b(polyphonic)e(music)j
(prediction)e(system)i(that)g(is)h(used)f(as)g(a)-138
2533 y(music)g(language)f(model)h(is)h(described)e(in)i(Section)p
0 0.08 0.45 TeXcolorrgb 1402 2534 a
SDict begin H.S end
 1402 2534 a 0 0.08 0.45
TeXcolorrgb -1 x Fw(3)p 0 0.08 0.45 TeXcolorrgb 1444
2476 a
SDict begin H.R end
 1444 2476 a 1444 2533 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.3) cvn H.B /ANN pdfmark end
 1444 2533 a 0 TeXcolorgray
Fw(.)26 b(The)20 b(com-)-138 2632 y(bination)e(of)i(the)f(tw)o(o)h
(aforementioned)c(systems)21 b(is)f(presented)e(in)-138
2732 y(Section)p 0 0.08 0.45 TeXcolorrgb 138 2732 a
SDict begin H.S end
 138
2732 a 0 0.08 0.45 TeXcolorrgb Fw(4)p 0 0.08 0.45 TeXcolorrgb
179 2675 a
SDict begin H.R end
 179 2675 a 179 2732 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.4) cvn H.B /ANN pdfmark end
 179 2732 a 0 TeXcolorgray
Fw(.)43 b(The)25 b(emplo)o(yed)g(dataset,)i(e)n(v)n(aluation)d
(metrics,)j(and)-138 2831 y(e)o(xperimental)e(results)j(are)g(sho)n(wn)
f(in)h(Section)p 0 0.08 0.45 TeXcolorrgb 1310 2832 a
SDict begin H.S end

1310 2832 a 0 0.08 0.45 TeXcolorrgb -1 x Fw(5)p 0 0.08 0.45
TeXcolorrgb 1352 2775 a
SDict begin H.R end
 1352 2775 a 1352 2831 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.5) cvn H.B /ANN pdfmark end
 1352
2831 a 0 TeXcolorgray Fw(;)k(\002nally)-5 b(,)28 b(con-)-138
2931 y(clusions)j(are)g(dra)o(wn)f(and)h(future)f(directions)g(are)h
(indicated)f(in)-138 3031 y(Section)p 0 0.08 0.45 TeXcolorrgb
132 3032 a
SDict begin H.S end
 132 3032 a 0 0.08 0.45 TeXcolorrgb -1 x Fw(6)p
0 0.08 0.45 TeXcolorrgb 173 2974 a
SDict begin H.R end
 173 2974 a 173 3031
a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.6) cvn H.B /ANN pdfmark end
 173 3031 a 0 TeXcolorgray Fw(.)-138 3104 y
SDict begin H.S end
 -138 3104
a -138 3104 a
SDict begin 12 H.A end
 -138 3104 a -138 3104 a
SDict begin [ /View [/FitH -32768] /Dest (section.2) cvn H.B /DEST pdfmark end
 -138 3104 a 165
x Fu(2.)25 b(A)-5 b(utomatic)25 b(Music)g(T)-7 b(ranscription)26
b(System)-138 3430 y Fw(F)o(or)32 b(combining)e(acoustic)j(and)f(music)
g(language)f(information)-138 3530 y(in)24 b(an)f(automatic)f
(transcription)g(conte)o(xt,)h(we)h(emplo)o(y)e(the)h(tran-)-138
3629 y(scription)30 b(model)h(of)f(\()p 0 0.08 0.45 TeXcolorrgb
552 3629 a
SDict begin H.S end
 552 3629 a Fw(Benetos)20 b(&)h(Dixon)1135
3629 y
SDict begin 12 H.L end
 1135 3629 a 1135 3629 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1135 3629 a 0 TeXcolorgray
-2 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1186 3629 a
SDict begin H.S end
 1186
3629 a Fw(2012)1354 3629 y
SDict begin 12 H.L end
 1354 3629 a 1354 3629 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1354
3629 a 0 TeXcolorgray -2 w Fw(\),)33 b(which)e(sup-)-138
3729 y(ports)g(the)h(transcription)d(of)j(multiple-instrument)c
(polyphonic)-138 3829 y(music)16 b(and)g(also)h(supports)e(pitch)i(de)n
(viations)e(or)h(frequenc)o(y)e(mod-)-138 3928 y(ulations.)39
b(The)24 b(model)g(of)h(\()p 0 0.08 0.45 TeXcolorrgb
696 3928 a
SDict begin H.S end
 696 3928 a Fw(Benetos)20 b(&)g(Dixon)1278
3928 y
SDict begin 12 H.L end
 1278 3928 a 1278 3928 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1278 3928 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1323 3928 a
SDict begin H.S end
 1323
3928 a Fw(2012)1491 3928 y
SDict begin 12 H.L end
 1491 3928 a 1491 3928 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1491
3928 a 0 TeXcolorgray -2 w Fw(\))25 b(is)h(based)-138
4028 y(on)c(probabilistic)g(latent)h(component)d(analysis)j(\(PLCA\),)f
(which)-138 4128 y(is)c(a)f(latent)f(v)n(ariable)g(analysis)h(method)e
(which)h(has)h(been)f(used)g(for)-138 4227 y(decomposing)38
b(spectrograms)h(\()p 0 0.08 0.45 TeXcolorrgb 858 4227
a
SDict begin H.S end
 858 4227 a Fw(Shashanka)19 b(et)h(al.)1395 4227 y
SDict begin 12 H.L end
 1395
4227 a 1395 4227 a
SDict begin [ /Subtype /Link /Dest (cite.Shashanka2008) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1395 4227 a 0 TeXcolorgray Fw(,)p
0 0.08 0.45 TeXcolorrgb 1457 4227 a
SDict begin H.S end
 1457 4227 a Fw(2008)1625
4227 y
SDict begin 12 H.L end
 1625 4227 a 1625 4227 a
SDict begin [ /Subtype /Link /Dest (cite.Shashanka2008) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1625 4227 a 0 TeXcolorgray
-2 w Fw(\))41 b(and)-138 4327 y(can)31 b(be)h(vie)n(wed)f(as)h(a)g
(probabilistic)e(v)o(ersion)g(of)i(non-ne)o(gati)n(v)o(e)-138
4426 y(matrix)38 b(f)o(actorization)f(\()p 0 0.08 0.45
TeXcolorrgb 604 4426 a
SDict begin H.S end
 604 4426 a Fw(Li)20 b(&)g(Seung)992
4426 y
SDict begin 12 H.L end
 992 4426 a 992 4426 a
SDict begin [ /Subtype /Link /Dest (cite.Li1999) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 992 4426 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1050 4426 a
SDict begin H.S end
 1050
4426 a Fw(1999)1218 4426 y
SDict begin 12 H.L end
 1218 4426 a 1218 4426 a
SDict begin [ /Subtype /Link /Dest (cite.Li1999) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1218
4426 a 0 TeXcolorgray -2 w Fw(\).)80 b(F)o(or)38 b(computa-)-138
4526 y(tional)27 b(ef)n(\002cienc)o(y)f(purposes,)h(we)g(emplo)o(y)f
(the)i(f)o(ast)f(implemen-)-138 4626 y(tation)42 b(from)e(\()p
0 0.08 0.45 TeXcolorrgb 325 4626 a
SDict begin H.S end
 325 4626 a Fw(Benetos)20
b(et)h(al.)775 4626 y
SDict begin 12 H.L end
 775 4626 a 775 4626 a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 775 4626
a 0 TeXcolorgray Fw(,)p 0 0.08 0.45 TeXcolorrgb 838 4626
a
SDict begin H.S end
 838 4626 a Fw(2013b)1048 4626 y
SDict begin 12 H.L end
 1048 4626 a 1048 4626
a
SDict begin [ /Subtype /Link /Dest (cite.Benetos2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1048 4626 a 0 TeXcolorgray -3 w Fw(\),)48 b(which)41
b(utilized)g(pre-)-138 4725 y(e)o(xtracted)35 b(note)h(templates)g
(that)h(are)f(also)h(pre-shifted)e(across)-138 4825 y(log-frequenc)o(y)
-5 b(,)36 b(in)h(order)e(to)h(account)g(for)g(frequenc)o(y)d(modu-)-138
4925 y(lations)41 b(or)g(tuning)f(changes.)86 b(In)41
b(addition,)k(as)c(w)o(as)h(sho)n(wn)-138 5024 y(in)25
b(\()p 0 0.08 0.45 TeXcolorrgb -20 5024 a
SDict begin H.S end
 -20 5024 a
Fw(Smaragdis)19 b(&)h(Mysore)691 5024 y
SDict begin 12 H.L end
 691 5024 a 691
5024 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 691 5024 a 0 TeXcolorgray -1 w Fw(,)p 0 0.08 0.45
TeXcolorrgb 736 5024 a
SDict begin H.S end
 736 5024 a Fw(2009)904 5024 y
SDict begin 12 H.L end

904 5024 a 904 5024 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 904 5024 a 0 TeXcolorgray -2 w
Fw(\),)26 b(PLCA-based)e(models)h(can)-138 5124 y(utilise)35
b(priors)f(for)g(estimating)g(unkno)n(wn)e(model)i(parameters,)-138
5223 y(which)15 b(will)i(be)f(useful)f(in)i(this)f(paper)f(for)g
(informing)f(the)i(acoustic)-138 5323 y(transcription)i(system)j(with)f
(symbolic)f(information.)p 0 TeXcolorgray 0 TeXcolorgray
1962 42 a(The)30 b(transcription)e(model)h(tak)o(es)h(as)h(input)e(a)i
(normalised)d(log-)1962 141 y(frequenc)o(y)23 b(spectrogram)g
Fp(V)2803 153 y Fo(!)r(;t)2922 141 y Fw(\()p Fp(!)28
b Fw(is)e(the)g(log-frequenc)o(y)21 b(inde)o(x)1962 241
y(and)31 b Fp(t)g Fw(is)h(the)f(time)h(inde)o(x\))d(and)i(approximates)
e(it)i(as)h(a)g(bi)n(v)n(ari-)1962 341 y(ate)18 b(probability)d
(distrib)n(ution)h Fp(P)c Fs(\()p Fp(!)s(;)i(t)p Fs(\))p
Fw(.)25 b Fp(P)12 b Fs(\()p Fp(!)s(;)i(t)p Fs(\))k Fw(is)g(decomposed)
1962 440 y(into)23 b(a)h(series)g(of)f(log-frequenc)o(y)d(spectral)j
(templates)g(per)g(pitch,)1962 540 y(instrument,)16 b(and)g
(log-frequenc)o(y)d(shifting)j(\(which)g(indicates)g(de-)1962
640 y(viation)24 b(with)g(respect)g(to)h(the)f(ideal)h(tuning\),)e(as)i
(well)g(as)g(proba-)1962 739 y(bility)20 b(distrib)n(utions)f(for)h
(pitch,)f(instrument,)g(and)h(tuning.)1962 889 y(The)g(model)f(is)i
(formulated)d(as:)2919 889 y
SDict begin H.S end
 2919 889 a 2919 889 a
SDict begin 12 H.A end
 2919
889 a 2919 889 a
SDict begin [ /View [/FitH -32768] /Dest (equation.1) cvn H.B /DEST pdfmark end
 2919 889 a 1972 1058 a Fp(P)12 b Fs(\()p
Fp(!)s(;)i(t)p Fs(\))23 b(=)g Fp(P)12 b Fs(\()p Fp(t)p
Fs(\))2517 979 y Fn(X)2507 1158 y Fo(p;f)s(;s)2661 1058
y Fp(P)g Fs(\()p Fp(!)s Fm(j)p Fp(s;)i(p;)g(f)9 b Fs(\))p
Fp(P)3126 1070 y Fo(t)3155 1058 y Fs(\()p Fp(f)g Fm(j)p
Fp(p)p Fs(\))p Fp(P)3387 1070 y Fo(t)3416 1058 y Fs(\()p
Fp(s)p Fm(j)p Fp(p)p Fs(\))p Fp(P)3637 1070 y Fo(t)3667
1058 y Fs(\()p Fp(p)p Fs(\))42 b Fw(\(1\))1962 1312 y(where)31
b Fp(p)g Fw(denotes)g(pitch,)i Fp(s)f Fw(denotes)e(the)i(musical)f
(instrument)1962 1411 y(source,)26 b(and)f Fp(f)35 b
Fw(denotes)24 b(log-frequenc)o(y)e(shifting)j(\(which)f(indi-)1962
1511 y(cates)32 b(tuning/pitch)d(de)n(viations\).)58
b Fp(P)12 b Fs(\()p Fp(t)p Fs(\))32 b Fw(is)g(the)g(ener)o(gy)d(of)j
(the)1962 1611 y(log-spectrogram,)22 b(which)j(is)g(a)h(kno)n(wn)d
(quantity)-5 b(.)37 b Fp(P)12 b Fs(\()p Fp(!)s Fm(j)p
Fp(s;)i(p;)g(f)9 b Fs(\))1962 1710 y Fw(denote)43 b(pre-e)o(xtracted)e
(log-spectral)i(templates)h(per)g(pitch)f Fp(p)1962 1810
y Fw(and)33 b(instrument)f Fp(s)p Fw(,)37 b(which)c(are)h(also)g
(pre-shifted)e(across)h(log-)1962 1909 y(frequenc)o(y)-5
b(.)41 b(The)26 b(pre-shifting)e(operation)h(is)j(made)d(in)i(order)e
(to)1962 2009 y(account)34 b(for)h(pitch)h(de)n(viations,)i(without)d
(needing)f(to)h(formu-)1962 2109 y(late)h(a)g(con)m(v)n(oluti)n(v)o(e)d
(model)i(across)h(log-frequenc)o(y)-5 b(.)66 b Fp(P)3703
2121 y Fo(t)3733 2109 y Fs(\()p Fp(f)9 b Fm(j)p Fp(p)p
Fs(\))1962 2208 y Fw(is)27 b(the)f(time-v)n(arying)e(log-frequenc)o(y)e
(shifting)k(distrib)n(ution)f(per)1962 2308 y(pitch,)k
Fp(P)2232 2320 y Fo(t)2262 2308 y Fs(\()p Fp(s)p Fm(j)p
Fp(p)p Fs(\))g Fw(is)g(the)f(time-v)n(arying)d(source)i(contrib)n
(ution)f(per)1962 2408 y(pitch,)j(and)e(\002nally)-5
b(,)29 b Fp(P)2638 2420 y Fo(t)2667 2408 y Fs(\()p Fp(p)p
Fs(\))g Fw(is)g(the)e(pitch)h(acti)n(v)n(ation,)g(which)f(es-)1962
2507 y(sentially)k(is)h(the)f(resulting)f(music)g(transcription.)56
b(As)31 b(a)h(time-)1962 2607 y(frequenc)o(y)25 b(representation)i(in)h
(the)g(log-frequenc)o(y)c(domain)j(we)1962 2706 y(use)16
b(the)f(constant-Q)g(transform)f(\(CQT\))h(with)h(a)g(log-spectral)e
(res-)1962 2806 y(olution)19 b(of)h(60)g(bins/octa)n(v)o(e)f(\()p
0 0.08 0.45 TeXcolorrgb 2836 2806 a
SDict begin H.S end
 2836 2806 a Fw(Sch)7
b(\250)-35 b(orkhuber)16 b(&)21 b(Klapuri)3621 2806 y
SDict begin 12 H.L end

3621 2806 a 3621 2806 a
SDict begin [ /Subtype /Link /Dest (cite.Schoerkhuber10) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3621 2806 a 0 TeXcolorgray -2
w Fw(,)p 0 0.08 0.45 TeXcolorrgb 3661 2806 a
SDict begin H.S end
 3661 2806
a Fw(2010)3829 2806 y
SDict begin 12 H.L end
 3829 2806 a 3829 2806 a
SDict begin [ /Subtype /Link /Dest (cite.Schoerkhuber10) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3829 2806
a 0 TeXcolorgray -2 w Fw(\).)1962 2956 y(The)i(unkno)n(wn)e(model)h
(parameters)g(\()p Fp(P)3146 2968 y Fo(t)3175 2956 y
Fs(\()p Fp(f)9 b Fm(j)p Fp(p)p Fs(\))p Fw(,)24 b Fp(P)3452
2968 y Fo(t)3482 2956 y Fs(\()p Fp(s)p Fm(j)p Fp(p)p
Fs(\))p Fw(,)g Fp(P)3748 2968 y Fo(t)3778 2956 y Fs(\()p
Fp(p)p Fs(\))p Fw(\))1962 3055 y(can)68 b(be)h(iterati)n(v)o(ely)e
(estimated)h(using)g(the)h(e)o(xpectation-)1962 3155
y(maximisation)19 b(\(EM\))i(algorithm)e(\()p 0 0.08 0.45
TeXcolorrgb 3009 3155 a
SDict begin H.S end
 3009 3155 a Fw(Dempster)g(et)i(al.)3514
3155 y
SDict begin 12 H.L end
 3514 3155 a 3514 3155 a
SDict begin [ /Subtype /Link /Dest (cite.Dempster77) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3514 3155 a 0 TeXcolorgray
Fw(,)p 0 0.08 0.45 TeXcolorrgb 3556 3155 a
SDict begin H.S end
 3556 3155
a Fw(1977)3724 3155 y
SDict begin 12 H.L end
 3724 3155 a 3724 3155 a
SDict begin [ /Subtype /Link /Dest (cite.Dempster77) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3724 3155
a 0 TeXcolorgray -2 w Fw(\).)27 b(F)o(or)1962 3254 y(the)20
b Ft(Expectation)f Fw(step,)h(the)g(follo)n(wing)f(posterior)f(is)k
(computed:)3909 3254 y
SDict begin H.S end
 3909 3254 a 3909 3254 a
SDict begin 12 H.A end
 3909 3254
a 3909 3254 a
SDict begin [ /View [/FitH -32768] /Dest (equation.2) cvn H.B /DEST pdfmark end
 3909 3254 a 1999 3493 a Fp(P)2052 3505
y Fo(t)2081 3493 y Fs(\()p Fp(p;)14 b(f)t(;)g(s)p Fm(j)p
Fp(!)s Fs(\))23 b(=)2667 3437 y Fp(P)12 b Fs(\()p Fp(!)s
Fm(j)p Fp(s;)i(p;)g(f)9 b Fs(\))p Fp(P)3132 3449 y Fo(t)3160
3437 y Fs(\()p Fp(f)g Fm(j)p Fp(p)p Fs(\))p Fp(P)3392
3449 y Fo(t)3422 3437 y Fs(\()p Fp(s)p Fm(j)p Fp(p)p
Fs(\))p Fp(P)3643 3449 y Fo(t)3673 3437 y Fs(\()p Fp(p)p
Fs(\))p 2544 3474 1359 4 v 2544 3488 a Fn(P)2631 3575
y Fo(p;f)s(;s)2790 3550 y Fp(P)j Fs(\()p Fp(!)s Fm(j)p
Fp(s;)i(p;)g(f)9 b Fs(\))p Fp(P)3255 3562 y Fo(t)3283
3550 y Fs(\()p Fp(f)g Fm(j)p Fp(p)p Fs(\))p Fp(P)3515
3562 y Fo(t)3545 3550 y Fs(\()p Fp(s)p Fm(j)p Fp(p)p
Fs(\))p Fp(P)3766 3562 y Fo(t)3796 3550 y Fs(\()p Fp(p)p
Fs(\))3815 3676 y Fw(\(2\))1962 3895 y(F)o(or)28 b(the)h
Ft(Maximization)e Fw(step)i(\(without)e(using)h(an)o(y)g(priors\))f
(un-)1962 3995 y(kno)n(wn)h(model)h(parameters)g(are)h(updated)e(using)
i(the)g(posterior)1962 4095 y(computed)18 b(from)h(the)i(Expectation)d
(step:)3214 4095 y
SDict begin H.S end
 3214 4095 a 3214 4095 a
SDict begin 12 H.A end
 3214 4095
a 3214 4095 a
SDict begin [ /View [/FitH -32768] /Dest (equation.3) cvn H.B /DEST pdfmark end
 3214 4095 a 2128 4321 a Fp(P)2181 4333
y Fo(t)2211 4321 y Fs(\()p Fp(f)9 b Fm(j)p Fp(p)p Fs(\))23
b(=)2538 4190 y Fn(P)2625 4278 y Fo(!)r(;s)2738 4253
y Fp(P)2791 4265 y Fo(t)2821 4253 y Fs(\()p Fp(p;)14
b(f)t(;)g(s)p Fm(j)p Fp(!)s Fs(\))p Fp(V)3211 4265 y
Fo(!)r(;t)p 2510 4302 822 4 v 2510 4316 a Fn(P)2598 4403
y Fo(f)s(;!)r(;s)2766 4378 y Fp(P)2819 4390 y Fo(t)2848
4378 y Fs(\()p Fp(p;)g(f)t(;)g(s)p Fm(j)p Fp(!)s Fs(\))p
Fp(V)3238 4390 y Fo(!)r(;t)3815 4321 y Fw(\(3\))1962
4490 y
SDict begin H.S end
 1962 4490 a 1962 4490 a
SDict begin 12 H.A end
 1962 4490 a 1962 4490
a
SDict begin [ /View [/FitH -32768] /Dest (equation.4) cvn H.B /DEST pdfmark end
 1962 4490 a 2128 4630 a Fp(P)2181 4642 y Fo(t)2211
4630 y Fs(\()p Fp(s)p Fm(j)p Fp(p)p Fs(\))23 b(=)2525
4499 y Fn(P)2613 4586 y Fo(!)r(;f)2733 4561 y Fp(P)2786
4573 y Fo(t)2816 4561 y Fs(\()p Fp(p;)14 b(f)t(;)g(s)p
Fm(j)p Fp(!)s Fs(\))p Fp(V)3206 4573 y Fo(!)r(;t)p 2500
4610 825 4 v 2500 4624 a Fn(P)2587 4711 y Fo(s;!)r(;f)2759
4686 y Fp(P)2812 4698 y Fo(t)2841 4686 y Fs(\()p Fp(p;)g(f)t(;)g(s)p
Fm(j)p Fp(!)s Fs(\))p Fp(V)3231 4698 y Fo(!)r(;t)3815
4630 y Fw(\(4\))1962 4771 y
SDict begin H.S end
 1962 4771 a 1962 4771 a
SDict begin 12 H.A end
 1962
4771 a 1962 4771 a
SDict begin [ /View [/FitH -32768] /Dest (equation.5) cvn H.B /DEST pdfmark end
 1962 4771 a 2128 4910 a Fp(P)2181
4922 y Fo(t)2211 4910 y Fs(\()p Fp(p)p Fs(\))23 b(=)2465
4779 y Fn(P)2552 4866 y Fo(!)r(;f)s(;s)2720 4841 y Fp(P)2773
4853 y Fo(t)2803 4841 y Fs(\()p Fp(p;)14 b(f)t(;)g(s)p
Fm(j)p Fp(!)s Fs(\))p Fp(V)3193 4853 y Fo(!)r(;t)p 2438
4891 876 4 v 2438 4905 a Fn(P)2525 4992 y Fo(p;!)r(;f)s(;s)2747
4967 y Fp(P)2800 4979 y Fo(t)2830 4967 y Fs(\()p Fp(p;)g(f)t(;)g(s)p
Fm(j)p Fp(!)s Fs(\))p Fp(V)3220 4979 y Fo(!)r(;t)3815
4910 y Fw(\(5\))1962 5160 y(W)-7 b(e)31 b(consider)d(the)i(sound)f
(state)h(templates)f(to)h(be)g(\002x)o(ed,)h(so)f(no)1962
5259 y(update)e(rule)g(for)g Fp(P)12 b Fs(\()p Fp(!)s
Fm(j)p Fp(s;)i(p;)g(f)9 b Fs(\))28 b Fw(is)i(applied.)49
b(Using)29 b(\002x)o(ed)f(tem-)1962 5359 y(plates,)23
b(20-30)e(iterations)h(using)g(the)h(update)f(rules)g(presented)f(in)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray .7 .7 .7 TeXcolorrgb
-392 39 a Fw(220)-392 139 y(221)-392 239 y(222)-392 338
y(223)-392 438 y(224)-392 538 y(225)-392 637 y(226)-392
737 y(227)-392 836 y(228)-392 936 y(229)-392 1036 y(230)-392
1135 y(231)-392 1235 y(232)-392 1335 y(233)-392 1434
y(234)-392 1534 y(235)-392 1633 y(236)-392 1733 y(237)-392
1833 y(238)-392 1932 y(239)-392 2032 y(240)-392 2132
y(241)-392 2231 y(242)-392 2331 y(243)-392 2430 y(244)-392
2530 y(245)-392 2630 y(246)-392 2729 y(247)-392 2829
y(248)-392 2929 y(249)-392 3028 y(250)-392 3128 y(251)-392
3227 y(252)-392 3327 y(253)-392 3427 y(254)-392 3526
y(255)-392 3626 y(256)-392 3726 y(257)-392 3825 y(258)-392
3925 y(259)-392 4024 y(260)-392 4124 y(261)-392 4224
y(262)-392 4323 y(263)-392 4423 y(264)-392 4523 y(265)-392
4622 y(266)-392 4722 y(267)-392 4821 y(268)-392 4921
y(269)-392 5021 y(270)-392 5120 y(271)-392 5220 y(272)-392
5320 y(273)-392 5419 y(274)4131 39 y(275)4131 139 y(276)4131
239 y(277)4131 338 y(278)4131 438 y(279)4131 538 y(280)4131
637 y(281)4131 737 y(282)4131 836 y(283)4131 936 y(284)4131
1036 y(285)4131 1135 y(286)4131 1235 y(287)4131 1335
y(288)4131 1434 y(289)4131 1534 y(290)4131 1633 y(291)4131
1733 y(292)4131 1833 y(293)4131 1932 y(294)4131 2032
y(295)4131 2132 y(296)4131 2231 y(297)4131 2331 y(298)4131
2430 y(299)4131 2530 y(300)4131 2630 y(301)4131 2729
y(302)4131 2829 y(303)4131 2929 y(304)4131 3028 y(305)4131
3128 y(306)4131 3227 y(307)4131 3327 y(308)4131 3427
y(309)4131 3526 y(310)4131 3626 y(311)4131 3726 y(312)4131
3825 y(313)4131 3925 y(314)4131 4024 y(315)4131 4124
y(316)4131 4224 y(317)4131 4323 y(318)4131 4423 y(319)4131
4523 y(320)4131 4622 y(321)4131 4722 y(322)4131 4821
y(323)4131 4921 y(324)4131 5021 y(325)4131 5120 y(326)4131
5220 y(327)4131 5320 y(328)4131 5419 y(329)p 0 TeXcolorgray
0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.S end

-138 -124 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.R end

-138 -124 a -138 -124 a
SDict begin [ /View [/FitH -32768] /Dest (page.3) cvn H.B /DEST pdfmark end
 -138 -124 a 0 TeXcolorgray 557
-149 a Fq(RNN-based)18 b(Music)g(Language)h(Models)f(f)n(or)h(Impr)o(o)
o(ving)g(A)l(utomatic)h(Music)d(T)-6 b(ranscription)p
-138 -116 4050 9 v 0 TeXcolorgray -138 42 a Fw(the)20
b(present)g(section)g(are)g(suf)n(\002cient)g(for)f(con)m(v)o(er)o
(gence.)i(The)f(out-)-138 141 y(put)27 b(of)h(the)g(system)g(is)h(a)f
(pitch)f(acti)n(v)n(ation)g(which)g(is)i(scaled)f(by)-138
241 y(the)20 b(ener)o(gy)e(of)i(the)g(log-spectrogram:)1034
241 y
SDict begin H.S end
 1034 241 a 1034 241 a
SDict begin 12 H.A end
 1034 241 a 1034 241 a
SDict begin [ /View [/FitH -32768] /Dest (equation.6) cvn H.B /DEST pdfmark end
 1034
241 a 28 474 a Fp(P)81 486 y Fo(t)111 474 y Fs(\()p Fp(p)p
Fs(\))231 395 y Fn(X)269 570 y Fo(!)365 474 y Fp(V)413
486 y Fo(!)r(;t)1715 474 y Fw(\(6\))-138 762 y(After)57
b(performing)e(5-sample)i(median)g(\002ltering)g(for)g(note)-138
862 y(smoothing,)23 b(thresholding)f(is)i(performed)e(on)h
Fp(P)12 b Fs(\()p Fp(p;)i(t)p Fs(\))25 b Fw(follo)n(wed)-138
962 y(by)37 b(minimum)f(note)h(duration)e(pruning)h(set)i(to)f(40ms)g
(\(corre-)-138 1061 y(sponding)21 b(to)j(the)f(length)f(of)h(one)g
(time)h(frame\))e(in)h(order)f(to)h(con-)-138 1161 y(v)o(ert)i
Fp(P)12 b Fs(\()p Fp(p;)i(t)p Fs(\))26 b Fw(into)g(a)g(binary)e
(piano-roll)g(representation,)g(which)-138 1260 y(is)k(the)f(output)f
(of)h(the)g(transcription)e(system,)k(and)d(is)i(also)g(used)-138
1360 y(for)20 b(e)n(v)n(aluation)e(purposes.)-138 1450
y
SDict begin H.S end
 -138 1450 a -138 1450 a
SDict begin 12 H.A end
 -138 1450 a -138 1450 a
SDict begin [ /View [/FitH -32768] /Dest (section.3) cvn H.B /DEST pdfmark end
 -138
1450 a 148 x Fu(3.)25 b(P)n(olyphonic)g(Music)g(Pr)n(ediction)h(System)
-138 1760 y Fw(T)-7 b(aking)36 b(inspiration)g(from)g(speech)g
(recognition,)i(it)g(has)f(been)-138 1859 y(kno)n(wn)19
b(that)i(a)g(good)e(statistical)j(model)d(of)i(symbolic)e(music)i(can)
-138 1959 y(help)32 b(the)h(transcription)e(process)i(\()p
0 0.08 0.45 TeXcolorrgb 937 1959 a
SDict begin H.S end
 937 1959 a Fw(Cemgil)1182
1959 y
SDict begin 12 H.L end
 1182 1959 a 1182 1959 a
SDict begin [ /Subtype /Link /Dest (cite.Cemgil2004a) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1182 1959 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1235 1959 a
SDict begin H.S end
 1235
1959 a Fw(2004)1403 1959 y
SDict begin 12 H.L end
 1403 1959 a 1403 1959 a
SDict begin [ /Subtype /Link /Dest (cite.Cemgil2004a) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1403
1959 a 0 TeXcolorgray -2 w Fw(\).)63 b(Ho)n(we)n(v)o(er)-138
2058 y(there)21 b(are)g(2)g(main)g(reasons)g(for)g(the)g(use)h(of)f
(MLMs)g(in)h(AMT)f(not)-138 2158 y(being)e(more)h(common.)-138
2259 y
SDict begin H.S end
 -138 2259 a -138 2259 a
SDict begin 12 H.A end
 -138 2259 a -138 2259
a
SDict begin [ /View [/FitH -32768] /Dest (Item.1) cvn H.B /DEST pdfmark end
 -138 2259 a 0 TeXcolorgray -76 2410 a Fw(1.)p 0 TeXcolorgray
41 w(T)m(raining)32 b(models)h(that)h(capture)f(the)g(temporal)g
(structure)28 2510 y(and)26 b(comple)o(xity)e(in)j(symbolic)e
(polyphonic)f(music)i(is)i(not)28 2610 y(an)38 b(easy)h(task.)79
b(In)38 b(speech)g(recognition,)i(often)e(simple)28 2709
y(language)28 b(models)i(lik)o(e)g(n-grams)f(w)o(ork)h(e)o(xtremely)e
(well.)28 2809 y(Ho)n(we)n(v)o(er)m(,)35 b(symbolic)e(music)h(has)g
(more)f(comple)o(x)f(struc-)28 2909 y(ture)i(and)g(simple)g
(statistical)i(models)e(lik)o(e)g(n-grams)f(and)28 3008
y(HMMs)c(f)o(ail)g(to)g(model)f(these)h(characteristics)f(accurately)28
3108 y(\()p 0 0.08 0.45 TeXcolorrgb 56 3108 a
SDict begin H.S end
 56 3108
a Fw(Boulanger)n(-Le)n(w)o(ando)n(wski)16 b(et)21 b(al.)1071
3108 y
SDict begin 12 H.L end
 1071 3108 a 1071 3108 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1071 3108 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1112 3108 a
SDict begin H.S end
 1112
3108 a Fw(2012)1280 3108 y
SDict begin 12 H.L end
 1280 3108 a 1280 3108 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1280
3108 a 0 TeXcolorgray -2 w Fw(\).)-138 3195 y
SDict begin H.S end
 -138 3195
a -138 3195 a
SDict begin 12 H.A end
 -138 3195 a -138 3195 a
SDict begin [ /View [/FitH -32768] /Dest (Item.2) cvn H.B /DEST pdfmark end
 -138 3195 a 0 TeXcolorgray
-76 3347 a Fw(2.)p 0 TeXcolorgray 41 w(There)c(is)i(no)f(consensus)f
(on)h(ho)n(w)f(to)h(incorporate)e(this)j(prior)28 3446
y(information)i(within)h(the)h(transcription)f(system.)33
b(Though,)28 3546 y(recently)24 b(there)h(ha)n(v)o(e)g(been)g(some)g
(successful)h(attempts)f(at)28 3646 y(using)i(this)h(prior)f
(information)e(to)i(impro)o(v)o(e)f(the)h(accurac)o(y)28
3745 y(on)d(AMT)g(tasks)g(\()p 0 0.08 0.45 TeXcolorrgb
563 3745 a
SDict begin H.S end
 563 3745 a Fw(Boulanger)n(-Le)n(w)o(ando)n(wski)16
b(et)21 b(al.)1578 3745 y
SDict begin 12 H.L end
 1578 3745 a 1578 3745 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1578
3745 a 0 TeXcolorgray Fw(,)p 0 0.08 0.45 TeXcolorrgb
1623 3745 a
SDict begin H.S end
 1623 3745 a Fw(2012)1791 3745 y
SDict begin 12 H.L end
 1791 3745
a 1791 3745 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1791 3745 a 0 TeXcolorgray -2 w Fw(;)p
0 0.08 0.45 TeXcolorrgb 28 3845 a
SDict begin H.S end
 28 3845 a Fw(2013)196
3845 y
SDict begin 12 H.L end
 196 3845 a 196 3845 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2013) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 196 3845 a 0 TeXcolorgray
-2 w Fw(\).)-138 4097 y(In)16 b(this)g(section)g(we)g(discuss)h(the)f
(details)g(of)g(the)f(music)h(prediction)-138 4197 y(system)j(and)g
(the)g(models)f(used.)24 b(In)19 b(the)g(ne)o(xt)f(section)h(we)g
(discuss)-138 4297 y(ho)n(w)h(we)h(incorporate)d(the)j(predictions)e
(from)h(these)g(models)g(in)h(a)-138 4396 y(PLCA-based)f(music)g
(transcription)e(system.)-138 4474 y
SDict begin H.S end
 -138 4474 a -138
4474 a
SDict begin 12 H.A end
 -138 4474 a -138 4474 a
SDict begin [ /View [/FitH -32768] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 -138 4474 a 132 x Fl(3.1.)h(Recurr)o
(ent)h(Neural)g(Netw)o(ork)-138 4761 y Fw(A)35 b(recurrent)f(neural)f
(netw)o(ork)h(\(RNN\))h(is)h(a)f(po)n(werful)e(model)-138
4861 y(for)c(time-series)h(data)g(which)f(is)i(kno)n(wn)d(to)i(account)
f(for)g(long-)-138 4960 y(term)46 b(temporal)e(dependencies,)51
b(o)o(v)o(er)44 b(multiple)h(time-scales)-138 5060 y(when)e(trained)g
(ef)n(fecti)n(v)o(ely)-5 b(.)93 b(Gi)n(v)o(en)43 b(a)h(sequence)f(of)g
(inputs)-138 5160 y Fp(v)-98 5172 y Fk(1)-61 5160 y Fp(;)14
b(v)16 5172 y Fk(2)54 5160 y Fp(;)g(:)g(:)g(:)f(;)h(v)278
5172 y Fo(T)370 5160 y Fw(each)37 b(in)i Fj(R)724 5129
y Fo(n)769 5160 y Fw(,)k(the)38 b(netw)o(ork)f(computes)g(a)h(se-)-138
5259 y(quence)31 b(of)g(hidden)g(states)708 5237 y Fs(^)707
5259 y Fp(h)755 5271 y Fk(1)792 5259 y Fp(;)830 5237
y Fs(^)829 5259 y Fp(h)877 5271 y Fk(2)914 5259 y Fp(;)14
b(:)g(:)g(:)g(;)1099 5237 y Fs(^)1099 5259 y Fp(h)1147
5271 y Fo(T)1231 5259 y Fw(each)32 b(in)g Fj(R)1573 5229
y Fo(m)1636 5259 y Fw(,)j(and)-138 5359 y(a)25 b(sequence)e(of)i
(predictions)j Fs(^)-47 b Fp(y)783 5371 y Fk(1)820 5359
y Fp(;)19 b Fs(^)-47 b Fp(y)898 5371 y Fk(2)935 5359
y Fp(;)14 b(:)g(:)g(:)f(;)20 b Fs(^)-48 b Fp(y)1160 5371
y Fo(T)1237 5359 y Fw(each)24 b(in)h Fj(R)1564 5329 y
Fo(k)1630 5359 y Fw(by)f(it-)p 0 TeXcolorgray 0 TeXcolorgray
1962 42 a(erating)19 b(the)i(equations)2128 214 y
SDict begin H.S end
 2128
214 a 2128 214 a
SDict begin 12 H.A end
 2128 214 a 2128 214 a
SDict begin [ /View [/FitH -32768] /Dest (equation.7) cvn H.B /DEST pdfmark end
 2128 214 a Fp(h)2176
226 y Fo(t)2288 214 y Fs(=)83 b Fp(e)p Fs(\()p Fp(W)2586
226 y Fk(^)2585 241 y Fo(hx)2666 214 y Fp(v)2706 226
y Fo(t)2754 214 y Fs(+)18 b Fp(W)2916 226 y Fk(^)2915
241 y Fo(h)2955 226 y Fk(^)2954 241 y Fo(h)2998 192 y
Fs(^)2997 214 y Fp(h)3045 226 y Fo(t)p Fi(\000)p Fk(1)3177
214 y Fs(+)h Fp(b)3298 226 y Fk(^)3297 241 y Fo(h)3339
214 y Fs(\))p 0 TeXcolorgray 444 w Fw(\(7\))p 0 TeXcolorgray
2141 339 a Fs(^)-48 b Fp(y)2176 351 y Fo(t)2288 339 y
Fs(=)83 b Fp(g)s Fs(\()p Fp(W)2589 366 y Fo(y)2626 350
y Fk(^)2625 366 y Fo(h)2668 339 y Fs(\))p 0 TeXcolorgray
1115 w Fw(\(8\))p 0 TeXcolorgray 1962 561 a(where)21
b Fp(W)2265 588 y Fo(y)2302 572 y Fk(^)2301 588 y Fo(h)2344
561 y Fw(,)i Fp(W)2467 573 y Fk(^)2466 588 y Fo(hx)2547
561 y Fw(,)f Fp(W)2669 573 y Fk(^)2668 588 y Fo(h)2709
573 y Fk(^)2708 588 y Fo(h)2773 561 y Fw(are)g(the)f(weight)h(matrices)
f(and)g Fp(b)3751 573 y Fk(^)3750 588 y Fo(h)3793 561
y Fw(,)h Fp(b)3872 573 y Fo(y)1962 660 y Fw(are)28 b(the)g(biases)h
(and)e Fp(e)i Fw(and)e Fp(g)k Fw(are)d(acti)n(v)n(ation)f(functions)g
(which)1962 760 y(are)20 b(typically)f(non-linear)f(and)i(applied)f
(element-wise.)1962 909 y(In)34 b(theory)-5 b(,)35 b(a)f(recurrent)e
(neural)h(netw)o(ork)f(can)i(be)g(trained)f(us-)1962
1009 y(ing)17 b(the)h(gradient-based)d(Back-Propagation)f(Through)h(T)m
(ime)i(al-)1962 1109 y(gorithm)26 b(\()p 0 0.08 0.45
TeXcolorrgb 2281 1109 a
SDict begin H.S end
 2281 1109 a Fw(W)-7 b(erbos)2533
1109 y
SDict begin 12 H.L end
 2533 1109 a 2533 1109 a
SDict begin [ /Subtype /Link /Dest (cite.Werbos1990) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2533 1109 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 2581 1109 a
SDict begin H.S end
 2581
1109 a Fw(1990)2749 1109 y
SDict begin 12 H.L end
 2749 1109 a 2749 1109 a
SDict begin [ /Subtype /Link /Dest (cite.Werbos1990) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2749
1109 a 0 TeXcolorgray -2 w Fw(\))27 b(using)g(the)h(e)o(xactly)e
(computable)g(er)n(-)1962 1208 y(ror)f(gradients)f(in)i(the)f(netw)o
(ork.)40 b(Ho)n(we)n(v)o(er)m(,)25 b Fs(1)3353 1178 y
Fo(st)3439 1208 y Fw(order)f(gradient)1962 1308 y(methods)h(f)o(ail)i
(to)f(correctly)f(train)h(RNNs)h(for)f(man)o(y)f(real-w)o(orld)1962
1407 y(problems.)31 b(This)23 b(dif)n(\002culty)f(has)h(been)f
(associated)h(with)g(what)g(is)1962 1507 y(kno)n(wn)j(as)j(the)f
Ft(vanishing/e)n(xploding)c(gr)o(adients)j Fw(phenomenon)1962
1607 y(\()p 0 0.08 0.45 TeXcolorrgb 1990 1607 a
SDict begin H.S end
 1990
1607 a Fw(Bengio)19 b(et)i(al.)2412 1607 y
SDict begin 12 H.L end
 2412 1607
a 2412 1607 a
SDict begin [ /Subtype /Link /Dest (cite.Bengio1994) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2412 1607 a 0 TeXcolorgray Fw(,)p 0 0.08 0.45
TeXcolorrgb 2458 1607 a
SDict begin H.S end
 2458 1607 a Fw(1994)2626 1607
y
SDict begin 12 H.L end
 2626 1607 a 2626 1607 a
SDict begin [ /Subtype /Link /Dest (cite.Bengio1994) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2626 1607 a 0 TeXcolorgray
-2 w Fw(\),)k(where)f(the)h(errors)e(e)o(xhibit)h(e)o(xponential)1962
1706 y(decay/gro)n(wth)18 b(as)i(the)o(y)g(are)g(back-propagated)c
(through)i(time.)1962 1856 y(Ho)n(we)n(v)o(er)m(,)45
b(the)c(research)g(being)g(carried)f(out)i(by)f(the)h(neural)1962
1955 y(netw)o(orks)37 b(and)g(deep)g(learning)g(community)e(has)j(led)g
(to)g(se)n(v-)1962 2055 y(eral)20 b(impro)o(v)o(ements)e(in)j(gradient)
e(based)h(optimization)f(methods)1962 2155 y(that)31
b(mak)o(e)g(training)e(of)i(RNNs)h(on)f(real-w)o(orld)e(data)i
(possible.)1962 2254 y(Most)k(notably)-5 b(,)37 b(the)d(Hessian)i(Free)
f(\(HF\))f(optimization)f(algo-)1962 2354 y(rithm)22
b(has)g(been)g(used)g(to)g(train)g(RNNs)i(successfully)d(on)h(se)n(v)o
(eral)1962 2453 y(real)k(w)o(orld)f(datasets,)i(including)d(symbolic)h
(polyphonic)e(music)1962 2553 y(data)i(\()p 0 0.08 0.45
TeXcolorrgb 2154 2553 a
SDict begin H.S end
 2154 2553 a Fw(Martens)20 b(&)g(Sutsk)o(e)n(v)o
(er)2857 2553 y
SDict begin 12 H.L end
 2857 2553 a 2857 2553 a
SDict begin [ /Subtype /Link /Dest (cite.Martens2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2857 2553 a 0
TeXcolorgray -2 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 2902
2553 a
SDict begin H.S end
 2902 2553 a Fw(2011)3070 2553 y
SDict begin 12 H.L end
 3070 2553 a 3070
2553 a
SDict begin [ /Subtype /Link /Dest (cite.Martens2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3070 2553 a 0 TeXcolorgray -2 w Fw(\).)41 b(Apart)25
b(from)f(second)h(or)n(-)1962 2653 y(der)33 b(methods)f(lik)o(e)i(HF)-7
b(,)34 b(se)n(v)o(eral)f(modi\002cations)f(to)i(\002rst-order)1962
2752 y(gradient)25 b(based)g(methods)g(e)o(xist)h(that)h(currently)d
(form)h(the)h(state)1962 2852 y(of)20 b(the)g(art)g(in)h(training)e
(RNNs)i(\()p 0 0.08 0.45 TeXcolorrgb 2903 2852 a
SDict begin H.S end
 2903
2852 a Fw(Bengio)e(et)i(al.)3325 2852 y
SDict begin 12 H.L end
 3325 2852 a 3325
2852 a
SDict begin [ /Subtype /Link /Dest (cite.bengio2012advances) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3325 2852 a 0 TeXcolorgray Fw(,)p 0 0.08 0.45
TeXcolorrgb 3366 2852 a
SDict begin H.S end
 3366 2852 a Fw(2012)3534 2852
y
SDict begin 12 H.L end
 3534 2852 a 3534 2852 a
SDict begin [ /Subtype /Link /Dest (cite.bengio2012advances) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3534 2852 a 0 TeXcolorgray
-2 w Fw(\).)1962 2930 y
SDict begin H.S end
 1962 2930 a 1962 2930 a
SDict begin 12 H.A end
 1962
2930 a 1962 2930 a
SDict begin [ /View [/FitH -32768] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 1962 2930 a 131 x Fl(3.2.)e(Recurr)o(ent)h(Neural)g
(Netw)o(ork-based)f(models)1962 3217 y Fw(One)e(of)g(the)h(dra)o
(wbacks)e(of)h(using)g(RNNs)h(to)g(predict)e(polyphonic)1962
3316 y(symbolic)29 b(music)g(is)i(that)f(the)g(outputs)f(of)g(the)h
(netw)o(ork,)36 b Fs(^)-47 b Fp(y)3770 3328 y Fo(T)3852
3316 y Fw(at)1962 3416 y(an)o(y)29 b(time)g(step)h Fp(T)12
b Fw(,)31 b(are)e(conditionally)e(independent)g(gi)n(v)o(en)h(the)1962
3516 y(sequence)36 b(of)h(input)f(v)o(ectors)h Fp(v)2936
3528 y Fk(1)2973 3516 y Fp(;)14 b(v)3050 3528 y Fk(2)3088
3516 y Fp(;)g(:)g(:)g(:)f(;)h(v)3312 3528 y Fo(T)3365
3516 y Fw(.)76 b(This)37 b(is)i(a)e(se-)1962 3615 y(v)o(ere)16
b(constraint)g(when)g(used)h(for)g(modelling)e(polyphonic)f(music,)1962
3715 y(where)19 b(notes)h(often)f(appear)f(in)i(v)o(ery)e(correlated)h
(patterns)g(within)1962 3815 y(a)26 b(frame.)41 b(In)26
b(order)f(to)h(o)o(v)o(ercome)d(this)j(limitation,)h(models)e(de-)1962
3914 y(ri)n(v)o(ed)36 b(from)h(RNNs)i(ha)n(v)o(e)e(been)g(proposed)e
(which)i(are)h(better)1962 4014 y(at)20 b(modelling)f(high-dimensional)
d(sequences)j(\()p 0 0.08 0.45 TeXcolorrgb 3386 4014
a
SDict begin H.S end
 3386 4014 a Fw(Sutsk)o(e)n(v)o(er)g(et)i(al.)3892 4014
y
SDict begin 12 H.L end
 3892 4014 a 3892 4014 a
SDict begin [ /Subtype /Link /Dest (cite.sutskever2008recurrent) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3892 4014 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1962 4114 a
SDict begin H.S end
 1962
4114 a Fw(2008)2130 4114 y
SDict begin 12 H.L end
 2130 4114 a 2130 4114 a
SDict begin [ /Subtype /Link /Dest (cite.sutskever2008recurrent) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2130
4114 a 0 TeXcolorgray -2 w Fw(;)p 0 0.08 0.45 TeXcolorrgb
2172 4114 a
SDict begin H.S end
 2172 4114 a Fw(Boulanger)n(-Le)n(w)o(ando)n(wski)16
b(et)21 b(al.)3187 4114 y
SDict begin 12 H.L end
 3187 4114 a 3187 4114 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3187
4114 a 0 TeXcolorgray Fw(,)p 0 0.08 0.45 TeXcolorrgb
3228 4114 a
SDict begin H.S end
 3228 4114 a Fw(2012)3396 4114 y
SDict begin 12 H.L end
 3396 4114
a 3396 4114 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3396 4114 a 0 TeXcolorgray -2 w Fw(\).)1962
4263 y(The)45 b(\002rst)h(RNN-based)f(model)g(that)g(tried)h(to)f
(model)g(high-)1962 4363 y(dimensional)h(sequences)g(is)i(the)f
(Recurrent)f(T)-6 b(emporal)46 b(Re-)1962 4462 y(stricted)38
b(Boltzmann)g(Machine)f(\(R)-5 b(TRBM\))39 b(\()p 0 0.08 0.45
TeXcolorrgb 3386 4462 a
SDict begin H.S end
 3386 4462 a Fw(Sutsk)o(e)n(v)o(er)19
b(et)i(al.)3892 4462 y
SDict begin 12 H.L end
 3892 4462 a 3892 4462 a
SDict begin [ /Subtype /Link /Dest (cite.sutskever2008recurrent) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3892 4462
a 0 TeXcolorgray -1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb
1962 4562 a
SDict begin H.S end
 1962 4562 a Fw(2008)2130 4562 y
SDict begin 12 H.L end
 2130 4562
a 2130 4562 a
SDict begin [ /Subtype /Link /Dest (cite.sutskever2008recurrent) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2130 4562 a 0 TeXcolorgray -2 w Fw(\).)j(The)16
b(R)-5 b(TRBM)18 b(is)f(a)g(conditional)e(RBM,)i(where)f(the)g(RBM)1962
4661 y(parameters)24 b(at)i(time)g Fp(t)g Fw(are)g(a)g(function)e(of)h
(the)h(visible)f(and)g(hid-)1962 4761 y(den)33 b(hidden)f(units)h(till)
i(time)e Fp(\034)58 b(<)47 b(t)p Fw(.)65 b(The)33 b(hidden)f(states)j
(of)1962 4861 y(the)g(R)-5 b(TRBM)37 b(are)e(updated)e(as)j(if)g(the)o
(y)e(belonged)f(to)i(a)h(re)o(gu-)1962 4960 y(lar)31
b(RNN,)g(b)n(ut)g(the)o(y)f(are)g(binary)g(during)e(inference.)55
b(A)31 b(major)1962 5060 y(constraint)g(with)i(the)f(R)-5
b(TRBM)33 b(is)g(that)g(the)f(hidden)e(states)k(are)1962
5160 y(responsible)28 b(for)h(con)m(v)o(e)o(ying)d(both)j(temporal)f
(information)f(and)1962 5259 y(modelling)34 b(the)h(conditional)e
(distrib)n(ution)h(at)i(each)f(time-step.)1962 5359 y(The)18
b(R)-5 b(TRBM)20 b(model)e(w)o(as)h(later)g(e)o(xtended)e(to)h(the)h
(more)f(general)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray .7 .7 .7 TeXcolorrgb
-392 39 a Fw(330)-392 139 y(331)-392 239 y(332)-392 338
y(333)-392 438 y(334)-392 538 y(335)-392 637 y(336)-392
737 y(337)-392 836 y(338)-392 936 y(339)-392 1036 y(340)-392
1135 y(341)-392 1235 y(342)-392 1335 y(343)-392 1434
y(344)-392 1534 y(345)-392 1633 y(346)-392 1733 y(347)-392
1833 y(348)-392 1932 y(349)-392 2032 y(350)-392 2132
y(351)-392 2231 y(352)-392 2331 y(353)-392 2430 y(354)-392
2530 y(355)-392 2630 y(356)-392 2729 y(357)-392 2829
y(358)-392 2929 y(359)-392 3028 y(360)-392 3128 y(361)-392
3227 y(362)-392 3327 y(363)-392 3427 y(364)-392 3526
y(365)-392 3626 y(366)-392 3726 y(367)-392 3825 y(368)-392
3925 y(369)-392 4024 y(370)-392 4124 y(371)-392 4224
y(372)-392 4323 y(373)-392 4423 y(374)-392 4523 y(375)-392
4622 y(376)-392 4722 y(377)-392 4821 y(378)-392 4921
y(379)-392 5021 y(380)-392 5120 y(381)-392 5220 y(382)-392
5320 y(383)-392 5419 y(384)4131 39 y(385)4131 139 y(386)4131
239 y(387)4131 338 y(388)4131 438 y(389)4131 538 y(390)4131
637 y(391)4131 737 y(392)4131 836 y(393)4131 936 y(394)4131
1036 y(395)4131 1135 y(396)4131 1235 y(397)4131 1335
y(398)4131 1434 y(399)4131 1534 y(400)4131 1633 y(401)4131
1733 y(402)4131 1833 y(403)4131 1932 y(404)4131 2032
y(405)4131 2132 y(406)4131 2231 y(407)4131 2331 y(408)4131
2430 y(409)4131 2530 y(410)4131 2630 y(411)4131 2729
y(412)4131 2829 y(413)4131 2929 y(414)4131 3028 y(415)4131
3128 y(416)4131 3227 y(417)4131 3327 y(418)4131 3427
y(419)4131 3526 y(420)4131 3626 y(421)4131 3726 y(422)4131
3825 y(423)4131 3925 y(424)4131 4024 y(425)4131 4124
y(426)4131 4224 y(427)4131 4323 y(428)4131 4423 y(429)4131
4523 y(430)4131 4622 y(431)4131 4722 y(432)4131 4821
y(433)4131 4921 y(434)4131 5021 y(435)4131 5120 y(436)4131
5220 y(437)4131 5320 y(438)4131 5419 y(439)p 0 TeXcolorgray
0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.S end

-138 -124 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.R end

-138 -124 a -138 -124 a
SDict begin [ /View [/FitH -32768] /Dest (page.4) cvn H.B /DEST pdfmark end
 -138 -124 a 0 TeXcolorgray 557
-149 a Fq(RNN-based)18 b(Music)g(Language)h(Models)f(f)n(or)h(Impr)o(o)
o(ving)g(A)l(utomatic)h(Music)d(T)-6 b(ranscription)p
-138 -116 4050 9 v 0 TeXcolorgray -138 42 a Fw(RNN-RBM)26
b(model)f(\()p 0 0.08 0.45 TeXcolorrgb 537 42 a
SDict begin H.S end
 537 42
a Fw(Boulanger)n(-Le)n(w)o(ando)n(wski)16 b(et)k(al.)1551
42 y
SDict begin 12 H.L end
 1551 42 a 1551 42 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1551 42 a 0 TeXcolorgray Fw(,)p
0 0.08 0.45 TeXcolorrgb 1598 42 a
SDict begin H.S end
 1598 42 a Fw(2012)1766
42 y
SDict begin 12 H.L end
 1766 42 a 1766 42 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1766 42 a 0 TeXcolorgray -2
w Fw(\).)-138 141 y(In)26 b(this)i(model,)f(there)f(is)h(a)h(separate)e
(hidden)f(state)i(which)f(con-)-138 241 y(v)o(e)o(ys)34
b(the)g(temporal)f(information.)65 b(The)34 b(hidden)f(state)i(of)g
(the)-138 341 y(RBM)h(is)f(then)f(free)g(to)h(model)f(only)f(the)i
(distrib)n(ution)e(at)i(that)-138 440 y(time)18 b(step.)25
b(It)18 b(w)o(as)h(found)d(that)i(the)g(RNN-RBM)h(performs)d(better)
-138 540 y(than)k(the)g(R)-5 b(TRBM)22 b(at)f(modelling)e(symbolic)g
(polyphonic)f(music)-138 640 y(\()p 0 0.08 0.45 TeXcolorrgb
-110 640 a
SDict begin H.S end
 -110 640 a Fw(Boulanger)n(-Le)n(w)o(ando)n(wski)e(et)21
b(al.)905 640 y
SDict begin 12 H.L end
 905 640 a 905 640 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 905 640 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 946 640 a
SDict begin H.S end
 946 640
a Fw(2012)1114 640 y
SDict begin 12 H.L end
 1114 640 a 1114 640 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1114 640 a
0 TeXcolorgray -2 w Fw(\).)-138 789 y(F)o(or)33 b(our)g(prediction)g
(system,)k(we)d(mak)o(e)f(use)h(of)g(a)g(v)n(ariant)f(of)-138
889 y(the)c(RNN-RBM,)g(called)f(the)h(RNN-N)m(ADE.)g(The)f(only)g(dif)n
(fer)n(-)-138 988 y(ence)j(being)f(that)i(the)f(conditional)e(distrib)n
(utions)i(at)g(each)g(step)-138 1088 y(are)26 b(modelled)e(by)i(a)g
(Neural)g(Autore)o(gressi)n(v)o(e)d(Distrib)n(ution)i(Es-)-138
1188 y(timator)g(\(N)m(ADE\))f(\()p 0 0.08 0.45 TeXcolorrgb
464 1188 a
SDict begin H.S end
 464 1188 a Fw(Larochelle)19 b(&)h(Murray)1176
1188 y
SDict begin 12 H.L end
 1176 1188 a 1176 1188 a
SDict begin [ /Subtype /Link /Dest (cite.Larochelle2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1176 1188 a 0 TeXcolorgray
-2 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1221 1188 a
SDict begin H.S end
 1221
1188 a Fw(2011)1389 1188 y
SDict begin 12 H.L end
 1389 1188 a 1389 1188 a
SDict begin [ /Subtype /Link /Dest (cite.Larochelle2011) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1389
1188 a 0 TeXcolorgray -2 w Fw(\))25 b(as)h(opposed)-138
1287 y(to)h(an)g(RBM.)h(As)g(discussed)e(in)i(the)f(ne)o(xt)f(section,)
i(to)f(combine)-138 1387 y(the)18 b(predictions)f(with)h(the)g
(transcription)e(system,)i(we)h(need)e(indi-)-138 1486
y(vidual)k(pitch)h(acti)n(v)n(ation)f(probabilities)f(at)j(each)f
(time-step.)30 b(Ob-)-138 1586 y(taining)e(these)h(probabilities)e
(from)h(an)h(RBM)g(is)h(intractable)e(as)-138 1686 y(it)d(requires)e
(summing)f(o)o(v)o(er)h(all)h(possible)g(hidden)f(states.)37
b(Ho)n(w-)-138 1785 y(e)n(v)o(er)20 b(the)i(N)m(ADE)f(is)h(a)g
(tractable)f(distrib)n(ution)f(estimator)g(and)h(we)-138
1885 y(can)k(easily)h(obtain)e(these)i(probabilities)e(from)g(the)i(N)m
(ADE.)f(The)-138 1985 y(N)m(ADE)g(models)f(the)h(probability)e(of)i
(occurrence)e(of)h(a)i(v)o(ector)d Fp(p)-138 2084 y Fw(as:)-20
2084 y
SDict begin H.S end
 -20 2084 a -20 2084 a
SDict begin 12 H.A end
 -20 2084 a -20 2084 a
SDict begin [ /View [/FitH -32768] /Dest (equation.9) cvn H.B /DEST pdfmark end
 -20
2084 a 28 2315 a Fp(P)12 b Fs(\()p Fp(p)p Fs(\))23 b(=)336
2211 y Fo(D)311 2236 y Fn(Y)310 2413 y Fo(i)p Fk(=1)431
2315 y Fp(P)12 b Fs(\()p Fp(p)570 2327 y Fo(i)598 2315
y Fm(j)p Fh(p)674 2327 y Fo(<)p Fg(i)751 2315 y Fs(\))932
b Fw(\(9\))-138 2568 y(where)20 b Fp(p)i Fm(2)i Fj(R)289
2538 y Fo(D)370 2568 y Fw(and)19 b Fp(p)552 2580 y Fo(i)601
2568 y Fw(is)i(the)f(pitch)g(acti)n(v)n(ation.)-138 2718
y(In)35 b(our)g(system)h(we)g(utilise)h(each)e(of)h(the)f(conditional)f
(proba-)-138 2817 y(bilities)28 b Fp(p)p Fs(\()p Fp(p)232
2829 y Fo(i)260 2817 y Fm(j)p Fh(p)336 2829 y Fo(<)p
Fg(i)413 2817 y Fs(\))h Fw(as)f(probabilities)e(of)i(the)f(pitch)h
(acti)n(v)n(ations.)-138 2917 y(Although)j(the)i(pitch)f(acti)n(v)n
(ation)g(probabilities)g(are)g(only)g(con-)-138 3017
y(ditioned)f(on)h Fh(p)336 3029 y Fo(<)p Fg(i)413 3017
y Fw(,)k(we)d(hypothesize)d(that)j(this)g(will)g(be)f(a)h(bet-)-138
3116 y(ter)26 b(model)g(than)f(the)i(RNN,)f(where)g(the)g(pitch)g(acti)
n(v)n(ation)f(prob-)-138 3216 y(abilities)j(are)g(completely)f
(independent.)45 b(Another)26 b(moti)n(v)n(ation)-138
3316 y(for)d(using)f(the)h(N)m(ADE)h(is)g(that)f(the)g(gradients)f(can)
h(be)h(computed)-138 3415 y(e)o(xactly)-5 b(,)23 b(and)g(therefore)f
(we)h(can)h(emplo)o(y)e(HF)i(optimization)e(for)-138
3515 y(training)d(the)h(RNN-N)m(ADE.)-138 3605 y
SDict begin H.S end
 -138
3605 a -138 3605 a
SDict begin 12 H.A end
 -138 3605 a -138 3605 a
SDict begin [ /View [/FitH -32768] /Dest (section.4) cvn H.B /DEST pdfmark end
 -138 3605
a 148 x Fu(4.)25 b(Combining)g(T)-7 b(ranscription)25
b(and)h(Pr)n(ediction)-138 3914 y Fw(In)e(this)h(section,)h(we)f
(describe)e(the)i(process)f(for)g(combining)f(the)-138
4014 y(acoustic)17 b(model)g(with)g(the)h(music)f(language)f(model)h
(for)f(deri)n(ving)-138 4114 y(an)i(impro)o(v)o(ed)e(transcription.)23
b(Firstly)-5 b(,)18 b(the)h(input)f(music)g(signal)h(is)-138
4213 y(transcribed)24 b(using)i(the)f(process)h(described)e(in)i
(Section)p 0 0.08 0.45 TeXcolorrgb 1578 4213 a
SDict begin H.S end
 1578 4213
a 0 0.08 0.45 TeXcolorrgb Fw(2)p 0 0.08 0.45 TeXcolorrgb
1619 4157 a
SDict begin H.R end
 1619 4157 a 1619 4213 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.2) cvn H.B /ANN pdfmark end
 1619 4213 a 0 TeXcolorgray
Fw(.)43 b(The)-138 4313 y(resulting)22 b(piano-roll)e(representation)g
(of)i(the)h(transcription)d(sys-)-138 4412 y(tem)30 b(is)h(considered)d
(to)h(be)h(a)g(sequence)f Fp(p)1140 4424 y Fk(1)1177
4412 y Fp(;)14 b(p)1256 4424 y Fk(2)1293 4412 y Fp(;)g(:)g(:)g(:)f(;)h
(p)1519 4424 y Fo(T)1602 4412 y Fw(that)30 b(is)-138
4512 y(placed)e(as)i(input)f(to)g(the)h(MLM)f(presented)f(in)h(Section)
p 0 0.08 0.45 TeXcolorrgb 1583 4513 a
SDict begin H.S end
 1583 4513 a 0 0.08 0.45
TeXcolorrgb -1 x Fw(3)p 0 0.08 0.45 TeXcolorrgb 1624
4455 a
SDict begin H.R end
 1624 4455 a 1624 4512 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.3) cvn H.B /ANN pdfmark end
 1624 4512 a 0 TeXcolorgray
Fw(.)53 b(F)o(or)-138 4612 y(the)33 b(RNN-N)m(ADE,)f(we)h(compute)e
(the)i(probability)e Fp(P)12 b Fs(\()p Fp(p)1602 4624
y Fo(i)1629 4612 y Fm(j)p Fh(v)1702 4624 y Fo(<)p Fg(i)1780
4612 y Fs(\))-138 4711 y Fw(for)29 b(all)h(time)f(frames,)i(and)e(use)g
(that)h(as)g(prior)e(information)f(for)-138 4811 y(the)32
b(combined)d(model,)k(with)f(the)g(prior)e(information)f(denoted)-138
4911 y(as)36 b Fp(P)20 4923 y Ff(MLM)197 4911 y Fs(\()p
Fp(p;)14 b(t)p Fs(\))p Fw(,)41 b(where)35 b Fp(P)724
4923 y Ff(MLM)901 4911 y Fs(\()p Fp(p)52 b Fs(=)f Fp(i;)14
b(t)p Fs(\))52 b(=)f Fp(P)12 b Fs(\()p Fp(p)1578 4923
y Fo(i)1606 4911 y Fm(j)p Fh(p)1682 4923 y Fo(<)p Fg(i)1759
4911 y Fs(\))p Fw(.)-138 5010 y(F)o(or)27 b(the)f(RNN,)i(the)f
(prediction)e(output)h(is)h(directly)g(denoted)e(as)-138
5110 y Fp(P)-85 5122 y Ff(MLM)92 5110 y Fs(\()p Fp(p;)14
b(t)p Fs(\))p Fw(,)21 b(since)f(pitch)g(probabilities)f(are)h
(independent.)-138 5259 y(As)35 b(sho)n(wn)e(in)h(\()p
0 0.08 0.45 TeXcolorrgb 365 5259 a
SDict begin H.S end
 365 5259 a Fw(Smaragdis)19
b(&)i(Mysore)1077 5259 y
SDict begin 12 H.L end
 1077 5259 a 1077 5259 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1077
5259 a 0 TeXcolorgray -2 w Fw(,)p 0 0.08 0.45 TeXcolorrgb
1131 5259 a
SDict begin H.S end
 1131 5259 a Fw(2009)1299 5259 y
SDict begin 12 H.L end
 1299 5259
a 1299 5259 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1299 5259 a 0 TeXcolorgray -2 w Fw(\),)37
b(PLCA-based)-138 5359 y(models)h(use)h(multinomial)e(distrib)n
(utions;)48 b(since)38 b(the)h(Dirich-)p 0 TeXcolorgray
0 TeXcolorgray 1962 42 a(let)30 b(distrib)n(ution)d(is)j(conjugate)d
(to)i(the)g(multinomial,)h(a)f(Dirich-)1962 141 y(let)f(prior)e(can)h
(be)g(used)f(to)i(enforce)d(structure)h(on)h(the)g(pitch)g(ac-)1962
241 y(ti)n(v)n(ation)37 b(distrib)n(ution)f Fp(P)2722
253 y Fo(t)2752 241 y Fs(\()p Fp(p)p Fs(\))p Fw(.)78
b(F)o(ollo)n(wing)36 b(the)i(procedure)d(of)1962 341
y(\()p 0 0.08 0.45 TeXcolorrgb 1990 341 a
SDict begin H.S end
 1990 341 a
Fw(Smaragdis)19 b(&)h(Mysore)2701 341 y
SDict begin 12 H.L end
 2701 341 a 2701
341 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2701 341 a 0 TeXcolorgray -1 w Fw(,)p 0 0.08 0.45
TeXcolorrgb 2749 341 a
SDict begin H.S end
 2749 341 a Fw(2009)2917 341 y
SDict begin 12 H.L end

2917 341 a 2917 341 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2917 341 a 0 TeXcolorgray -2 w
Fw(\),)29 b(we)f(de\002ne)f(the)h(Dirichlet)f(hy-)1962
440 y(perparameter)18 b(for)h(the)h(pitch)g(acti)n(v)n(ation)f(as:)3309
440 y
SDict begin H.S end
 3309 440 a 3309 440 a
SDict begin 12 H.A end
 3309 440 a 3309 440 a
SDict begin [ /View [/FitH -32768] /Dest (equation.10) cvn H.B /DEST pdfmark end
 3309
440 a 2128 659 a Fp(\013)p Fs(\()p Fp(p)p Fm(j)p Fp(t)p
Fs(\))24 b(=)2531 602 y Fp(P)12 b Fs(\()p Fp(p)p Fm(j)p
Fp(t)p Fs(\))p Fp(P)2808 614 y Ff(MLM)2986 602 y Fs(\()p
Fp(p;)i(t)p Fs(\))p 2462 639 768 4 v 2462 653 a Fn(P)2549
740 y Fo(p)2601 715 y Fp(P)e Fs(\()p Fp(p)p Fm(j)p Fp(t)p
Fs(\))p Fp(P)2878 727 y Ff(MLM)3055 715 y Fs(\()p Fp(p;)i(t)p
Fs(\))3774 659 y Fw(\(10\))1962 896 y(where)33 b Fp(\013)p
Fs(\()p Fp(p)p Fm(j)p Fp(t)p Fs(\))i Fw(essentially)e(is)h(a)g(pitch)f
(acti)n(v)n(ation)g(probability)1962 995 y(which)e(is)h(\002ltered)e
(through)f(a)j(pitch)e(indicator)g(function)f(com-)1962
1095 y(puted)24 b(from)g(the)h(symbolic)f(prediction)f(step)j(\(the)e
(denominator)1962 1195 y(is)d(simply)f(for)g(normalisation)e
(purposes\).)1962 1344 y(The)23 b(recording)e(is)j(then)f
(re-transcribed,)e(using)i(as)g(aditional)g(in-)1962
1444 y(formation)i(the)j(prior)e(computed)f(from)i(the)g(transcription)
f(step.)1962 1543 y(The)17 b(modi\002ed)f(update)g(for)g(the)i(pitch)e
(acti)n(v)n(ation)g(which)h(replaces)1962 1643 y(\()p
0 0.08 0.45 TeXcolorrgb 1990 1644 a
SDict begin H.S end
 1990 1644 a 0 0.08 0.45
TeXcolorrgb -1 x Fw(5)p 0 0.08 0.45 TeXcolorrgb 2031
1586 a
SDict begin H.R end
 2031 1586 a 2031 1643 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (equation.5) cvn H.B /ANN pdfmark end
 2031 1643 a 0 TeXcolorgray
Fw(\))k(is)g(gi)n(v)o(en)e(by:)2489 1643 y
SDict begin H.S end
 2489 1643
a 2489 1643 a
SDict begin 12 H.A end
 2489 1643 a 2489 1643 a
SDict begin [ /View [/FitH -32768] /Dest (equation.11) cvn H.B /DEST pdfmark end
 2489 1643 a 2128
1874 a Fp(P)2181 1886 y Fo(t)2211 1874 y Fs(\()p Fp(p)p
Fs(\))k(=)2465 1743 y Fn(P)2552 1830 y Fo(!)r(;f)s(;s)2720
1805 y Fp(P)2773 1817 y Fo(t)2803 1805 y Fs(\()p Fp(p;)14
b(f)t(;)g(s)p Fm(j)p Fp(!)s Fs(\))p Fp(V)3193 1817 y
Fo(!)r(;t)3304 1805 y Fs(+)k Fp(\024\013)p Fs(\()p Fp(p)p
Fm(j)p Fp(t)p Fs(\))p 2438 1854 1238 4 v 2438 1868 a
Fn(P)2525 1955 y Fo(p;!)r(;f)s(;s)2747 1930 y Fp(P)2800
1942 y Fo(t)2830 1930 y Fs(\()p Fp(p;)c(f)t(;)g(s)p Fm(j)p
Fp(!)s Fs(\))p Fp(V)3220 1942 y Fo(!)r(;t)3331 1930 y
Fs(+)k Fp(\024\013)p Fs(\()p Fp(p)p Fm(j)p Fp(t)p Fs(\))3774
1874 y Fw(\(11\))1962 2105 y(where)45 b Fp(\024)h Fw(is)h(a)f(weight)f
(parameter)f(e)o(xpressing)g(ho)n(w)i(much)1962 2205
y(the)26 b(prior)f(should)h(be)g(imposed;)i(as)f(in)f(\()p
0 0.08 0.45 TeXcolorrgb 3181 2205 a
SDict begin H.S end
 3181 2205 a Fw(Smaragdis)19
b(&)i(Mysore)3893 2205 y
SDict begin 12 H.L end
 3893 2205 a 3893 2205 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3893
2205 a 0 TeXcolorgray -2 w Fw(,)p 0 0.08 0.45 TeXcolorrgb
1962 2304 a
SDict begin H.S end
 1962 2304 a Fw(2009)2130 2304 y
SDict begin 12 H.L end
 2130 2304
a 2130 2304 a
SDict begin [ /Subtype /Link /Dest (cite.Smaragdis2009) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2130 2304 a 0 TeXcolorgray -2 w Fw(\),)d(the)f(weight)g
(decreases)g(from)f(1)h(to)h(0)f(throughout)d(the)j(iter)n(-)1962
2404 y(ations.)31 b(In)22 b(a)g(lar)o(ger)f(conte)o(xt,)g(the)i
(transcription)d(creates)i(a)h(sym-)1962 2504 y(bolic)34
b(prediction,)i(which)e(in)g(turn)g(impro)o(v)o(es)f(the)h(subsequent)
1962 2603 y(re-transcription)28 b(of)i(the)h(music)f(signal.)56
b(An)30 b(o)o(v)o(ervie)n(w)e(of)j(the)1962 2703 y(complete)e
(transcription-prediction)d(system)31 b(architecture)e(can)1962
2802 y(be)20 b(seen)g(in)h(Fig.)p 0 0.08 0.45 TeXcolorrgb
2472 2802 a
SDict begin H.S end
 2472 2802 a 0 0.08 0.45 TeXcolorrgb Fw(4)p
0 0.08 0.45 TeXcolorrgb 2514 2746 a
SDict begin H.R end
 2514 2746 a 2514
2802 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (figure.1) cvn H.B /ANN pdfmark end
 2514 2802 a 0 TeXcolorgray Fw(.)1962 2892 y
SDict begin H.S end
 1962
2892 a 1962 2892 a
SDict begin 12 H.A end
 1962 2892 a 1962 2892 a
SDict begin [ /View [/FitH -32768] /Dest (section.5) cvn H.B /DEST pdfmark end
 1962 2892
a 148 x Fu(5.)k(Ev)o(aluation)1962 3053 y
SDict begin H.S end
 1962 3053 a
1962 3053 a
SDict begin 12 H.A end
 1962 3053 a 1962 3053 a
SDict begin [ /View [/FitH -32768] /Dest (subsection.5.1) cvn H.B /DEST pdfmark end
 1962 3053 a 149 x
Fl(5.1.)19 b(Dataset)1962 3357 y Fw(F)o(or)e(testing)g(the)g
(transcription)e(system,)j(we)f(emplo)o(y)f(the)h(Bach10)1962
3457 y(dataset)43 b(\()p 0 0.08 0.45 TeXcolorrgb 2264
3457 a
SDict begin H.S end
 2264 3457 a Fw(Duan)19 b(et)i(al.)2626 3457 y
SDict begin 12 H.L end

2626 3457 a 2626 3457 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2626 3457 a 0 TeXcolorgray Fw(,)p
0 0.08 0.45 TeXcolorrgb 2690 3457 a
SDict begin H.S end
 2690 3457 a Fw(2010)2858
3457 y
SDict begin 12 H.L end
 2858 3457 a 2858 3457 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2858 3457 a 0 TeXcolorgray
-2 w Fw(\),)48 b(which)43 b(is)h(a)f(freely)f(a)n(v)n(ailable)1962
3557 y(multi-track)36 b(collection)g(of)h(multiple-instrument)d
(polyphonic)1962 3656 y(music,)h(suitable)c(for)h(multi-pitch)e
(detection)h(e)o(xperiments.)58 b(It)1962 3756 y(consists)20
b(of)g(ten)g(recordings)e(of)h(J.S.)h(Bach)g(chorales,)f(performed)1962
3855 y(by)24 b(violin,)h(clarinet,)g(saxophone,)e(and)h(bassoon.)37
b(Pitch)25 b(ground)1962 3955 y(truth)20 b(for)g(each)g(instrument)f
(is)i(also)g(pro)o(vided.)i(Due)d(to)h(the)f(tonal)1962
4055 y(and)30 b(homogenous)d(content)j(of)g(the)h(dataset,)i(it)e(is)h
(suitable)e(for)1962 4154 y(testing)j(the)h(incorporation)c(of)j(music)
g(language)f(models)h(in)g(a)1962 4254 y(transcription)h(system.)71
b(F)o(or)35 b(training)f(the)i(transcription)d(sys-)1962
4354 y(tem,)k(pre-e)o(xtracted)32 b(and)h(pre-shifted)f(spectral)i
(templates)g(are)1962 4453 y(e)o(xtracted)26 b(for)g(the)i(instruments)
e(present)h(in)g(the)g(dataset,)i(using)1962 4553 y(isolated)21
b(note)g(samples)g(from)f(the)h(R)-5 b(WC)23 b(database)d(\()p
0 0.08 0.45 TeXcolorrgb 3543 4553 a
SDict begin H.S end
 3543 4553 a Fw(Goto)g(et)h(al.)3892
4553 y
SDict begin 12 H.L end
 3892 4553 a 3892 4553 a
SDict begin [ /Subtype /Link /Dest (cite.Goto2003) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3892 4553 a 0 TeXcolorgray
-1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb 1962 4652 a
SDict begin H.S end
 1962
4652 a Fw(2003)2130 4652 y
SDict begin 12 H.L end
 2130 4652 a 2130 4652 a
SDict begin [ /Subtype /Link /Dest (cite.Goto2003) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 2130
4652 a 0 TeXcolorgray -2 w Fw(\).)1962 4802 y(F)o(or)31
b(training)f(the)i(MLMs)f(we)h(use)f(the)h(Nottingham)d(dataset.)p
0 0.08 0.45 TeXcolorrgb 3879 4802 a
SDict begin H.S end
 3879 4802 a -30 x
Fe(1)3912 4802 y
SDict begin 12 H.L end
 3912 4802 a 3912 4802 a
SDict begin [ /Subtype /Link /Dest (Hfootnote.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 3912 4802 a
0 TeXcolorgray 1962 4902 a Fw(W)-7 b(e)33 b(trained)f(the)g(RNN)h(and)f
(the)g(RNN-N)m(ADE)g(models)g(using)1962 5001 y(both)26
b(Stochastic)h(Gradient)f(Descent)h(\(SGD\))g(and)g(HF)g(to)g(com-)1962
5101 y(pare)h(performance.)47 b(The)28 b(inputs)g(to)h(both)e(the)i
(models)f(are)g(se-)1962 5200 y(quences)19 b(of)g(length)g(200)g(where)
g(each)g(frame)g(of)g(the)h(sequence)f(is)p 0 TeXcolorgray
1962 5272 481 4 v 2067 5327 a Fd(1)p 0 TeXcolorgray 2096
5359 a
SDict begin H.S end
 2096 5359 a 0 TeXcolorgray 0 TeXcolorgray 2096
5359 a
SDict begin H.R end
 2096 5359 a 2096 5359 a
SDict begin [ /View [/FitH -32768] /Dest (Hfootnote.1) cvn H.B /DEST pdfmark end
 2096 5359 a 0 TeXcolorgray
Fr(ifdo.ca/)g(se)o(ymour/nottingham/nottingham.html)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray .7 .7 .7 TeXcolorrgb
-392 39 a Fw(440)-392 139 y(441)-392 239 y(442)-392 338
y(443)-392 438 y(444)-392 538 y(445)-392 637 y(446)-392
737 y(447)-392 836 y(448)-392 936 y(449)-392 1036 y(450)-392
1135 y(451)-392 1235 y(452)-392 1335 y(453)-392 1434
y(454)-392 1534 y(455)-392 1633 y(456)-392 1733 y(457)-392
1833 y(458)-392 1932 y(459)-392 2032 y(460)-392 2132
y(461)-392 2231 y(462)-392 2331 y(463)-392 2430 y(464)-392
2530 y(465)-392 2630 y(466)-392 2729 y(467)-392 2829
y(468)-392 2929 y(469)-392 3028 y(470)-392 3128 y(471)-392
3227 y(472)-392 3327 y(473)-392 3427 y(474)-392 3526
y(475)-392 3626 y(476)-392 3726 y(477)-392 3825 y(478)-392
3925 y(479)-392 4024 y(480)-392 4124 y(481)-392 4224
y(482)-392 4323 y(483)-392 4423 y(484)-392 4523 y(485)-392
4622 y(486)-392 4722 y(487)-392 4821 y(488)-392 4921
y(489)-392 5021 y(490)-392 5120 y(491)-392 5220 y(492)-392
5320 y(493)-392 5419 y(494)4131 39 y(495)4131 139 y(496)4131
239 y(497)4131 338 y(498)4131 438 y(499)4131 538 y(500)4131
637 y(501)4131 737 y(502)4131 836 y(503)4131 936 y(504)4131
1036 y(505)4131 1135 y(506)4131 1235 y(507)4131 1335
y(508)4131 1434 y(509)4131 1534 y(510)4131 1633 y(511)4131
1733 y(512)4131 1833 y(513)4131 1932 y(514)4131 2032
y(515)4131 2132 y(516)4131 2231 y(517)4131 2331 y(518)4131
2430 y(519)4131 2530 y(520)4131 2630 y(521)4131 2729
y(522)4131 2829 y(523)4131 2929 y(524)4131 3028 y(525)4131
3128 y(526)4131 3227 y(527)4131 3327 y(528)4131 3427
y(529)4131 3526 y(530)4131 3626 y(531)4131 3726 y(532)4131
3825 y(533)4131 3925 y(534)4131 4024 y(535)4131 4124
y(536)4131 4224 y(537)4131 4323 y(538)4131 4423 y(539)4131
4523 y(540)4131 4622 y(541)4131 4722 y(542)4131 4821
y(543)4131 4921 y(544)4131 5021 y(545)4131 5120 y(546)4131
5220 y(547)4131 5320 y(548)4131 5419 y(549)p 0 TeXcolorgray
0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.S end

-138 -124 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.R end

-138 -124 a -138 -124 a
SDict begin [ /View [/FitH -32768] /Dest (page.5) cvn H.B /DEST pdfmark end
 -138 -124 a 0 TeXcolorgray 557
-149 a Fq(RNN-based)18 b(Music)g(Language)h(Models)f(f)n(or)h(Impr)o(o)
o(ving)g(A)l(utomatic)h(Music)d(T)-6 b(ranscription)p
-138 -116 4050 9 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 476 846 a
 currentpoint currentpoint translate 0.59117 0.59117 scale neg exch neg exch translate
 476 846 a 20 w @beginspecial
91 @llx 522 @lly 659 @urx 702 @ury 5680 @rwi @setspecial
%%BeginDocument: figures/FigSystem.eps
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 91 522 659 702
%%HiResBoundingBox: 91.194 522.268 658.842 701.984
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: Fig1.dvi
%%CreationDate: Thu Jan 30 20:55:08 2014
%%DocumentFonts: Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Fig1.dvi -E -o Fig1.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.01.30:2054
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (Fig1.dvi)
@start /Fa 166[57 3[57 48 44 53 57 44 57 57 70 48 2[26
2[44 48 57 53 1[57 19[26 45[{TeXBase1Encoding ReEncodeFont}18
78.8709 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
125 1648 a
 currentpoint currentpoint translate 1 1 scale neg exch neg exch translate
 125 1648 a 152 899 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray   0. true 164.94568
69.70912 57.96352 5.97527 .5 Frame  gsave 1.13791 SLW 0  setgray  1.
.setopacityalpha  0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray   0. true 333.38629
69.70912 226.4037 5.97527 .5 Frame  gsave 1.13791 SLW 0  setgray  1.
.setopacityalpha  0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray   0. true 501.25731
69.70912 394.27515 5.97527 .5 Frame  gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha  0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0
  1. .setopacityalpha  Arrow  EndArrow  } def  [ 57.96352 36.70384
6.17975 36.70384   /Lineto /lineto load def false 0  setlinejoin Line
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0
  1. .setopacityalpha  Arrow  EndArrow  } def  [ 228.1108 36.70384
164.37694 36.70384   /Lineto /lineto load def false 0  setlinejoin
Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha  0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0
  1. .setopacityalpha  Arrow  EndArrow  } def  [ 395.41307 36.70384
332.81712 36.70384   /Lineto /lineto load def false 0  setlinejoin
Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha  0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0
  1. .setopacityalpha  Arrow  EndArrow  } def  [ 550.19606 36.70384
501.25731 36.70384   /Lineto /lineto load def false 0  setlinejoin
Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha  0  setlinecap
stroke  grestore end
 
@endspecial
159 487 a Fa(A)l(UDIO)722 528 y(TIME-FREQ)o(UENCY)742
704 y(REPRESENT)-7 b(A)e(TION)2153 619 y(TRANSCRIPTION)3655
610 y(PREDICTION)4421 487 y(PIANO-R)m(OLL)152 899 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 447.766 90.19514 447.766 69.70912   /Lineto
/lineto load def false 0  setlinejoin Line  gsave 1.13791 SLW 0  setgray
 1. .setopacityalpha  0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 447.19727 89.62596 279.895 89.62596   /Lineto
/lineto load def false 0  setlinejoin Line  gsave 1.13791 SLW 0  setgray
 1. .setopacityalpha  0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0
  1. .setopacityalpha  Arrow  EndArrow  } def  [ 280.46417 70.2783
280.46417 89.62596   /Lineto /lineto load def false 0  setlinejoin
Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha  0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0 360 45.80893
4.83691 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 280.74855 -35.8503
Ellipse closepath gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0 360 45.80893
4.83691 .5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 281.31772 -85.35823
Ellipse closepath gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 236.07797 -85.07385 235.50879 -35.56592  
/Lineto /lineto load def false 0  setlinejoin Line  gsave 1.13791 SLW
0  setgray  1. .setopacityalpha  0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def  [ 325.98831 -86.78094 325.98831 -35.56592  
/Lineto /lineto load def false 0  setlinejoin Line  gsave 1.13791 SLW
0  setgray  1. .setopacityalpha  0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0.99607 0.99607 0.99607  setrgbcolor
  0. true 325.41913 -79.95213 236.64671 -85.6426 .5 Frame  gsave 1
 setgray  1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0.99607
0.99607 0.99607  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial
2247 1441 a(DICTION)m(AR)k(Y)152 899 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0
  1. .setopacityalpha  Arrow  EndArrow  } def  [ 278.18791 6.544 278.18791
-31.58255   /Lineto /lineto load def false 0  setlinejoin Line  gsave
1.13791 SLW 0  setgray  1. .setopacityalpha  0  setlinecap stroke 
grestore end
 
@endspecial 125 1648 a
 currentpoint currentpoint translate 1 1 div 1 1 div scale neg exch
neg exch translate
 125 1648 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 476 846 a
 currentpoint currentpoint translate 1 0.59117 div 1 0.59117 div scale neg exch neg exch translate
 476 846 a 1346 1020 a Fc(Figure)19
b(1.)p 0 TeXcolorgray 1641 1020 a
SDict begin H.S end
 1641 1020 a 0 TeXcolorgray
0 TeXcolorgray 1641 1020 a
SDict begin H.R end
 1641 1020 a 1641 1020 a
SDict begin [ /View [/FitH -32768] /Dest (figure.1) cvn H.B /DEST pdfmark end
 1641
1020 a 0 TeXcolorgray Fr(Proposed)h(system)g(diagram.)p
0 TeXcolorgray -138 1327 a Fw(a)i(binary)f(v)o(ector)g(of)g(length)g
(88)h(which)f(co)o(v)o(ers)g(the)h(full)g(range)f(of)-138
1426 y(the)j(piano)g(from)f(A0)i(to)f(C8.)38 b(W)-7 b(e)25
b(train)g(both)e(the)i(RNN)g(and)f(the)-138 1526 y(RNN-N)m(ADE)c(to)g
(predict)f(the)h(ne)o(xt)f(v)o(ector)f(gi)n(v)o(en)h(a)h(sequence)f(of)
-138 1626 y(input)e(v)o(ectors.)23 b(W)-7 b(e)18 b(train)f(the)h
(models)e(by)h(minimizing)f(the)h(ne)o(ga-)-138 1725
y(ti)n(v)o(e)f(log-lik)o(elihood)e(of)i(the)h(sequences)e(using)h(the)h
(cross-entrop)o(y)-138 1825 y(objecti)n(v)o(e)185 1763
y Fn(P)273 1850 y Fo(i)315 1825 y Fp(t)345 1837 y Fo(i)386
1825 y Fs(log)d Fp(p)549 1837 y Fo(i)596 1825 y Fs(+)19
b(\(1)h Fm(\000)f Fp(t)888 1837 y Fo(i)916 1825 y Fs(\))14
b(log\(1)19 b Fm(\000)h Fp(p)1289 1837 y Fo(i)1316 1825
y Fs(\))j Fw(where)e(i)h(sums)-138 1924 y(o)o(v)o(er)d(all)i(the)f
(dimensions)f(of)h(the)g(binary)f(v)o(ector)-5 b(.)-138
2002 y
SDict begin H.S end
 -138 2002 a -138 2002 a
SDict begin 12 H.A end
 -138 2002 a -138 2002
a
SDict begin [ /View [/FitH -32768] /Dest (subsection.5.2) cvn H.B /DEST pdfmark end
 -138 2002 a 132 x Fl(5.2.)19 b(Metrics)-138 2289 y
Fw(F)o(or)h(e)n(v)n(aluating)g(the)g(performance)e(of)j(the)f(proposed)
f(system)i(for)-138 2389 y(multi-pitch)g(detection,)g(we)h(emplo)o(y)f
(the)h(precision,)f(recall,)h(and)-138 2489 y(F-measure)c(metrics,)i
(which)f(are)g(commonly)e(used)i(in)h(transcrip-)-138
2588 y(tion)g(e)n(v)n(aluations)f(\()p 0 0.08 0.45 TeXcolorrgb
435 2588 a
SDict begin H.S end
 435 2588 a Fw(MIR)592 2588 y
SDict begin 12 H.L end
 592 2588 a 592
2588 a
SDict begin [ /Subtype /Link /Dest (cite.MIREX) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 592 2588 a 0 TeXcolorgray -1 w Fw(\):)668 2588
y
SDict begin H.S end
 668 2588 a 668 2588 a
SDict begin 12 H.A end
 668 2588 a 668 2588 a
SDict begin [ /View [/FitH -32768] /Dest (equation.12) cvn H.B /DEST pdfmark end
 668 2588
a -31 2815 a Fb(Pr)l(e)30 b Fs(=)238 2759 y Fp(N)305
2771 y Ff(tp)p 221 2796 166 4 v 221 2872 a Fp(N)288 2884
y Ff(sys)397 2815 y Fp(;)70 b Fb(R)l(e)l(c)28 b Fs(=)759
2759 y Fp(N)826 2771 y Ff(tp)p 744 2796 163 4 v 744 2872
a Fp(N)811 2884 y Ff(r)m(ef)916 2815 y Fp(;)71 b Fb(F)35
b Fs(=)1196 2759 y(2)18 b Fm(\001)h Fb(R)l(e)l(c)j Fm(\001)d
Fb(Pr)l(e)p 1196 2796 427 4 v 1226 2872 a(R)l(e)l(c)k
Fs(+)18 b Fb(Pr)l(e)1674 2815 y Fw(\(12\))-138 3051 y(where)37
b Fp(N)170 3063 y Ff(tp)274 3051 y Fw(is)i(the)f(number)e(of)i
(correctly)e(detected)h(pitches,)-138 3151 y Fp(N)-71
3163 y Ff(sys)60 3151 y Fw(is)d(the)e(number)f(of)h(detected)g
(pitches,)j(and)d Fp(N)1494 3163 y Ff(r)m(ef)1622 3151
y Fw(is)i(the)-138 3250 y(number)g(of)h(ground-truth)d(pitches.)70
b(As)36 b(in)g(the)g(public)e(e)n(v)n(al-)-138 3350 y(uations)i(on)f
(multi-pitch)g(detection)g(carried)h(out)f(through)g(the)-138
3450 y(MIREX)30 b(frame)n(w)o(ork)e(\()p 0 0.08 0.45
TeXcolorrgb 580 3450 a
SDict begin H.S end
 580 3450 a Fw(MIR)737 3450 y
SDict begin 12 H.L end
 737
3450 a 737 3450 a
SDict begin [ /Subtype /Link /Dest (cite.MIREX) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 737 3450 a 0 TeXcolorgray Fw(\),)k(a)f(detected)e
(note)g(is)i(considered)-138 3549 y(correct)25 b(is)h(if)g(its)g(pitch)
f(is)i(the)e(same)h(as)g(the)g(ground)d(truth)i(pitch)-138
3649 y(and)35 b(its)i(onset)f(is)h(within)f(a)g(50ms)g(tolerance)f
(interv)n(al)g(of)h(the)-138 3749 y(ground-truth)16 b(onset.)-138
3827 y
SDict begin H.S end
 -138 3827 a -138 3827 a
SDict begin 12 H.A end
 -138 3827 a -138 3827
a
SDict begin [ /View [/FitH -32768] /Dest (subsection.5.3) cvn H.B /DEST pdfmark end
 -138 3827 a 131 x Fl(5.3.)j(Results)-138 4114 y Fw(T)-7
b(o)18 b(v)n(alidate)f(the)h(performance)e(of)h(the)h(MLMs,)h(we)f
(calculate)g(the)-138 4213 y(prediction)31 b(precision)g(on)h(unseen)f
(sequences)g(of)h(music)h(from)-138 4313 y(the)26 b(Nottingham)f
(dataset,)i(where)f(precision)f(is)i(de\002ned)f(in)g(Eq.)p
0 0.08 0.45 TeXcolorrgb -138 4412 a
SDict begin H.S end
 -138 4412 a 0 0.08 0.45
TeXcolorrgb Fw(12)p 0 0.08 0.45 TeXcolorrgb -55 4356
a
SDict begin H.R end
 -55 4356 a -55 4412 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (equation.12) cvn H.B /ANN pdfmark end
 -55 4412 a 0 TeXcolorgray Fw(.)44
b(F)o(or)26 b(both)f(the)i(RNN)g(and)f(RNN-N)m(ADE)g(models)g(we)h
(sam-)-138 4512 y(ple)37 b(10)f(v)o(ectors)f(from)h(the)h(conditional)d
(distrib)n(ution)i(at)h(each)-138 4612 y(time-step)26
b(and)g(calculate)g(the)h(e)o(xpected)e(precision)h(against)g(the)-138
4711 y(ground)14 b(truth.)23 b(The)16 b(reported)e(precision)h(is)i
(found)e(by)h(\002nding)f(the)-138 4811 y(mean)26 b(o)o(v)o(er)f(the)h
(predictions)f(of)i(e)n(v)o(ery)e(frame.)43 b(T)-7 b(able)p
0 0.08 0.45 TeXcolorrgb 1538 4811 a
SDict begin H.S end
 1538 4811 a 0 0.08 0.45
TeXcolorrgb Fw(1)p 0 0.08 0.45 TeXcolorrgb 1579 4754
a
SDict begin H.R end
 1579 4754 a 1579 4811 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (table.1) cvn H.B /ANN pdfmark end
 1579 4811 a 0 TeXcolorgray
28 w Fw(sho)n(ws)-138 4911 y(the)22 b(results)g(of)g(the)g(v)n
(alidation)f(e)o(xperiments.)28 b(These)22 b(results)h(are)-138
5010 y(of)j(the)g(same)g(order)f(as)i(the)f(prediction)e(accuracies)h
(reported)f(in)-138 5110 y(\()p 0 0.08 0.45 TeXcolorrgb
-110 5110 a
SDict begin H.S end
 -110 5110 a Fw(Boulanger)n(-Le)n(w)o(ando)n(wski)16
b(et)21 b(al.)905 5110 y
SDict begin 12 H.L end
 905 5110 a 905 5110 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 905 5110
a 0 TeXcolorgray -1 w Fw(,)p 0 0.08 0.45 TeXcolorrgb
946 5110 a
SDict begin H.S end
 946 5110 a Fw(2012)1114 5110 y
SDict begin 12 H.L end
 1114 5110 a
1114 5110 a
SDict begin [ /Subtype /Link /Dest (cite.Boulanger-Lewandowski2012) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 1114 5110 a 0 TeXcolorgray -2 w Fw(\).)-138
5259 y(Multi-pitch)g(detection)f(e)o(xperiments)g(are)i(performed)d
(using)j(the)-138 5359 y(proposed)e(system,)k(with)e(v)n(arious)g
(con\002gurations.)29 b(A)23 b(\002rst)g(con-)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2314 1542 a
 currentpoint currentpoint translate 1.065 1.065 scale neg exch neg exch translate
 2314 1542 a 2335 1265 1128 4 v 2333 1365
4 100 v 2385 1335 a Fl(Model)p 3106 1365 V 608 w Fb(Pr)l(e)p
3461 1365 V 2335 1368 1128 4 v 2333 1468 4 100 v 2385
1438 a Fw(RNN)e(\(SGD\))p 3106 1468 V 354 w(67.89\045)p
3461 1468 V 2335 1471 1128 4 v 2333 1571 4 100 v 2385
1541 a(RNN)g(\(HF\))f(-)g(N)m(ADE)p 3106 1571 V 118 w(69.61\045)p
3461 1571 V 2335 1574 1128 4 v 2333 1674 4 100 v 2385
1644 a(RNN-N)m(ADE)g(\(SGD\))p 3106 1674 V 99 w(68.89\045)p
3461 1674 V 2335 1677 1128 4 v 2333 1777 4 100 v 2385
1747 a(RNN-N)m(ADE)g(\(HF\))p 3106 1777 V 159 w Fl(70.61)p
Fw(\045)p 3461 1777 V 2335 1780 1128 4 v 2314 1542 a
 currentpoint currentpoint translate 1 1.065 div 1 1.065 div scale neg exch neg exch translate

2314 1542 a 2378 1979 a Fc(T)-6 b(able)19 b(1.)p 0 TeXcolorgray
2643 1979 a
SDict begin H.S end
 2643 1979 a 0 TeXcolorgray 0 TeXcolorgray
2643 1979 a
SDict begin H.R end
 2643 1979 a 2643 1979 a
SDict begin [ /View [/FitH -32768] /Dest (table.1) cvn H.B /DEST pdfmark end
 2643 1979 a 0 TeXcolorgray
Fr(V)-8 b(alidation)19 b(results)f(for)h(MLMs)p 0 TeXcolorgray
1962 2269 a Fw(\002guration)40 b(only)h(considers)f(the)i
(transcription)e(system)i(from)1962 2369 y(Section)p
0 0.08 0.45 TeXcolorrgb 2237 2369 a
SDict begin H.S end
 2237 2369 a 0 0.08 0.45
TeXcolorrgb Fw(2)p 0 0.08 0.45 TeXcolorrgb 2279 2312
a
SDict begin H.R end
 2279 2312 a 2279 2369 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.2) cvn H.B /ANN pdfmark end
 2279 2369 a 0 TeXcolorgray
Fw(.)g(A)26 b(second)e(con\002guration)f(tak)o(es)j(the)g(output)e(of)i
(the)1962 2469 y(transcription)c(system)i(and)f(gi)n(v)o(es)h(it)g(as)h
(input)e(to)h(the)f(prediction)1962 2568 y(system)c(of)f(Section)p
0 0.08 0.45 TeXcolorrgb 2568 2569 a
SDict begin H.S end
 2568 2569 a 0 0.08 0.45
TeXcolorrgb -1 x Fw(3)p 0 0.08 0.45 TeXcolorrgb 2609
2512 a
SDict begin H.R end
 2609 2512 a 2609 2568 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.3) cvn H.B /ANN pdfmark end
 2609 2568 a 0 TeXcolorgray
Fw(,)i(where)d(the)i(\002nal)f(piano-roll)f(is)i(the)g(output)1962
2668 y(of)h(the)h(prediction)e(step.)27 b(A)21 b(third)f
(con\002guration)e(is)k(the)e(one)g(pre-)1962 2768 y(sented)k(in)h
(Section)p 0 0.08 0.45 TeXcolorrgb 2563 2768 a
SDict begin H.S end
 2563 2768
a 0 0.08 0.45 TeXcolorrgb Fw(4)p 0 0.08 0.45 TeXcolorrgb
2605 2711 a
SDict begin H.R end
 2605 2711 a 2605 2768 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (section.4) cvn H.B /ANN pdfmark end
 2605 2768 a 0 TeXcolorgray
Fw(,)h(where)e(the)g(recording)f(is)i(re-transcribed,)1962
2867 y(ha)n(ving)31 b(the)i(prediction)d(as)k(a)e(prior)g(information)e
(for)i(estimat-)1962 2967 y(ing)g(the)g(pitch)f(acti)n(v)n(ations.)60
b(F)o(or)31 b(the)h(prediction)e(system,)35 b(e)o(x-)1962
3066 y(periments)24 b(were)g(made)g(using)g(both)f(the)i(RNN-N)m(ADE)g
(and)f(the)1962 3166 y(RNN.)1962 3316 y(Results)36 b(using)f(the)g(v)n
(arious)f(system)i(con\002gurations)c(are)j(dis-)1962
3415 y(played)c(in)i(T)-7 b(able)p 0 0.08 0.45 TeXcolorrgb
2529 3415 a
SDict begin H.S end
 2529 3415 a 0 0.08 0.45 TeXcolorrgb Fw(2)p
0 0.08 0.45 TeXcolorrgb 2571 3359 a
SDict begin H.R end
 2571 3359 a 2571
3415 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (table.2) cvn H.B /ANN pdfmark end
 2571 3415 a 0 TeXcolorgray Fw(.)62 b(As)34 b(an)e(e)o(xample)f
(of)h(the)h(proposed)d(sys-)1962 3515 y(tem')-5 b(s)29
b(performance,)e(the)h(transcription)f(output)g(using)h(the)g(3rd)1962
3614 y(con\002guration)17 b(is)k(displayed)e(for)h(a)g(recording)e
(from)h(the)h(Bach10)1962 3714 y(dataset)j(in)g(Fig.)p
0 0.08 0.45 TeXcolorrgb 2468 3714 a
SDict begin H.S end
 2468 3714 a 0 0.08 0.45
TeXcolorrgb Fw(2)p 0 0.08 0.45 TeXcolorrgb 2510 3657
a
SDict begin H.R end
 2510 3657 a 2510 3714 a
SDict begin [ /Color [1 0 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (figure.2) cvn H.B /ANN pdfmark end
 2510 3714 a 0 TeXcolorgray
Fw(,)h(along)d(with)i(the)g(ground)d(truth)j(for)f(the)g(same)1962
3814 y(recording.)1962 3963 y(F)o(or)39 b(comparison)e(with)i(the)g
(method)f(of)g(\()p 0 0.08 0.45 TeXcolorrgb 3296 3963
a
SDict begin H.S end
 3296 3963 a Fw(Duan)20 b(et)g(al.)3658 3963 y
SDict begin 12 H.L end
 3658
3963 a 3658 3963 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3658 3963 a 0 TeXcolorgray Fw(,)p
0 0.08 0.45 TeXcolorrgb 3718 3963 a
SDict begin H.S end
 3718 3963 a Fw(2010)3886
3963 y
SDict begin 12 H.L end
 3886 3963 a 3886 3963 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3886 3963 a 0 TeXcolorgray
-2 w Fw(\))1962 4063 y(\(where)50 b(the)i(Bach10)e(dataset)i(w)o(as)g
(\002rst)g(introduced\),)57 b(the)1962 4162 y(proposed)41
b(method)g(using)h(the)g(frame-based)f(accurac)o(y)g(met-)1962
4262 y(ric)c(which)g(is)h(de\002ned)e(in)h(the)g(same)h(paper)e(by)g
(Duan)h(et)h(al.,)1962 4362 y(reaches)31 b(74.3\045)g(for)g(the)h(N)m
(ADE-HF)f(using)h(the)f(3rd)g(con\002gu-)1962 4461 y(ration,)c(whereas)
f(the)h(method)e(of)h(\()p 0 0.08 0.45 TeXcolorrgb 3033
4461 a
SDict begin H.S end
 3033 4461 a Fw(Duan)19 b(et)i(al.)3395 4461 y
SDict begin 12 H.L end

3395 4461 a 3395 4461 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3395 4461 a 0 TeXcolorgray Fw(,)p
0 0.08 0.45 TeXcolorrgb 3442 4461 a
SDict begin H.S end
 3442 4461 a Fw(2010)3610
4461 y
SDict begin 12 H.L end
 3610 4461 a 3610 4461 a
SDict begin [ /Subtype /Link /Dest (cite.Duan2010) cvn /H /I /Border [0 0 0] /Color [0 1 0] H.B /ANN pdfmark end
 3610 4461 a 0 TeXcolorgray
-2 w Fw(\))27 b(reaches)1962 4561 y(69.7\045)19 b(\(with)h(unkno)n(wn)e
(polyphon)o(y\).)1962 4651 y
SDict begin H.S end
 1962 4651 a 1962 4651 a
SDict begin 12 H.A end

1962 4651 a 1962 4651 a
SDict begin [ /View [/FitH -32768] /Dest (section.6) cvn H.B /DEST pdfmark end
 1962 4651 a 148 x Fu(6.)25 b(Conclusions)1962
4960 y Fw(In)k(this)g(paper)m(,)h(we)f(proposed)e(a)i(system)g(for)g
(automatic)f(music)1962 5060 y(transcription)c(which)h(incorporated)d
(prior)j(information)e(from)h(a)1962 5160 y(polyphonic)13
b(music)j(prediction)e(model)h(based)g(on)g(recurrent)f(neu-)1962
5259 y(ral)25 b(netw)o(orks.)38 b(The)25 b(acoustic)f(transcription)f
(model)h(w)o(as)i(based)1962 5359 y(on)15 b(probabilistic)g(latent)g
(component)e(analysis,)k(and)e(information)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray .7 .7 .7 TeXcolorrgb
-392 39 a Fw(550)-392 139 y(551)-392 239 y(552)-392 338
y(553)-392 438 y(554)-392 538 y(555)-392 637 y(556)-392
737 y(557)-392 836 y(558)-392 936 y(559)-392 1036 y(560)-392
1135 y(561)-392 1235 y(562)-392 1335 y(563)-392 1434
y(564)-392 1534 y(565)-392 1633 y(566)-392 1733 y(567)-392
1833 y(568)-392 1932 y(569)-392 2032 y(570)-392 2132
y(571)-392 2231 y(572)-392 2331 y(573)-392 2430 y(574)-392
2530 y(575)-392 2630 y(576)-392 2729 y(577)-392 2829
y(578)-392 2929 y(579)-392 3028 y(580)-392 3128 y(581)-392
3227 y(582)-392 3327 y(583)-392 3427 y(584)-392 3526
y(585)-392 3626 y(586)-392 3726 y(587)-392 3825 y(588)-392
3925 y(589)-392 4024 y(590)-392 4124 y(591)-392 4224
y(592)-392 4323 y(593)-392 4423 y(594)-392 4523 y(595)-392
4622 y(596)-392 4722 y(597)-392 4821 y(598)-392 4921
y(599)-392 5021 y(600)-392 5120 y(601)-392 5220 y(602)-392
5320 y(603)-392 5419 y(604)4131 39 y(605)4131 139 y(606)4131
239 y(607)4131 338 y(608)4131 438 y(609)4131 538 y(610)4131
637 y(611)4131 737 y(612)4131 836 y(613)4131 936 y(614)4131
1036 y(615)4131 1135 y(616)4131 1235 y(617)4131 1335
y(618)4131 1434 y(619)4131 1534 y(620)4131 1633 y(621)4131
1733 y(622)4131 1833 y(623)4131 1932 y(624)4131 2032
y(625)4131 2132 y(626)4131 2231 y(627)4131 2331 y(628)4131
2430 y(629)4131 2530 y(630)4131 2630 y(631)4131 2729
y(632)4131 2829 y(633)4131 2929 y(634)4131 3028 y(635)4131
3128 y(636)4131 3227 y(637)4131 3327 y(638)4131 3427
y(639)4131 3526 y(640)4131 3626 y(641)4131 3726 y(642)4131
3825 y(643)4131 3925 y(644)4131 4024 y(645)4131 4124
y(646)4131 4224 y(647)4131 4323 y(648)4131 4423 y(649)4131
4523 y(650)4131 4622 y(651)4131 4722 y(652)4131 4821
y(653)4131 4921 y(654)4131 5021 y(655)4131 5120 y(656)4131
5220 y(657)4131 5320 y(658)4131 5419 y(659)p 0 TeXcolorgray
0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.S end

-138 -124 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.R end

-138 -124 a -138 -124 a
SDict begin [ /View [/FitH -32768] /Dest (page.6) cvn H.B /DEST pdfmark end
 -138 -124 a 0 TeXcolorgray 557
-149 a Fq(RNN-based)18 b(Music)g(Language)h(Models)f(f)n(or)h(Impr)o(o)
o(ving)g(A)l(utomatic)h(Music)d(T)-6 b(ranscription)p
-138 -116 4050 9 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -118 433 a
 currentpoint currentpoint translate 0.88322 0.88322 scale neg exch neg exch translate
 -118 433 a -97 -101 2121 4
v -99 -1 4 100 v -47 -31 a Fl(Con\002guration)p 955 -1
V 649 w Fb(F)p 1311 -1 V 268 w(Pr)l(e)p 1666 -1 V 230
w(R)l(e)l(c)p 2022 -1 V -97 2 2121 4 v -99 102 4 100
v -47 72 a Fw(Con\002guration)18 b(1)p 955 102 V 530
w(62.02\045)p 1311 102 V 97 w(58.51\045)p 1666 102 V
98 w(66.12\045)p 2022 102 V -97 105 2121 4 v -99 205
4 100 v -47 175 a(Con\002guration)g(2)i(-)h(N)m(ADE)p
955 205 V 233 w(62.62\045)p 1311 205 V 97 w(59.70\045)p
1666 205 V 98 w(65.92\045)p 2022 205 V -97 208 2121 4
v -99 308 4 100 v -47 278 a(Con\002guration)d(3)i(-)h(N)m(ADE)p
955 308 V 233 w(64.08\045)p 1311 308 V 97 w(61.96\045)p
1666 308 V 98 w(66.44\045)p 2022 308 V -97 311 2121 4
v -99 411 4 100 v -47 381 a(Con\002guration)d(2)i(-)h(RNN)p
955 411 V 286 w(62.29\045)p 1311 411 V 97 w(59.08\045)p
1666 411 V 98 w(65.98\045)p 2022 411 V -97 414 2121 4
v -99 514 4 100 v -47 484 a(Con\002guration)d(3)i(-)h(RNN)p
955 514 V 286 w(63.85\045)p 1311 514 V 97 w(61.14\045)p
1666 514 V 98 w(66.90\045)p 2022 514 V -97 517 2121 4
v -99 617 4 100 v -47 587 a(Con\002guration)d(2)i(-)h(N)m(ADE-HF)p
955 617 V 99 w(62.20\045)p 1311 617 V 97 w(59.14\045)p
1666 617 V 98 w(65.68\045)p 2022 617 V -97 620 2121 4
v -99 720 4 100 v -47 690 a(Con\002guration)d(3)i(-)h(N)m(ADE-HF)p
955 720 V 99 w Fl(65.16)p Fw(\045)p 1311 720 V 97 w Fl(62.80)p
Fw(\045)p 1666 720 V 98 w Fl(67.78)p Fw(\045)p 2022 720
V -97 723 2121 4 v -99 823 4 100 v -47 793 a(Con\002guration)d(2)i(-)h
(RNN-HF)p 955 823 V 152 w(62.44\045)p 1311 823 V 97 w(59.28\045)p
1666 823 V 98 w(66.07\045)p 2022 823 V -97 826 2121 4
v -99 926 4 100 v -47 896 a(Con\002guration)d(3)i(-)h(RNN-HF)p
955 926 V 152 w(62.87\045)p 1311 926 V 97 w(60.03\045)p
1666 926 V 98 w(66.11\045)p 2022 926 V -97 929 2121 4
v -118 433 a
 currentpoint currentpoint translate 1 0.88322 div 1 0.88322 div scale neg exch neg exch translate
 -118 433 a 0 TeXcolorgray -138 1055 a Fc(T)-6
b(able)19 b(2.)p 0 TeXcolorgray 0 TeXcolorgray 120 1055
a
SDict begin H.S end
 120 1055 a 0 TeXcolorgray 0 TeXcolorgray 120 1055 a
SDict begin H.R end

120 1055 a 120 1055 a
SDict begin [ /View [/FitH -32768] /Dest (table.2) cvn H.B /DEST pdfmark end
 120 1055 a 0 TeXcolorgray Fr(T)m(ranscription)41
b(results)g(using)g(v)n(arious)h(system)f(con\002gura-)-138
1146 y(tions.)p 0 TeXcolorgray 0 TeXcolorgray -138 2879
a
 currentpoint currentpoint translate 0.43399 0.43399 scale neg exch neg exch translate
 -138 2879 a 21 w @beginspecial 140 @llx 238 @lly 663
@urx 683 @ury 5230 @rwi @setspecial
%%BeginDocument: figures/FigTranscription.eps
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 140 238 663 683
%%HiResBoundingBox: 140.478 238.614 662.102 682.674
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: Fig1.dvi
%%CreationDate: Thu Jan 30 22:43:26 2014
%%DocumentFonts: Helvetica Courier CMR9 CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Fig1.dvi -E -o Fig1.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.01.30:2243
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: groff.enc 0 0
%!PS-Adobe-3.0 Resource-Encoding
%
% @psencodingfile{
%   author = "Werner Lemberg, Michail Vidiassov",
%   version = "1.0",
%   date = "2006-Feb-03",
%   filename = "groff.enc",
%   license = "public domain",
%   email = "groff@gnu.org",
%   docstring = "Groff default text encoding.  Used with MetaPost."
% }

%%BeginResource: encoding groffEncoding
/groffEncoding [
% 0x00 | 0
  /asciicircum     /asciitilde        /Scaron            /Zcaron
  /scaron          /zcaron            /Ydieresis         /trademark
  /quotesingle     /Euro              /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
% 0x10 | 16
  /.notdef         /.notdef           /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
% 0x20 | 32
  /space           /exclam            /quotedbl          /numbersign
  /dollar          /percent           /ampersand         /quoteright
  /parenleft       /parenright        /asterisk          /plus
  /comma           /hyphen            /period            /slash
% 0x30 | 48
  /zero            /one               /two               /three
  /four            /five              /six               /seven
  /eight           /nine              /colon             /semicolon
  /less            /equal             /greater           /question
% 0x40 | 64
  /at              /A                 /B                 /C
  /D               /E                 /F                 /G
  /H               /I                 /J                 /K
  /L               /M                 /N                 /O
% 0x50 | 80
  /P               /Q                 /R                 /S
  /T               /U                 /V                 /W
  /X               /Y                 /Z                 /bracketleft
  /backslash       /bracketright      /circumflex        /underscore
% 0x60 | 96
  /quoteleft       /a                 /b                 /c
  /d               /e                 /f                 /g
  /h               /i                 /j                 /k
  /l               /m                 /n                 /o
% 0x70 | 112
  /p               /q                 /r                 /s
  /t               /u                 /v                 /w
  /x               /y                 /z                 /braceleft
  /bar             /braceright        /tilde             /.notdef
% 0x80 | 128
  /quotesinglbase  /guillemotleft     /guillemotright    /bullet
  /florin          /fraction          /perthousand       /dagger
  /daggerdbl       /endash            /emdash            /ff
  /fi              /fl                /ffi               /ffl
% 0x90 | 144
  /dotlessi        /dotlessj          /grave             /hungarumlaut
  /dotaccent       /breve             /caron             /ring
  /ogonek          /quotedblleft      /quotedblright     /oe
  /lslash          /quotedblbase      /OE                /Lslash
% 0xA0 | 160
  /.notdef         /exclamdown        /cent              /sterling
  /currency        /yen               /brokenbar         /section
  /dieresis        /copyright         /ordfeminine       /guilsinglleft
  /logicalnot      /minus             /registered        /macron
% 0xB0 | 176
  /degree          /plusminus         /twosuperior       /threesuperior
  /acute           /mu                /paragraph         /periodcentered
  /cedilla         /onesuperior       /ordmasculine      /guilsinglright
  /onequarter      /onehalf           /threequarters     /questiondown
% 0xC0 | 192
  /Agrave          /Aacute            /Acircumflex       /Atilde
  /Adieresis       /Aring             /AE                /Ccedilla
  /Egrave          /Eacute            /Ecircumflex       /Edieresis
  /Igrave          /Iacute            /Icircumflex       /Idieresis
% 0xD0 | 208
  /Eth             /Ntilde            /Ograve            /Oacute
  /Ocircumflex     /Otilde            /Odieresis         /multiply
  /Oslash          /Ugrave            /Uacute            /Ucircumflex
  /Udieresis       /Yacute            /Thorn             /germandbls
% 0xE0 | 224
  /agrave          /aacute            /acircumflex       /atilde
  /adieresis       /aring             /ae                /ccedilla
  /egrave          /eacute            /ecircumflex       /edieresis
  /igrave          /iacute            /icircumflex       /idieresis
% 0xF0 | 240
  /eth             /ntilde            /ograve            /oacute
  /ocircumflex     /otilde            /odieresis         /divide
  /oslash          /ugrave            /uacute            /ucircumflex
  /udieresis       /yacute            /thorn             /ydieresis
] def
%%EndResource

% eof

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 112 /p put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
EC7585B7DCBC73389C91515AC8ECD2456EC95BD8940EF1700AD1F261F00F96C5
187A11DA9D1676B676EA69F5BF7CB15D654BC8C65B8093A1FBC7BE1854BCB7C7
CBCD9F99898EDBBBF2244E10185F6DF9A7AEE048A7FEED34D4B3BB4508AB13D7
E149FA176EE68606F0B35312506C02F1A1C4DED56D2489C6239BA362625780FE
61392CD457E73CF123CCEE639BC4C278C920263221254213129D577BD8E0D6A7
0EC11FCA46DC38197B4C4EC375FAA5F614C0F5FF6F71854B27E61664C83BEEA0
958198AE0AE0E053D04AFED924430C88DA60D54DAB1FF0F28B707537825BF77D
E0552ADA3E14BC0B82F2CC37AE635B876020B0DC3CDFBC2B3B9143E3E8FB6E53
C629EF606553F97B1C7CE7AF4D7985886E4D9610EDCFDFC77C8DBC0D5920E486
BFE64013CCB6B421BA3852A70157310106E35BBC126EE2B757D65087645DC8FD
B73552571414AB2A3A44B1EB69C07BCBE3A853130C1166EE98E9C644B691274F
7B85695F5F2079000CC6A6A6BA86F7776AADD16EDF3BB714C5A037F58DF43A39
DF4F4942F8711C90B4EEFD97AE5D184F743ACE50A98EE53C25625E75668ED3E9
929056DCE30D42439FD75C1D0315137B79723F7A2CA078E32C968C0BADA2601C
1CE1C4C39010D2DC807B6AA2AA2BBE06110745FF3797354D5ECBAC6D32B6252C
D08B9545A8E2F65453F244CAF20BA2A1EF97E5B5E4C753FBF42C1F976B0446A6
0F158FBF9C76C921024B55FC6D5DB5BCCCF77226C214AA48760E98EAF5063E37
3A084CD6829DC18D063618B4AF1313A2DA7B0FE7F97A0B8C4F3A07AD6EA59178
A080192D8C4E7668ED6054923108E4A415416F4CF72A1905F0C931F8A8FCD58A
CC803C6B5EECC114ABAF844CE6B550CABBCA69BBD0E24FD3C7317568CE984209
CCE0B18B53558BED2927ABDD00DDC694177F6C4DD07E802F698295CA19D398E5
C668D985C10B6C9E435A26265D96748AF50468889BD496FF6F81F96C22185073
475EA8D452CEDD6B1BDFD5E9AD90C6EFB711D6AF10A72632A2E1743AE4617BB7
4A9C0B8E2ED2F635E5257F2186CF716C6853EF9E05255953E222C1AB7FD8D120
59065A281611521D52E47AD1055E1C067B7880B0CCF9EB162702D1F6805A7B91
85724970FAF1BCA49C71615E9DD4E8E505B194D7EC88876AB1E34DA8EE47972A
775B4D39DAA5C0E94FE946004D2D2A971A09196EE7070C700C6B4B2B94DBA8B1
753C4356139895137A056EF375C8EAD6D875F8B1D7A151D5D8AB9350025F131D
697CBE32F27189BECA787CAC2AE424A486EF4BFD83F06F7A4A7B308B5B734171
4EBC598333084A8C0DFE90BD2AB449737FC3AF45A71EE8DC9E4A5E685387D7C0
7F09CF652F1E602E7F256AE00339C7EFAC5BC5F62346207F31B20E5EAB4721B5
9E19E2D368BE2E5F310200CD8668AFFE056D0C5C30CE4E498AFDFEE909382EF0
E686A3BEBF3DDE3B93B4D5F379DF239265A61C11462A034CC5D3CEC9A9198F31
E2B8282BED7392C7BE2B61691EA52F310E0FDD35DF255B64B2889C780DC45D78
DD13425781550D5D2A5099C0FF489438BE89DA50BFAC7999BE4A25DF5D3CEF12
7DB53383AA2FFAC31D3058E6044EAFD46A690D8525EF5A5B34BD7C03CDEC6827
6DFFF44150CE689CB338946FB4A502E885192CFB17F2EF59D9DCAAEE60D6FB23
9685F5147CD3049BF8F3DC54D583F48E44F0B691350DC0E4B38E4B5B5868A34E
643E6072BCCC8EE6C44899633FD2E401CF66BCB8365EF29A3D6EA0268E0A8B93
01F229A930E127B0E64D66A306A2FD4F0EE0986BD86BA865BB11FBF008D13A74
4CAD688CAB65E5FEB2374FF8AACD9F9E421646BE14E2BC931FDC02351A89F44B
6CD666B66DDAE74F5491C011CC2BB88A69051E420E3781813A9E7F06D9AB28A2
0376E4F60B88942FCB8B27C8C15D34B77577A4F2CA9A204E752A2CFE5609E1E8
DE14280532808204E2C98C99495DB90852326DE98A17CA6154B18B7D052CCE37
6678035BE0DFC05232D2596FF0A2CC89C048FEC738F53355DDC3CBDA4D42D0F5
8C1CC3D5C64D1C30B4100392D40C7F31F7B91923F0511EA1FC0941BADF67DC1B
D49C68348CC174A091791FA74520C8614D4FB1125AD11AAA498216D136C4B20B
9688704A819170D23E864323CB4C8825D2C8FD93C32E8B9115B0C5A68F32F29B
1DB2FA3167B5047B9C42B10468046D31145E5D5CE7FA42F58BC93E5FD717D32B
A9D410A14F1447202309893F868000B4A48732764B92554BEB03A0C89B0EF64B
B35A9F35185CC3E8F7779E6905C4480276FEEB8A238B5353DBAAFC70954DD106
882A06C327B5710803838E0261A1D1E55550613BCAF0A762E313A9ACA9F08FCC
3727D2412AB1D4B77DA9A9B55CFB489454F25EDF98FA73873B1FB6AEEE04BF4C
0E7DD60CAC9D2AF1C72C5852CA2ADCEED405818CD5AC4E30E9A69C0D04657305
5B56DD29443BFCC5539637644533F5E9B79231AFA7FB0737BABC8E1328AB11B4
32CDDE1BF3F0DBE4C9F114204322929D8632C4BD136C89169D45718A88BAB922
9837312E799AF99DEB62F1702CAC2E46FE4466E80B4600EDCA06CBCC28958E3C
45E186B8EAC1C8DF993F4B9AF89DBBE3B496164E661A07443E2ED73396B5E82D
8564AC026F3DA6B3BA13F0C6568FFA4CC892E53DF3AD9691D42235572F67AC5C
0B20E59B127C324ED9094148BB33DB26E3E436B06A04B309EC2090E866E9DFD5
B99028D0E71DB7D816A2919143394B9A683647271CEAFB8023DE1604FD41C754
EA86832677B037B0FBA022555B0FCC1421A0B660B738180FAF4A346B1573B9F0
2724722B9B749AFD87E637298B9B2FFB6FF72A3429C7FA18DF2FB726AECC1832
A03DDEC3ACBFA7059E492DCA4AA0C2B50FAFDEE715E860D56FCBF266295BE92A
624BCE6EE9EEF09589FEAD476E3C9D933255633A6EE98B2CE3B0D8C1A90D72D4
69059E981231D00C70298B5350A15CB6DF39C3105DAB71BE7DD13F45D281847A
ED44F44192525D19A1B51ED4C842FFB593697B786E3F1AD744C5418A5224B2BC
BD04BC71CB19C28A0D7C544BEF828A51B9A3A59C6F1257E5E0A4FB5A8D08B963
11C845ECA7B4FF36D45A5E340B8A23733983CC2EC680C49B5AFA352EB15434DC
3DB6BB2FF28A98266D9C2FCEBEBAD94F35575A71EBB8954C3A90EEC264E61159
50FC91D0D55CDE1A0CBDCF7A4BBAAC2CD31C333FCC7E67C9DBC9BE9F93D5075F
BBBD362B788F5C9DDED33CEDE975B67C26D06A35A058ACCC9EADC6FB5F08CF8F
DB3549F1857389A419DFDFC4DEC6AF74AFFC62128C450B1A063288F45704C4DC
8FEE7D6EDE1D8FBBCCB5EED265149CD0D13481109121F0083F6F1A76395E0A83
ED0A777D829D155823CF2ACBD30F1A4232A9C891537E2EAE4C0135D6B0129745
977065B45BBADD18438540B66F33AEA84B4A38BEA9B6EA92C902CDF49A30BB02
41CB60D9486F041D1CF20D85059AF886558838C0F23B04B288C564FC0BCB8E87
57D48D48D91FF9DDC5BDE83A01C76B8FC0C16BCDFC661FED8A94774C47A3195F
FA9E62BD9398407B3BB0855D83BA83920F45BE613F765BDB52B5BCBAA77D5512
943C367D7649C4306C572B25EA9FB1FFB93956D83D00857B243384401EAD8F4A
128837B2D6610E60A4D1AF6FBD546828BF8A53DDC30ACFF85F28DFB4ED60D6E5
E25B83ED426C244333DB2EE3DEFED6D1BA3DB6201728E2F30D25F7913A14542F
BA1ECF56A20C8F776F4DAE0800859DD9ACE01FCA476FA3E670E6D13BC51CB8A8
15DBF6913F6FDA7002F4659A3502ABA91148849DAE540EAED83A6C8D661D4781
5BAAFAD061C08F6EE5358464793022BF4D2F0266819BC3ED1ADB5833F0B82B2A
71D19A1D63E93CBE921F985848CEE83FCAD11D5763085412DD4DD7D8B33DAC69
2187BD31221B54E3517C7A13AED792EDC769FDA341F902FC19D23F35C0730917
1408A593A224BC8508EED7CDC65A793D28C7A9834002D1EE1545A485B0621966
57C65F3D5CD16AFABAEFFC1AAEF34C72588B613998F5F8BEE1BE7BF477F94F5B
0170006E8AC12F56450F956FBFF203F654F765A3D2A18AC56BF87F81BA5F5A38
3F2BBA15B803EBFB82EC1452500E73EF2CBF5F41A0A2F9D62D0FA1401AF4E34D
62C25F0FE49D8CF3F36E0FCCF72AC59D91CB23DADD4B5148B7731BF7B7D14411
6F61594BDFFEBEFD5B790E577D64DDD99A58BA2E88A2762D40B6B042286182CB
B545181D784C9C86E0EC904535CE27B9367AA381C18E7E594460F884809EE9DB
345F808B432A2FC2870B329C23A0C5A2169525051E199670C1E542C6B1CD97DD
764EB19F1B39BE75C520848FF8FE57D44A66FA0BFFE32CA9F31FAA809B9460E3
B936197546989E22610CFC57633909166209A4F2B47BBFCC734C70E015E887BF
BAF98B39B8C76D83515137B138F1BF132CB7E3E884A3F9B45D9667BF68A70A81
590D37AE7CC54DA5AA5BE2E4B86C14C181A391FCF11EBEE1B270C40CEB787787
FB016DD9EF2C527D1E000794AFCC7ED0A81A3D75CCAE70432635658A227A183C
4D50F9229FD4ABA47A7B0496EE2F10D4D9C77766490815FFC2C785E128856F46
C4D95E7DAEC9879AC665273F1E635E1DC4B97C6F6E3689DB022B99F26C5F420B
0EE8CF45B28655BE78F8F272FD845B4E5EFC972559EFF49BAA0D724298592977
BE92679C823FBD4EC2A1C0692AA569EB347C9D7CCF5DAF430578E36C1D4A5E90
B52BCB5330765A69046BDC36857ABEEC437E7485BF73E684D5768C46690B3D33
0D098B9188E0C93685746AB703022939F0B6D13634EAB93CEC939230528E9F67
6E11D3B53C6AFC097F8E140B08D963B76ACB6CAEF80CC2EA9C81901E5A2BA525
23352F72903052991FB0E1C04B2CAA4578383710479EE05E62C4F050DDDEB950
7283D6E85E3F4E8FD1F51FD2AC8A8210899FF943A6C279BDD7A8319F78D07A6C
E07AB801C90061F8824D6C7911FCC60C4DA39635A2B5AE6AB1B6A73B73D8BF7F
6E6231C3A93FDFD607B917480ACAB8F8BD59D99717811DE11F62940B4FAD53FD
EF6BDFCAE3838243E79809689CB8FFE786D7F37831595D546C5B9A03B8E39574
400B1DE52CF83A7A57B1FB097437542493B05AADAA475F578A9511DD652656AA
E9F21E0C4C55EF71DD8ACC54AAFD6D9D74E3B47B98BEFDF0A125D34AA72E41DA
14CD374B6CB14FE960CD441649185C6B1D6EDA0C3843A1E37D3730A201BC777F
6848FD2848D5EA1E17B130FB1B10D358EF811EB63AA775C1E5777B87E2AF4A00
1B65F2260AA6ADBB65F533B987AC1A6C6402F352BBF41C63891575D1EF856F5E
20C66B671045BD3F3424049B0D0C27DDA0C5672C43D9297FF47B13C5BD26042B
F790867A024AF167371922F8AF219BD488E73F9AFC81A046A916B4A525AD603F
01148E21D3D8F560372E93C20B9FDDBE210B2A3648280C3F0C5464B78F4CCBFF
5177151DCF78BFDD5CD9C75AB315287F8AEE9EB31FA3BF2404B1700396A32226
75CCE64186A99558FA3FE65E04CAA36BD64B36894C8BEA4AFA09CEFA7A0E253E
21DE118E0F87FF1EF88A9CD5AA658D4703179C70E163B0F1E2B734F9C9C39B90
08D5172CABA72B1EC594F55345EB66C0FDFDE70CF096D4124FB1501D5435D6E3
C23745B9F242ABBF8FE8FAED0BD5BFB0781CA1713BEF5FF07D4539486844A208
595C6F766BA76FA8719714FCBE1C04F45664DDB10F777F674F45D83C08282ADB
CAE2096B05E2BD12820558BBB8D71666711A7D8C55EBC19F105D43B2309CB473
3E46A153B4AA7E3F0FA110B510963996F6A43F45FB3F0EB2CE2710A9F0437D4A
A0A51BA712EE72D2297A15C9936547058551F121EB4FC954315C19C6B6C7A6C2
5F07DCDB271237A96E9C1D2DFCD5FF21C0925BB48BB104831B39DAE326FD0614
0241904C540EAE35E4C21CCAC934F569D14952C7AD04EE83B920D33FC67C7E7C
0A1B4DD5D985E830C7C50E4462864DF999820FC06CD7034BDACBC4DE72D7E34E
E00C36D8B1AEE0652A5A352BD8232E2BB8D40EE2B3F2D90390B4EE83C5E5ED9F
0EF98D63DA43C682C02D086ED01A4A89D05B320C8EAC1E2742B102FD6E1E6535
3CACDAC01C986020D0854DCE7FCBCDCE6F6BB418EC7CCED044A33F51095E4201
7BF87DF68D3FDEA0E58D80CD880A2680C3543EF19C040B4B8BD842A953213952
6AABA44450B054162AB6D97C39FAAEA22CBEE4DF90C485219B7A62ECDB6529A9
C9730D26D03FB6E04D40BBEAAC3063B04059D7181A73DB1E6EAF65587735C176
47509C1E7D54A80EE0479CBB325600C5B082752224457769A0E1178FCE4C60E0
AE088C1DC01C675406099AF07DDED786B776D9B5BA10E194CC4FBB9C4E03254E
59696828CA050FCCB67AA286C731E04A8864372E7AB520B2A3919E0036DCFC13
D6FFE686B1CFD042AB0811205ABDFFA823878BA562E8A0D0173E9CC2B357EE34
344A533BBFEB90DB80A09F911128CE9321BF3011925720917CDA38A10E08DE84
36CE324519A9D5F3CFAA4920D4244953A2470EA8B63A4094FA593DB5296E929C
28B5FD74C3325418230075CB169719ABE592C0EF4D6064133CC87BA98F5A4185
907FFBFD7B9481AB43478110AF0C354706F5D550C04D570D7DF4F6F1AA5ED174
72C0B7C1C6354F5FDB914F6A550461CEE352B0930722AADD8FBDE78D06A4BEF1
195E7C474F86E14E41FCC03AC7386B15DCDAD20D67C39D100B75ADF673603F17
CFD1A70922D6A8F1E747935F1DB4E3A2AFA595F6C7E8495FFF068B288CCD75C0
DF735695AE313CDF6FD1952B83AFEBEF76474E6AA257E0877981F81CCFBB69CA
2C4B9FE40DB99A29C087DA6FA8310957ABA556891A08FAD24873CC8B7D992146
2AE6940F72F67DC52B26C97D2F37756D3D7C0379EA51BF05F4CB70933488FFC0
617869D05A72E4BF31E573AD92880FA05EF8B77FC8A184A0F1E56EF605CB04EC
32C4A29E0AACE7CD05748E5167EAD34C59902B33F6513B28F56B55C98AB3035A
FB92E313F7E8CAB44C38B7BA29E39916E0C89B644730B027C946366EDB237724
0D1BC82A19BB26574F0D3020CFCD99EA58E805A1612A0110E810D50B863F56EE
24985BCF52B6E4932F004302035F7410391532F32BA27F4144FE9022F4CE705E
3050BC617D13176BA0D123D4E950FD734B4A0BADE03C7DC8D3B2E2E7709CF4BA
BD8CF09486D976108C7E01EF725428A4D588EADC02BF429B15C458A4C59ED959
D0A50BB69D2E513DE7E20082F53788A78B88F678FCB712475CA762BE09ABFD89
1421A01B4F47A7DE975A75FFAF3F08AF02D6EA0A86AD85BA87A88F7AF3E66259
45DEBC82E3658DD93A329FD117C9553B59C039137640713C6C4CD96B11CEFB11
825FACEACB3C0A2F66F39C314A82DA26966B96C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5C7A69BCDFE8ECE3C5F1C047BDAC4B2DAF36832BB25487385C650FC3C30A0894
2CEB8973FA2E6C749D88789C550C32B2230FB689F0DB5E9F5E2A8133F6477232
AD8B11FBDB46362C03A2967EC7E875CC0D0C94437517736307F4B8887FD275E2
E346171058EC303E62B84EA810FCEBB2905DC186B95AFC6AD4127429E71BFC7B
79E612C18501DFE5AC0E7921BF1C6BD483FD867BC2938609EE52C0271A7ED1FD
EFEA3CC6F0872C28108F7EBBF5BF770C0BA6C712275E1239FA44736247CBAAD5
B856D7BD6E5E186AC4C3913293D99529B8F9EAC85FE548406DE5D90A058F1106
F98799495DBB3A05C04BD649053FD29380E217942F71F70C30735423F6F13DC7
F5015DA9043FA42C1045FD7E0F586CBF2D967E468B2E8E763415D60AEBA2BE7A
BC199BFE58FA66F52AD7C5ED80B4481C08EC85B51D5111091F54823FDAAC9DDF
DDFCC6DD16186911750F761F9907A438DDF4506C6ADBAE868F8AE594EA5B249B
7A07735A36737C99E1B7D6043FEC386BB73BF735DE357816B8A497797F6672F4
FB24AEFF98B8C5D400FAC3275DE7A1CB64B5D1B5FA98029D7E5B15DE0DA8F409
92ED9BCE277024155EE3A67C4312A8EFF2C9858336F527238ECDAF7D11D36E95
7231F8506B5F08183595C8E603F6DD62558DBFE78E0CE89CB924644F92E34598
BDF81AA6149CCC4D1063186032CDD3A71BA2D3F48A9951FD6B2822789384F7D9
EE81BCA952C646ACD11485A859038696FCB8814EA6FDA92B63B2D6EBCC95F105
64A890B457F6D5861AF47BF282164D121127A16E83FDD2A89B3CCB4FE19AF888
EA5DB34876CE75D8EF57DA19CF01061F577FEB3FA5D85CB631241ADD69EEAB36
8669112710E093294FA25B67066F3389DBFEA865CE4F49F4F52DE53B5FF59148
25ABDB71FAADB45F85B90C026CCE185EAF55E6F85C655457DBD51637C51A5FF2
7FC1322BEF3403E4B2EE1E29A43806C04DB5DCA0F56AB93E3A62FE4C707D7EF1
1CD4322E8DA1D212C20281360F60B0A8B6D2C887A3C469F9DC2A96B15D33FE7C
565961C2A7FA1AA195D9F12E03463930D05A3D71E1E9830AC1A5F569317FF0AA
61E1DFCE95DFCA2DADA7BFEA7C740B53CD45FC323019A45BCA3DE39C3E7618C6
322D2647360FBA9EF1001371EEB6651E94BD46E5EEBA124028190E5BD0F8701B
387DFE94E57C84B899F1F2487487E7519FB0B6C5BDEEBB15A46557D87E17CEE3
C6286706E6971C3934C67DE72985041253E581046888F150B9180ECCCC77D81F
76F3D56CD7161A69893DAF046DC7DDE62033CE401D60E31247753F1C76C3A257
7467A4D9CC54E5D4EED474205F62B722E0BCC56F8A2A99AF8709139309027419
E54BDC64C41060403491729889BEAA88D144D6EA573F1415F381236D5870F5C8
8E5362DA978663984B2CF38DC5E73D1AF8AEBCC8355A1E2C48C5C27AB8A8026A
725FAD7CE6F8C3748CB6C0489438BE09596B940DD951CBF8925E3BC996207D12
ADF5523DCB49A811A062DA87B8FD41367123CF6E63E96B130BB998D37A677E6A
FC2223540498DDB5A13FEF99E9EDBE6451198C17A9E3687351834B241A1D23BE
3568C7FC084985AF5C27539051A451B086B13DAB3F74F8ACBBAE1AD62D6867CE
44C32B8347E08A3E8943F9B9DECDE5CD1CCE82AB4F8E7D800BD533E5CB75961B
C62B4DDA4F85843C87A155B82DB7E529BEFBB962CD2DEECD01975552526669B0
2EB5B1C98F5B629BAE263499B1AF63A0B3661EC92AAC801F4F61C0B93AADA3E5
6171BFD8FD28AFCC63211413945191A040FB76D30DA553689018FF70A1A78395
2A7014C2355EB4520245AE86DC1362A0F2E2AC38E0DAFFFAFADD95159ECACE37
BDA773845ECFB832D95052616DA421128F5EF31906A384F95E9610388BC481FE
16A9A4CD84184B463AD9ADB314DF96191F4872F3365D85FDAAC1B8EE7084915A
57B9CE47029B53E2C6722E8EE22B85367F9E59CEF7D907DCFCA834166BF10FA0
545B9ACD52324C048E66E18DBB9141ED9DBACCDD4391F4FDD49B33F4D82C757C
474780C8134A270C5E4D4EC686655E459679D730D840B14DE88A32C97C7D2B08
08A6E1E1435A49A61FAA68FFD82AA99B3B9A87441907CBB28435B92FA754C931
C06EC61FC34FBAF0826030B0AA045A7A7B4BBFE3144A091B16A45D4B6971FECD
49D3C197A99C268C2CF364DF161EE28EB9C6F21B2E82D123DE55541078E7061B
C05397BADBA2B100887298388F4B7A53949B94309ED60B283AA7501D417D8149
1BDF9685A7A283FB8E66BF1B31673951A841CFF05760225AC709302A681ED94E
BB3D6036C297B9F8B23BF08374025FAE5409792EB9BC1D341E79A1A579D22426
B74CB51EC6CF526F90D44390EB72C231E5D5C69E1AA7828929778869319BBFC0
2346E6BA1DB5AC6569D4E86A238EED920DC6333DFF913D8D5F9B317F1904D5FF
1DA4CC281C39D9B2BF4928ED479216B4B7E6AC11A78C75F2A7146F40AC740EDA
04237423499A79903565D585618C040DFF27FE7C29442ABC40F15428B882320C
687724E2608E3883EC336E0C3ED34CBAE63170A6CBB6A7BC2586624147BE06FC
885A95B96EF032D10DF06CE67AAF5017F3364EE4A1C7BB3FA17F247B8CB15425
FA59CB9F6F35D7EC356BE9C48C961551A46945C5A3C3978DDE650FAC559B17C0
1873DC9B70873AF17F1F22092D6D6730369A00B1126484AEFA5911257C036AB0
49351D9556B78D21AFB90C1631FDB08A3205A7E84A8D7AB4E75A6DBCA9DBC9E5
3D377FFE3FDD542073C41975C32D4664B652AE2970DAF13D26C24BC276BCF94E
BC9D78AF57C05C48119B95D0DE92BFFE54457E897FD2DB19D90635CA0BC13AA0
8A89ED65339FA575CE78001826F11D83866EB19BCB2A715ABBBB055D94AF0272
D635A18A630EB16D177347A30ADD7038C4220507E61CCDCDE247E7D773FA6B85
5CE133E7CEB548245DEA533C8F4B4BE248F84906202A3501FF4BA1F8E0600BBF
43526BFC1E4C51DEF47690EBB2B157B1207F96388623D6A2177CDE5F4D0A26E5
BC689F7AD6B6E5FB894D0B9730D5551380271AA44FAAC76C3B6D1969005D13AC
911C4578E9969B577A08A9065FAD64A191D50748232E8DE1EC5C28A5DB36B983
8A1553A0A022A6AF153F3BA5D774574B4C2DE51B6998E7D6AEF6958D79E906EE
5FB6E80D2D6E0671D333621C309171388FCE8B25D60CABF3CF1277BE8C9F7147
604DC7EDB6FE1E6020ABED73022603D00070286CD696BCF3EB0A06A11DB28663
3C49EF215EAF983F1A55AC5515CA533D759AE409ADE1F1B82EC4583DE44C6C24
FD821C9EC9B4D11681C5333C476F91F2C0A536A6173378FAC0E67E7B2E93E1CC
407831A0FC29B04D1F755D9C457EF0738FFE3864AF5F219725F85DACC9BEABB9
AB7AE4522184956D2C5BFBFDE66D0FE7F115DBF8BDF91DD2A2AC4B6A10C5DA52
0FBFDA02C5D06AC96D6C8FF3C2894635D329DDEF46F110279594615839AED3EC
04256273BC392CE290429F76786B14BF149CC97B300B5663568FBEC2B9ECE709
BD64E7F32F3728CA84E88C2C439C3E3E835CF60BB7E179CB39F6F02A7AEB3D85
8E3D9F3C26ED1BFA85951FC168C0ED4F0229E4DC17BFB92C512E6886F8483445
77CA2DB1619402C21F32F137C27CC4807164615D014C2986AB5AA366AFD1E6B2
EEF49B6EC827A1ABD08C0CAB96C5912504D86F4A0C72AF8735B6D2CA075ED53B
BE4AC947825D9F3A8D4E7737CCC061D5204A7C98A457D2C365ADD39780E4281C
B02DC0A3FA5F43C95575FCE54D109331476851D2A627E046A4D440CF0D101FD2
8A6A1CE37B83B0E60045AD2C24B54CBF907A095883F480BA749D0A771E386AEA
BCA21486A97281504131A122ABCEE937249E47D6D5BF3EC1FB03B29EB3C46325
0FB489B9579AF633BE9238DEEB8D8063DB7051EA3BA9371A11D075980A86A3E7
76805788298B70DD74E01CF1F9959068C37BCE4658726019D131ED8B94E25931
7CADE80541CC908EC59B756187D6B5935AE44163CD3FD68DAFA2A9D25935325B
80539937223B347BE93145B361BB161783605FD1560F1C1B644CDDBBDC2BE78B
770777E9959D82FA6FF1E37EF5EDB9055A7265EC75D2C2219FF74396AF3380BD
278E4ED610796C0A42AF15016A1149297599EB7E3695349CF0AD0FE9BE199780
DC2525DAB28568BA9D96BE64793B63AA891C70DBA74AEE701D6F60A9F29AECC1
4702CE2463ECE47D28D6BAB545C26290851C67542C0F73F4AE1F2202A6D560C4
62FF9D62A831748915856FE50D44899037975E360BACF69E517EA98856639776
2D73CF14A647CA3C513D7E458FC1142968122B9A2C203A68B1A1D255DA8C9121
A788D190E659CB1AD89B0CCB8A3CCE506FBDE02E3D8258B9942E05599FE53395
E21EA6941580F94A5025044C26C4AE60C978ADE5D0D90CBB1B4E03A3183143C5
AB4800FD399A4791713F999AF84BF7F4169AA106FD4EA798ECE5F258CEBBF7B8
5FAE48AE2160F02F051118D11941FA505424D3DE36E0EDC575DEEA0C73C41E92
C205571FB828711E0AD5AC958DBFDA31AADE004787FFB6177A43AD800A2B263D
9BC7CFAED570726D996452B2CAC6DE2B84EFEE8B044C86CE63393A54A91672F2
3AC86A2D333621FA01FA2DA72BB45D3B82E8221D81365D6BEE9D9C0CACF86397
75FCA9DEB5F60FDC482277609A3132B0452DF8827B0A459D2B6D844DE81DDB50
D8B0C69A9461C709490193D7DF2322FBF5987575DA23A03B94C734812B4F4444
98133C01C8C17C84A07DF13A319119749248742B1119F9A1AE53CB58A1AABABB
F914CD576FDE2438A04896AC9DFF9F7E7207C66B86C09285A5752D47A9FCAD03
EAB19851D37D5130020D6AF67EE61210B1EB64465A478E9D690C6FE7CC7CABA8
A20E8042EE20532AED91A474A279DD7959CC3C888DF19A8D7C46220C8AE71677
D568E6984FCBB3206D7642B105E5116937B6160F543E9EEE0FCE83CCC68FBEAA
710F97B54F101A905ED5964B8D9CD3F6F9C91FFF4878B44454DA274933500284
43C6EA2F8E03DB670A8F2CCDFE4701F04BBFF7A15C58C706CAB995BBFF5896C2
6B6EDD6100317D0D74A41BAC2952ED97499E4473437DDA3A7887BF0B686702B3
D09433E74F6D51ADC606529BC64B41022A49A593DCE7FDFC8FD41F14AD499DC8
7526FB01CFEC4BE81189AC0623EB0FC90F5AEB380DF50BABF49ABC107690566E
CD3AFE5A2D47B79D1FA991F1DCA454619CF7006240AA135984D97F7EE22C346A
97AECECC118DFD8E3D97599B0BAF33D949FECE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (Fig1.dvi)
@start /Fa 139[32 33 2[46 10[37 1[37 46 42 40[42 42 42
42 42 42 42 42 42 6[32 32 40[{}18 83.022 /CMR10 rf /Fb
139[32 32 32 1[45 1[45 68 23 4[41 25 36 1[36 1[41 13[45
2[55 80[{}14 78.8709 /CMR9 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
125 4229 a
 /PSfrag where{pop(036)[[0(tc)1 0]](037)[[1(bc)1 0]](038)[[2(bc)1 0]](039)[[3(bc)1
0]](040)[[4(bc)1 0]](000)[[5(ct)1 0]](001)[[6(ct)1 0]](002)[[7(ct)1
0]](003)[[8(ct)1 0]](004)[[9(ct)1 0]](005)[[10(ct)1 0]](006)[[11(ct)1
0]](007)[[12(ct)1 0]](008)[[13(ct)1 0]](009)[[14(ct)1 0]](010)[[15(ct)1
0]](018)[[16(ct)1 0]](019)[[17(ct)1 0]](020)[[18(ct)1 0]](021)[[19(ct)1
0]](022)[[20(ct)1 0]](023)[[21(ct)1 0]](024)[[22(ct)1 0]](025)[[23(ct)1
0]](026)[[24(ct)1 0]](027)[[25(ct)1 0]](028)[[26(ct)1 0]](011)[[27(rc)1
0]](012)[[28(rc)1 0]](013)[[29(rc)1 0]](014)[[30(rc)1 0]](015)[[31(rc)1
0]](016)[[32(rc)1 0]](017)[[33(rc)1 0]](029)[[34(rc)1 0]](030)[[35(rc)1
0]](031)[[36(rc)1 0]](032)[[37(rc)1 0]](033)[[38(rc)1 0]](034)[[39(rc)1
0]](035)[[40(rc)1 0]]41 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 125 4229 a @beginspecial 390 @llx 281 @lly
1025 @urx 771 @ury 6350 @rwi @setspecial
%%BeginDocument: FigTranscription.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Linux 3.2.0-51-generic #77-Ubuntu SMP Wed Jul 24 20:18:19 UTC 2013 x86_64.
%%Title: ./FigTranscription.eps
%%CreationDate: 01/30/2014  22:40:28
%%DocumentNeededFonts: Helvetica
%%+ Courier
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   390   281  1025   771
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   390   281  1025   771
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 44.4444 def
portraitMode 17333 34266 csm

    0     0 28231 21760 rc
88 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 28232 21761 rf
22.2222 w
0 7424 21879 0 0 -7424 3670 9056 4 MP
PP
-21879 0 0 7424 21879 0 0 -7424 3670 9056 5 MP stroke
gs 3670 1632 21880 7425 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    ffffff fafafa f6f6f6 f2f2f2 eeeeee eaeaea e6e6e6 e2e2e2 dedede dadada 
    d6d6d6 d2d2d2 cecece cacaca c6c6c6 c2c2c2 bebebe bababa b6b6b6 b2b2b2 
    aeaeae aaaaaa a5a5a5 a1a1a1 9d9d9d 999999 959595 919191 8d8d8d 898989 
    858585 818181 7d7d7d 797979 757575 717171 6d6d6d 696969 656565 616161 
    5d5d5d 595959 555555 505050 4c4c4c 484848 444444 404040 3c3c3c 383838 
    343434 303030 2c2c2c 282828 242424 202020 1c1c1c 181818 141414 101010 
    0c0c0c 080808 040404 000000 
  >
] setcolorspace } bdef mwscm
gs np 3670 1632 mt 0 7425 rl 21880 0 rl 0 -7425 rl cp c np
[21888 0 0 7538 3666 1576] cc
<< % Image dictionary
  /ImageType 1
  /Width 2330 /Height 66
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [2330.000000 0 0 66.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
dfAc"JH16$JH16$JH16$JH16$JH5@-JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$`;oWsJH16$JH2)<q*2n"q`jrXofr*Lq`fW3JH5QIrBKrTO["Bsk5as8JH16$JH3LdnNVR)lN$`F
JH2;BLHg=iJH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$]`?YKJH16$JH16$JH16$
JH16$UB&h/JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$RfMnA
JH16$JH16$JH16$JH16$N<&K5JH16$JH16$JH16$JH16$hZ1nci;iC4JH16$JH16$ZN0M[JH16$JH3Rf
aZnecnNVR)JH16$JH2_Nm6?.%JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$])_([
`rORQlN#O$JH1H*q`i[4pHSTV!C&fD!9ZS)!9HFr!.b-&!96;a!7a=(!6%0R!1*]W5Lfbs5Ht4O5D&t)
5Cifc!.b-$!.b-$!.b-$!.b-:!;f!3!.b-$!.b-$!.b-$!.b-f!;SkV!;f!3!:^'05PkH&5JmK[5MlJ<
5PG0N5PY<T5OeaN5F2A*5L0>S5DoNl5MH2&5Cifc!6G535K<c[5N)V<5PkHV5PY<N5Cih5!1?(-!3\VB
!7sHg!:)k#!.b-$!5/Bq5CigT!9l`F!;Sj1!07-%5N;b$5F2A,5Cifc!5ANs5CigX!9ZS[!;f"T!;f"T
!;Sj1!94(&5N)V*5MZ>65I1?\5Cifc!.b-$!.b-$!.b.E!;Sj1!.b-$!.b-$!.b-$!.b->!;f">!;f!3
!.b-$!.b.+!8g#[!9HGe!67<T!/CR95PY<V5L0>c5Nr105N;ae5PkH,5J[>N5Mn\V!;uoX5JmKc5KNoG
5Cifc!;cc`5P5$N5LBJi5MZ>25MlI/5JmJP5Ogsh!.b-$!.b-$!/U^O5CigB!4tJo!;A^q!;f!3!2T\m
5Cifc!.b-$!7Lr05CigJ!5UmN!07-)5K<b`5JmKU5PkHT5N;b>5Lfc"5P"mL5Eu5l5Cifc!.b-$!9F42
5K<bd5JmKO5O/<o5PkHL5Cih#!6%0R!.b-$!.b-$!.b-$!.b.1!67<T!.b-$!.b-$!.b-$!8deR5Cigp
!5h$P!.b-$!.b.'!80T]!6%0X!6[Ug!9$.n!.b.5!5h%9!;/S4!6IIk!;f!3!/U^55M#nW5DK6\5NMn$
5Cifc!9F3s5LBJo5MlIW5Cig2!7O0i!7*mE!:)k#!3lNT5P%*j!4r6M5NMn&5LBJK5PG/e5Q(TV5GnM7
5OAI$5JI3e5Cig:!/3Xg!1s895NMn$5LBJS5P"l;5Cifc!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!8@M05Cifc!.b.9!/!M.!6%1k!80Sf!.b-,!8Tkj!.b-$!:p2A5Fhel5N;b&5Cifc!.b-$
!.b-$!.b-$!.b.A!/j'm!.b-$!.b-$!.b-$!.b.9!0odd!.d@c5FFaX!;/R-!.b-H!:<"%!.b-$!1,qE
!.dA45Cifc!.b.+!9ZRt!.b-$!.b-t!;f!3!8RXg5Cifc!07-;5Cifc!.b.;!:N.E!;/R-!9X?s5Cifc
!0%!55LTT55<j]!JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH3:^aZk=VJH16$JH5EE
^H\%bjZh](a$7`Iq`i%"Ys7m]q`h=ca$5+TUB(0UJH16$lN"CYNr\?-irHhYOT;dRJH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH2MHJNq%:T`D\h])^SMJH16$JH16$JH3^jJNqUJN<$RT
]`?kQJH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$i;ia>JH5QInNYD$]0DDX`BSnR
JH16$]`?eOJH16$OT=c5f)WKKP5rKbJH16$JH34\h`lYlJH1<&\NeUEgHU5hJH16$JH2#:bs0_Y]0CiH
T`D\heH"JkJH16$JH16$OT<orcN(RAJH16$JH16$JH16$JH16$JH16$JH16$JH16$JH2#:q*0E1JH16$
JH16$gAp1sJH16$JH16$LB,R`JH16$JH3^jj$/(pJH16$JH1<&bs-aZJH16$JH16$JH16$JH16$JH44#
q`fW3JH16$JH16$JH16$JH16$JH4p7q`jrXm6COLmm">_ks+>2a$5I^JNn\cJH16$JH16$[/fGU])_Lg
h#PDYN<"f"JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$pAk(TK`H`iJH16$JH16$JH16$JH16$
o`0b3JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$[fH:imf<)HJH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH3:^nNVR)JH16$JH16$JH16$
JH2GFq`iC,q*0E1JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$]`<Q
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 444.444 FMSR

14220 1336 mt 
(040) s
2699 5750 mt  -90 rotate
(039) s
90 rotate
14.8148 w
DO
SO
22.2222 w
3670 9056 mt 25549 9056 L
3670 1632 mt 25549 1632 L
3670 9056 mt 3670 1632 L
25549 9056 mt 25549 1632 L
3670 9056 mt 25549 9056 L
3670 9056 mt 3670 1632 L
5539 9056 mt 5539 8837 L
5539 1632 mt 5539 1850 L
%%IncludeResource: font Courier
/Courier /ISOLatin1Encoding 444.444 FMSR

5139 9541 mt 
(018) s
7418 9056 mt 7418 8837 L
7418 1632 mt 7418 1850 L
7018 9541 mt 
(019) s
9297 9056 mt 9297 8837 L
9297 1632 mt 9297 1850 L
8897 9541 mt 
(020) s
11175 9056 mt 11175 8837 L
11175 1632 mt 11175 1850 L
10775 9541 mt 
(021) s
13054 9056 mt 13054 8837 L
13054 1632 mt 13054 1850 L
12654 9541 mt 
(022) s
14933 9056 mt 14933 8837 L
14933 1632 mt 14933 1850 L
14533 9541 mt 
(023) s
16812 9056 mt 16812 8837 L
16812 1632 mt 16812 1850 L
16412 9541 mt 
(024) s
18691 9056 mt 18691 8837 L
18691 1632 mt 18691 1850 L
18291 9541 mt 
(025) s
20570 9056 mt 20570 8837 L
20570 1632 mt 20570 1850 L
20170 9541 mt 
(026) s
22448 9056 mt 22448 8837 L
22448 1632 mt 22448 1850 L
22048 9541 mt 
(027) s
24327 9056 mt 24327 8837 L
24327 1632 mt 24327 1850 L
23927 9541 mt 
(028) s
3670 9056 mt 3888 9056 L
25549 9056 mt 25330 9056 L
2742 9198 mt 
(029) s
3670 7913 mt 3888 7913 L
25549 7913 mt 25330 7913 L
2742 8055 mt 
(030) s
3670 6771 mt 3888 6771 L
25549 6771 mt 25330 6771 L
2742 6913 mt 
(031) s
3670 5629 mt 3888 5629 L
25549 5629 mt 25330 5629 L
2742 5771 mt 
(032) s
3670 4487 mt 3888 4487 L
25549 4487 mt 25330 4487 L
2742 4629 mt 
(033) s
3670 3345 mt 3888 3345 L
25549 3345 mt 25330 3345 L
2742 3487 mt 
(034) s
3670 2203 mt 3888 2203 L
25549 2203 mt 25330 2203 L
2742 2345 mt 
(035) s
3670 9056 mt 25549 9056 L
3670 1632 mt 25549 1632 L
3670 9056 mt 3670 1632 L
25549 9056 mt 25549 1632 L
1 sg
0 7423 21879 0 0 -7423 3670 19366 4 MP
PP
-21879 0 0 7423 21879 0 0 -7423 3670 19366 5 MP stroke
gs 3670 11943 21880 7424 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    ffffff fafafa f6f6f6 f2f2f2 eeeeee eaeaea e6e6e6 e2e2e2 dedede dadada 
    d6d6d6 d2d2d2 cecece cacaca c6c6c6 c2c2c2 bebebe bababa b6b6b6 b2b2b2 
    aeaeae aaaaaa a5a5a5 a1a1a1 9d9d9d 999999 959595 919191 8d8d8d 898989 
    858585 818181 7d7d7d 797979 757575 717171 6d6d6d 696969 656565 616161 
    5d5d5d 595959 555555 505050 4c4c4c 484848 444444 404040 3c3c3c 383838 
    343434 303030 2c2c2c 282828 242424 202020 1c1c1c 181818 141414 101010 
    0c0c0c 080808 040404 000000 
  >
] setcolorspace } bdef mwscm
gs np 3670 11943 mt 0 7424 rl 21880 0 rl 0 -7424 rl cp c np
[21888 0 0 7537 3666 11887] cc
<< % Image dictionary
  /ImageType 1
  /Width 2330 /Height 66
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [2330.000000 0 0 66.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$JH16$_>s0lJH16$JH16$JH16$JH16$M#d*2JH16$JH16$JH16$JH16$h>kkd
h>m14JH16$JH16$JH16$JH16$gAoYdhZ343JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$
JH16$JH16$JH16$JH16$f)Xep_uSpai;h"bJH16$JH5EEiBMknJH16$JH5BDhET![k<Ii(a?P4UJH16$
m/Z?7JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$JH16$U&_qm!<<,G5JI3]5Cig;!/j(d
!6dZb!7F*j!9ZRt!.b-k!73q1!7*mL!9cXu!2omg5K!Q=5DfHf5N2\,5Cifc!.b-`!9QLs!.b-$!3cIH
5N2\(5Ec)'5Cifc!58Hs5Cifc!.b-O!6%1_!9?A3!/s-n!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-]!8g"l!:'X.5Cifc!36+[5H=e'56(]-5JR8\5Cig_!96:p!:9d15Cifc!1X&O5HFk*
56(]05K<bW5Cifc!.b-$!.b-$!.b-F!6@BU!.b-$!.b-$!.b-$!.b-V!5UmN!07-'5JmKB5Q1Z/5J@-[
5Cifc!;ccA5Cifc!.b-$!9F405Ka&H5Q(T15J7'X5Cifc!<)u=5Cifc!.b-$!.b-$!.b-$!8RXt5Cifc
!.b-$!.b-$!.b-$!5&<J5Cifc!.b-$!7V#-5KEiF5Cig?!9HFr!.b.0!6IHc!6IHV!.b.4!9HGo!7*l\
!3Q=`5Cifc!8IRp5EGlf5Cig#!8g"l!.b-$!<)tV5Cig2!6[Tc!9QN#!0TRW!8]qk!.b-3!1c?*!/U^$
5E>g(5MlI&5Cifc!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-D!0'3o!6"rr
5Cifc!.b-$!.b-$!7Lqc5Q1Z$5CigJ!9$.n!.b-$!.b-$!.b-$!.b-$!;$8\5Cifc!.b-$!.b-$!.b-$
!8%:95K!Q>5PkGB5Q1Z(5Q1Z/5P>*&5Cifc!.b.*!:N.'!.b-%!008D!7jC6!6%2$!7F+-!6dZY!.b-$
!8de@5Cifc!.b-$!.b-C!6IHV!.b-(!9l_!!.b-$!.b-$!65)`5Cifc!.b.65Cifc!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!/1Ek5Cifc!.b-$!;$915F)<25McCc5Cifc!7(Yk5Cifc!.b-$
!<)u05Ec*/5MuOa5Cifc!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b.*!6RP(
!/j(-!6[U-!9HFr!.b-$!.b-$!58HU5PkGO5Cih5!6ma/!9cXu!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!/LWt5DT<`5Cifc!.b-Y!9QLs!.b-$!5ef_5D9*\5Cifc!.b-V!9QLs!.b-$
!;?K65K<cb5Cifc!.b-$!0%!95K<cF5Cifu!6.7F!9?@q!.b-$!.b-,!9-5^!67<T!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!9!q>5Cifc!.b-$!/CQp5Cifc!.b-m!9HFr!.b-$!.b-)
!6%0R!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!/LX$5Crln5Cifc!.b-$!.b-$
!1a,?5Cih6!1c?*!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!9=-A5Cifc!.b-$!.b-$!.b-$
!94'@5Cifc!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$
!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b-$!.b.%!.Y
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 444.444 FMSR

14220 11647 mt 
(038) s
2699 16061 mt  -90 rotate
(037) s
90 rotate
14220 20492 mt 
(036) s
14.8148 w
DO
SO
22.2222 w
3670 19366 mt 25549 19366 L
3670 11943 mt 25549 11943 L
3670 19366 mt 3670 11943 L
25549 19366 mt 25549 11943 L
3670 19366 mt 25549 19366 L
3670 19366 mt 3670 11943 L
5539 19366 mt 5539 19147 L
5539 11943 mt 5539 12161 L
%%IncludeResource: font Courier
/Courier /ISOLatin1Encoding 444.444 FMSR

5139 19851 mt 
(000) s
7418 19366 mt 7418 19147 L
7418 11943 mt 7418 12161 L
7018 19851 mt 
(001) s
9297 19366 mt 9297 19147 L
9297 11943 mt 9297 12161 L
8897 19851 mt 
(002) s
11175 19366 mt 11175 19147 L
11175 11943 mt 11175 12161 L
10775 19851 mt 
(003) s
13054 19366 mt 13054 19147 L
13054 11943 mt 13054 12161 L
12654 19851 mt 
(004) s
14933 19366 mt 14933 19147 L
14933 11943 mt 14933 12161 L
14533 19851 mt 
(005) s
16812 19366 mt 16812 19147 L
16812 11943 mt 16812 12161 L
16412 19851 mt 
(006) s
18691 19366 mt 18691 19147 L
18691 11943 mt 18691 12161 L
18291 19851 mt 
(007) s
20570 19366 mt 20570 19147 L
20570 11943 mt 20570 12161 L
20170 19851 mt 
(008) s
22448 19366 mt 22448 19147 L
22448 11943 mt 22448 12161 L
22048 19851 mt 
(009) s
24327 19366 mt 24327 19147 L
24327 11943 mt 24327 12161 L
23927 19851 mt 
(010) s
3670 19366 mt 3888 19366 L
25549 19366 mt 25330 19366 L
2742 19508 mt 
(011) s
3670 18224 mt 3888 18224 L
25549 18224 mt 25330 18224 L
2742 18366 mt 
(012) s
3670 17082 mt 3888 17082 L
25549 17082 mt 25330 17082 L
2742 17224 mt 
(013) s
3670 15940 mt 3888 15940 L
25549 15940 mt 25330 15940 L
2742 16082 mt 
(014) s
3670 14798 mt 3888 14798 L
25549 14798 mt 25330 14798 L
2742 14940 mt 
(015) s
3670 13656 mt 3888 13656 L
25549 13656 mt 25330 13656 L
2742 13798 mt 
(016) s
3670 12514 mt 3888 12514 L
25549 12514 mt 25330 12514 L
2742 12656 mt 
(017) s
3670 19366 mt 25549 19366 L
3670 11943 mt 25549 11943 L
3670 19366 mt 3670 11943 L
25549 19366 mt 25549 11943 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 125 4229 a
 /End PSfrag
 125 4229 a 125 228 a
 /Hide PSfrag
 125 228
a -598 282 a Fb(PSfrag)26 b(replacemen)n(ts)p -598 311
723 4 v 125 314 a
 /Unhide PSfrag
 125 314 a 9 323 a
  {
 9 323 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb -107 385 a Fa(t)i(\(sec\))p
0 TeXcolorgray 0 TeXcolorgray 9 323 a
  } 0/Place PSfrag
 9 323 a 102 505
a
  {
 102 505 a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb
79 480 a Fa(p)p 0 TeXcolorgray 0 TeXcolorgray 102 505
a
  } 1/Place PSfrag
 102 505 a 70 601 a
  {
 70 601 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 15 576 a Fa(\(b\))p 0 TeXcolorgray 0 TeXcolorgray
70 601 a
  } 2/Place PSfrag
 70 601 a 102 696 a
  {
 102 696 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 79 671 a Fa(p)p 0 TeXcolorgray
0 TeXcolorgray 102 696 a
  } 3/Place PSfrag
 102 696 a 72 792 a
  {
 72 792 a
0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 19 767 a
Fa(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 72 792 a
  } 4/Place PSfrag
 72
792 a 104 804 a
  {
 104 804 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 83 862 a Fa(2)p 0 TeXcolorgray 0 TeXcolorgray
104 804 a
  } 5/Place PSfrag
 104 804 a 104 900 a
  {
 104 900 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 83 958 a Fa(4)p 0 TeXcolorgray
0 TeXcolorgray 104 900 a
  } 6/Place PSfrag
 104 900 a 104 995 a
  {
 104 995
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 83 1053
a Fa(6)p 0 TeXcolorgray 0 TeXcolorgray 104 995 a
  } 7/Place PSfrag
 104
995 a 104 1091 a
  {
 104 1091 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 83 1149 a Fa(8)p 0 TeXcolorgray 0 TeXcolorgray
104 1091 a
  } 8/Place PSfrag
 104 1091 a 83 1186 a
  {
 83 1186 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 41 1244 a Fa(10)p 0 TeXcolorgray
0 TeXcolorgray 83 1186 a
  } 9/Place PSfrag
 83 1186 a 83 1281 a
  {
 83 1281
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 41 1340
a Fa(12)p 0 TeXcolorgray 0 TeXcolorgray 83 1281 a
  } 10/Place PSfrag
 83
1281 a 83 1377 a
  {
 83 1377 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 41 1435 a Fa(14)p 0 TeXcolorgray 0 TeXcolorgray
83 1377 a
  } 11/Place PSfrag
 83 1377 a 83 1472 a
  {
 83 1472 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 41 1531 a Fa(16)p 0 TeXcolorgray
0 TeXcolorgray 83 1472 a
  } 12/Place PSfrag
 83 1472 a 83 1568 a
  {
 83 1568
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 41 1626
a Fa(18)p 0 TeXcolorgray 0 TeXcolorgray 83 1568 a
  } 13/Place PSfrag
 83
1568 a 83 1663 a
  {
 83 1663 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 41 1721 a Fa(20)p 0 TeXcolorgray 0 TeXcolorgray
83 1663 a
  } 14/Place PSfrag
 83 1663 a 83 1759 a
  {
 83 1759 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 41 1817 a Fa(22)p 0 TeXcolorgray
0 TeXcolorgray 83 1759 a
  } 15/Place PSfrag
 83 1759 a 104 1854 a
  {
 104 1854
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 83 1912
a Fa(2)p 0 TeXcolorgray 0 TeXcolorgray 104 1854 a
  } 16/Place PSfrag
 104
1854 a 104 1950 a
  {
 104 1950 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 83 2008 a Fa(4)p 0 TeXcolorgray 0 TeXcolorgray
104 1950 a
  } 17/Place PSfrag
 104 1950 a 104 2045 a
  {
 104 2045 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 83 2103 a Fa(6)p 0 TeXcolorgray
0 TeXcolorgray 104 2045 a
  } 18/Place PSfrag
 104 2045 a 104 2141 a
  {
 104 2141
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 83 2199
a Fa(8)p 0 TeXcolorgray 0 TeXcolorgray 104 2141 a
  } 19/Place PSfrag
 104
2141 a 83 2236 a
  {
 83 2236 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 41 2294 a Fa(10)p 0 TeXcolorgray 0 TeXcolorgray
83 2236 a
  } 20/Place PSfrag
 83 2236 a 83 2332 a
  {
 83 2332 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 41 2390 a Fa(12)p 0 TeXcolorgray
0 TeXcolorgray 83 2332 a
  } 21/Place PSfrag
 83 2332 a 83 2427 a
  {
 83 2427
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 41 2485
a Fa(14)p 0 TeXcolorgray 0 TeXcolorgray 83 2427 a
  } 22/Place PSfrag
 83
2427 a 83 2523 a
  {
 83 2523 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 41 2581 a Fa(16)p 0 TeXcolorgray 0 TeXcolorgray
83 2523 a
  } 23/Place PSfrag
 83 2523 a 83 2618 a
  {
 83 2618 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 41 2676 a Fa(18)p 0 TeXcolorgray
0 TeXcolorgray 83 2618 a
  } 24/Place PSfrag
 83 2618 a 83 2714 a
  {
 83 2714
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 41 2772
a Fa(20)p 0 TeXcolorgray 0 TeXcolorgray 83 2714 a
  } 25/Place PSfrag
 83
2714 a 83 2809 a
  {
 83 2809 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 41 2867 a Fa(22)p 0 TeXcolorgray 0 TeXcolorgray
83 2809 a
  } 26/Place PSfrag
 83 2809 a 125 2946 a
  {
 125 2946 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 42 2963 a Fa(10)p 0 TeXcolorgray
0 TeXcolorgray 125 2946 a
  } 27/Place PSfrag
 125 2946 a 125 3042 a
  {
 125 3042
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 42 3058
a Fa(20)p 0 TeXcolorgray 0 TeXcolorgray 125 3042 a
  } 28/Place PSfrag
 125
3042 a 125 3137 a
  {
 125 3137 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 42 3154 a Fa(30)p 0 TeXcolorgray 0 TeXcolorgray
125 3137 a
  } 29/Place PSfrag
 125 3137 a 125 3232 a
  {
 125 3232 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 42 3249 a Fa(40)p 0 TeXcolorgray
0 TeXcolorgray 125 3232 a
  } 30/Place PSfrag
 125 3232 a 125 3328 a
  {
 125 3328
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 42 3345
a Fa(50)p 0 TeXcolorgray 0 TeXcolorgray 125 3328 a
  } 31/Place PSfrag
 125
3328 a 125 3423 a
  {
 125 3423 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 42 3440 a Fa(60)p 0 TeXcolorgray 0 TeXcolorgray
125 3423 a
  } 32/Place PSfrag
 125 3423 a 125 3519 a
  {
 125 3519 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 42 3536 a Fa(70)p 0 TeXcolorgray
0 TeXcolorgray 125 3519 a
  } 33/Place PSfrag
 125 3519 a 125 3614 a
  {
 125 3614
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 42 3631
a Fa(10)p 0 TeXcolorgray 0 TeXcolorgray 125 3614 a
  } 34/Place PSfrag
 125
3614 a 125 3710 a
  {
 125 3710 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 42 3726 a Fa(20)p 0 TeXcolorgray 0 TeXcolorgray
125 3710 a
  } 35/Place PSfrag
 125 3710 a 125 3805 a
  {
 125 3805 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 42 3822 a Fa(30)p 0 TeXcolorgray
0 TeXcolorgray 125 3805 a
  } 36/Place PSfrag
 125 3805 a 125 3901 a
  {
 125 3901
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 42 3917
a Fa(40)p 0 TeXcolorgray 0 TeXcolorgray 125 3901 a
  } 37/Place PSfrag
 125
3901 a 125 3996 a
  {
 125 3996 a 0 TeXcolorgray 0.000 0.000 0.000
TeXcolorrgb 42 4013 a Fa(50)p 0 TeXcolorgray 0 TeXcolorgray
125 3996 a
  } 38/Place PSfrag
 125 3996 a 125 4092 a
  {
 125 4092 a 0 TeXcolorgray
0.000 0.000 0.000 TeXcolorrgb 42 4108 a Fa(60)p 0 TeXcolorgray
0 TeXcolorgray 125 4092 a
  } 39/Place PSfrag
 125 4092 a 125 4187 a
  {
 125 4187
a 0 TeXcolorgray 0.000 0.000 0.000 TeXcolorrgb 42 4204
a Fa(70)p 0 TeXcolorgray 0 TeXcolorgray 125 4187 a
  } 40/Place PSfrag
 125
4187 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial -138 2879 a
 currentpoint currentpoint translate 1 0.43399 div 1 0.43399 div scale neg exch neg exch translate
 -138 2879 a 0 TeXcolorgray 174
x Fc(Figure)19 b(2.)p 0 TeXcolorgray 0 TeXcolorgray 150
3053 a
SDict begin H.S end
 150 3053 a 0 TeXcolorgray 0 TeXcolorgray 150 3053
a
SDict begin H.R end
 150 3053 a 150 3053 a
SDict begin [ /View [/FitH -32768] /Dest (figure.2) cvn H.B /DEST pdfmark end
 150 3053 a 0 TeXcolorgray Fr(T)m(ranscription)d
(e)o(xample)h(for)e(recording)h(\223)-6 b(Ach)16 b(Lieben)f(Chris-)-138
3145 y(ten\224)k(from)f(the)h(Bach10)h(dataset.)j(\(a\))18
b(The)h(output)g(of)g(the)f(transcription-)-138 3236
y(predicton)f(system)g(using)g(the)f(3rd)g(con\002guration,)i(with)e
(the)g(N)m(ADE-HF)-6 b(.)-138 3327 y(\(b\))19 b(The)g(pitch)g(ground)h
(truth)f(of)g(the)g(recording.)p 0 TeXcolorgray -138
3615 a Fw(from)h(the)h(prediction)f(system)h(w)o(as)h(incorporated)d
(using)h(Dirich-)-138 3715 y(let)e(priors.)24 b(Experimental)16
b(results)i(using)f(the)h(Bach10)f(dataset)h(of)-138
3815 y(multiple-instrument)f(recordings)h(sho)n(wed)h(that)i(there)e
(is)i(a)g(clear)-138 3914 y(and)15 b(signi\002cant)f(impro)o(v)o(ement)
e(\(3\045)k(in)f(terms)g(of)g(F-measure\))f(by)-138 4014
y(combining)i(a)i(music)f(language)f(model)h(with)h(an)g(acoustic)f
(model)-138 4114 y(for)j(impro)o(ving)d(the)j(performance)d(of)j(the)h
(latter)-5 b(.)-138 4263 y(In)25 b(the)h(current)e(e)n(v)n(aluation,)g
(the)i(language)d(models)i(are)g(trained)-138 4363 y(on)16
b(only)f(one)h(dataset.)24 b(In)16 b(the)g(future,)g(we)h(w)o(ould)e
(lik)o(e)i(to)g(e)n(v)n(aluate)-138 4462 y(the)28 b(proposed)f(system)h
(using)g(language)e(models)i(trained)g(from)-138 4562
y(dif)n(ferent)23 b(sources)h(to)h(see)g(if)g(this)h(helps)e(the)h
(MLMs)g(generalize)-138 4661 y(better)-5 b(.)29 b(W)-7
b(e)23 b(will)f(also)g(in)m(v)o(estigate)e(dif)n(ferent)g(system)i
(con\002gura-)-138 4761 y(tions,)29 b(by)f(bootstrapping)d(the)i
(system)h(for)f(demonstrating)e(that)-138 4861 y(an)e(impro)o(v)o(ed)d
(transcription)i(can)g(lead)h(to)h(an)f(impro)o(v)o(ed)d(predic-)-138
4960 y(tion,)g(and)g(so)h(on.)26 b(W)-7 b(e)22 b(will)f(also)g(in)m(v)o
(estigate)e(the)i(ef)n(fect)f(of)g(using)-138 5060 y(dif)n(ferent)c
(RNN)j(architectures)d(lik)o(e)i(Long)f(Short)g(T)-6
b(erm)17 b(Memory)-138 5160 y(\(LSTM\))j(and)h(bi-directional)d(RNNs)k
(and)f(LSTMs.)27 b(Finally)-5 b(,)20 b(we)-138 5259 y(w)o(ould)28
b(lik)o(e)i(to)f(e)o(xtend)f(and)h(impro)o(v)o(e)e(the)i(current)f
(models)g(for)-138 5359 y(high-dimensional)d(sequences)j(to)h(better)f
(\002t)h(the)g(requirements)p 0 TeXcolorgray 0 TeXcolorgray
1962 42 a(for)20 b(music)g(language)e(modelling.)1962
280 y Fu(Refer)n(ences)1962 293 y
SDict begin H.S end
 1962 293 a 1962 293
a
SDict begin 12 H.A end
 1962 293 a 1962 293 a
SDict begin [ /View [/FitH -32768] /Dest (section*.1) cvn H.B /DEST pdfmark end
 1962 293 a 0 TeXcolorgray 1796
429 a
SDict begin H.S end
 1796 429 a 1920 429 a
SDict begin 12 H.A end
 1920 429 a 1920 429 a
SDict begin [ /View [/FitH -32768] /Dest (cite.MIREX) cvn H.B /DEST pdfmark end
 1920
429 a 0 TeXcolorgray 42 w Fw(Music)289 b(Information)d(Retrie)n(v)n(al)
i(Ev)n(al-)2045 529 y(uation)491 b(eXchange)e(\(MIREX\).)p
0 0.08 0.45 TeXcolorrgb 2045 642 a
SDict begin H.S end
 2045 642 a 0 0.08 0.45
TeXcolorrgb -13 x Fa(http://music-)t(ir.org/mirexwiki/)p
0 0.08 0.45 TeXcolorrgb 3544 574 a
SDict begin H.R end
 3544 574 a 3544 629
a
SDict begin [ /H /I /Border [0 0 0] /Color [0 1 1] /Action << /Subtype /URI /URI (http://music-ir.org/mirexwiki/) >> /Subtype /Link H.B /ANN pdfmark end
 3544 629 a 0 TeXcolorgray Fw(.)p 0 TeXcolorgray 1796
813 a
SDict begin H.S end
 1796 813 a 1920 813 a
SDict begin 12 H.A end
 1920 813 a 1920 813 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Benetos2013b) cvn H.B /DEST pdfmark end
 1920
813 a 0 TeXcolorgray 42 w Fw(Benetos,)24 b(E.,)g(Dixon,)g(S.,)g
(Giannoulis,)f(D.,)i(Kirchhof)n(f,)d(H.,)i(and)2045 912
y(Klapuri,)j(A.)49 b(Automatic)26 b(music)g(transcription:)36
b(challenges)2045 1012 y(and)d(future)g(directions.)71
b Ft(J)n(ournal)32 b(of)i(Intellig)o(ent)f(Informa-)2045
1112 y(tion)k(Systems)p Fw(,)42 b(41\(3\):407\226434,)37
b(December)f(2013a.)83 b(doi:)2045 1211 y(10.1007/s10844-)t(013)o(-)t
(0)o(25)o(8-)t(3)o(.)p 0 TeXcolorgray 1796 1395 a
SDict begin H.S end
 1796
1395 a 1920 1395 a
SDict begin 12 H.A end
 1920 1395 a 1920 1395 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Benetos2012) cvn H.B /DEST pdfmark end
 1920 1395
a 0 TeXcolorgray 42 w Fw(Benetos,)24 b(Emmanouil)e(and)h(Dixon,)g
(Simon.)40 b(A)24 b(shift-in)m(v)n(ariant)2045 1495 y(latent)g(v)n
(ariable)f(model)g(for)g(automatic)g(music)h(transcription.)2045
1595 y Ft(Computer)c(Music)h(J)n(ournal)p Fw(,)d(36\(4\):81\22694,)e
(2012.)p 0 TeXcolorgray 1796 1779 a
SDict begin H.S end
 1796 1779 a 1920
1779 a
SDict begin 12 H.A end
 1920 1779 a 1920 1779 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Benetos2013) cvn H.B /DEST pdfmark end
 1920 1779 a 0 TeXcolorgray
42 w Fw(Benetos,)32 b(Emmanouil,)f(Cherla,)h(Srikanth,)g(and)d(W)-7
b(e)o(yde,)32 b(T)m(ill-)2045 1878 y(man.)68 b(An)33
b(ef)n(fcient)e(shiftin)m(v)n(ariant)g(model)g(for)h(polyphonic)2045
1978 y(music)d(transcription.)54 b(In)28 b Ft(6th)g(International)f(W)
-8 b(orkshop)28 b(on)2045 2078 y(Mac)o(hine)19 b(Learning)g(and)h
(Music)p Fw(,)g(2013b.)p 0 TeXcolorgray 1796 2262 a
SDict begin H.S end
 1796
2262 a 1920 2262 a
SDict begin 12 H.A end
 1920 2262 a 1920 2262 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Bengio1994) cvn H.B /DEST pdfmark end
 1920 2262
a 0 TeXcolorgray 42 w Fw(Bengio,)46 b(Y)-9 b(oshua,)45
b(Simard,)h(P)o(atrice,)h(and)40 b(Frasconi,)46 b(P)o(aolo.)2045
2361 y(Learning)23 b(long-term)f(dependencies)g(with)i(gradient)f
(descent)2045 2461 y(is)k(dif)n(\002cult.)48 b Ft(Neur)o(al)26
b(Networks,)j(IEEE)d(T)-5 b(r)o(ansactions)25 b(on)p
Fw(,)i(5)2045 2561 y(\(2\):157\226166,)16 b(1994.)p 0
TeXcolorgray 1796 2745 a
SDict begin H.S end
 1796 2745 a 1920 2745 a
SDict begin 12 H.A end
 1920
2745 a 1920 2745 a
SDict begin [ /View [/FitH -32768] /Dest (cite.bengio2012advances) cvn H.B /DEST pdfmark end
 1920 2745 a 0 TeXcolorgray 42 w Fw(Bengio,)43
b(Y)-9 b(oshua,)42 b(Boulanger)n(-Le)n(w)o(ando)n(wski,)e(Nicolas,)j
(and)2045 2844 y(P)o(ascanu,)19 b(Razv)n(an.)27 b(Adv)n(ances)18
b(in)i(optimizing)e(recurrent)g(net-)2045 2944 y(w)o(orks.)29
b(2012.)p 0 TeXcolorgray 1796 3128 a
SDict begin H.S end
 1796 3128 a 1920
3128 a
SDict begin 12 H.A end
 1920 3128 a 1920 3128 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Bertin2009) cvn H.B /DEST pdfmark end
 1920 3128 a 0 TeXcolorgray
42 w Fw(Bertin,)36 b(N.,)g(Badeau,)f(R.,)h(and)d(V)-5
b(incent,)35 b(E.)70 b(Enforcing)30 b(har)n(-)2045 3228
y(monicity)24 b(and)g(smoothness)f(in)i(bayesian)f(non-ne)o(gati)n(v)o
(e)d(ma-)2045 3327 y(trix)h(f)o(actorization)e(applied)g(to)i
(polyphonic)d(music)j(transcrip-)2045 3427 y(tion.)68
b Ft(IEEE)32 b(T)-5 b(r)o(ansactions)32 b(on)g(A)n(udio,)i(Speec)o(h,)g
(and)d(Lan-)2045 3527 y(gua)o(g)o(e)19 b(Pr)l(ocessing)p
Fw(,)h(18\(3\):538\226549,)15 b(March)k(2010.)p 0 TeXcolorgray
1796 3711 a
SDict begin H.S end
 1796 3711 a 1920 3711 a
SDict begin 12 H.A end
 1920 3711 a 1920
3711 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Bock2012) cvn H.B /DEST pdfmark end
 1920 3711 a 0 TeXcolorgray 42 w Fw(Bock,)k(S.)g(and)f(Schedl,)h
(M.)37 b(Polyphonic)21 b(piano)h(note)g(transcrip-)2045
3810 y(tion)27 b(with)g(recurrent)f(neural)g(netw)o(orks.)51
b(In)27 b Ft(2012)f(IEEE)g(In-)2045 3910 y(ternational)19
b(Confer)m(ence)h(on)g(Acoustics,)g(Speec)o(h)e(and)i(Signal)2045
4010 y(Pr)l(ocessing)g(\(ICASSP\))p Fw(,)e(pp.)i(121\226124,)d(March)i
(2012.)p 0 TeXcolorgray 1796 4194 a
SDict begin H.S end
 1796 4194 a 1920
4194 a
SDict begin 12 H.A end
 1920 4194 a 1920 4194 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Boulanger-Lewandowski2012) cvn H.B /DEST pdfmark end
 1920 4194 a 0 TeXcolorgray
42 w Fw(Boulanger)n(-Le)n(w)o(ando)n(wski,)27 b(N.,)k(Bengio,)f(Y)-11
b(.,)32 b(and)c(V)-5 b(incent,)30 b(P)-9 b(.)2045 4293
y(Modeling)37 b(temporal)g(dependencies)f(in)j(high-dimensional)2045
4393 y(sequences:)31 b(Application)22 b(to)i(polyphonic)c(music)k
(generation)2045 4492 y(and)i(transcription.)49 b(In)27
b Ft(29th)f(International)f(Confer)m(ence)h(on)2045 4592
y(Mac)o(hine)19 b(Learning)p Fw(,)g(Edinb)n(ur)o(gh,)e(Scotland,)i(UK,)
h(2012.)p 0 TeXcolorgray 1796 4776 a
SDict begin H.S end
 1796 4776 a 1920
4776 a
SDict begin 12 H.A end
 1920 4776 a 1920 4776 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Boulanger-Lewandowski2013) cvn H.B /DEST pdfmark end
 1920 4776 a 0 TeXcolorgray
42 w Fw(Boulanger)n(-Le)n(w)o(ando)n(wski,)27 b(N.,)k(Bengio,)f(Y)-11
b(.,)32 b(and)c(V)-5 b(incent,)30 b(P)-9 b(.)2045 4876
y(High-dimensional)18 b(sequence)h(transduction.)29 b(In)21
b Ft(2013)e(IEEE)2045 4975 y(International)h(Confer)m(ence)h(on)g
(Acoustics,)h(Speec)o(h)e(and)h(Sig-)2045 5075 y(nal)f(Pr)l(ocessing)g
(\(ICASSP\))p Fw(,)e(pp.)i(3178\2263182,)c(May)k(2013.)p
0 TeXcolorgray 1796 5259 a
SDict begin H.S end
 1796 5259 a 1920 5259 a
SDict begin 12 H.A end
 1920
5259 a 1920 5259 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Cemgil2004a) cvn H.B /DEST pdfmark end
 1920 5259 a 0 TeXcolorgray 42 w Fw(Cemgil,)k(A.)g(T)
-6 b(.)40 b Ft(Bayesian)22 b(Music)i(T)-5 b(r)o(anscription)p
Fw(.)39 b(PhD)24 b(thesis,)2045 5359 y(Radboud)19 b(Uni)n(v)o(ersity)g
(of)g(Nijme)o(gen,)g(2004.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray .7 .7 .7 TeXcolorrgb
-392 39 a Fw(660)-392 139 y(661)-392 239 y(662)-392 338
y(663)-392 438 y(664)-392 538 y(665)-392 637 y(666)-392
737 y(667)-392 836 y(668)-392 936 y(669)-392 1036 y(670)-392
1135 y(671)-392 1235 y(672)-392 1335 y(673)-392 1434
y(674)-392 1534 y(675)-392 1633 y(676)-392 1733 y(677)-392
1833 y(678)-392 1932 y(679)-392 2032 y(680)-392 2132
y(681)-392 2231 y(682)-392 2331 y(683)-392 2430 y(684)-392
2530 y(685)-392 2630 y(686)-392 2729 y(687)-392 2829
y(688)-392 2929 y(689)-392 3028 y(690)-392 3128 y(691)-392
3227 y(692)-392 3327 y(693)-392 3427 y(694)-392 3526
y(695)-392 3626 y(696)-392 3726 y(697)-392 3825 y(698)-392
3925 y(699)-392 4024 y(700)-392 4124 y(701)-392 4224
y(702)-392 4323 y(703)-392 4423 y(704)-392 4523 y(705)-392
4622 y(706)-392 4722 y(707)-392 4821 y(708)-392 4921
y(709)-392 5021 y(710)-392 5120 y(711)-392 5220 y(712)-392
5320 y(713)-392 5419 y(714)4131 39 y(715)4131 139 y(716)4131
239 y(717)4131 338 y(718)4131 438 y(719)4131 538 y(720)4131
637 y(721)4131 737 y(722)4131 836 y(723)4131 936 y(724)4131
1036 y(725)4131 1135 y(726)4131 1235 y(727)4131 1335
y(728)4131 1434 y(729)4131 1534 y(730)4131 1633 y(731)4131
1733 y(732)4131 1833 y(733)4131 1932 y(734)4131 2032
y(735)4131 2132 y(736)4131 2231 y(737)4131 2331 y(738)4131
2430 y(739)4131 2530 y(740)4131 2630 y(741)4131 2729
y(742)4131 2829 y(743)4131 2929 y(744)4131 3028 y(745)4131
3128 y(746)4131 3227 y(747)4131 3327 y(748)4131 3427
y(749)4131 3526 y(750)4131 3626 y(751)4131 3726 y(752)4131
3825 y(753)4131 3925 y(754)4131 4024 y(755)4131 4124
y(756)4131 4224 y(757)4131 4323 y(758)4131 4423 y(759)4131
4523 y(760)4131 4622 y(761)4131 4722 y(762)4131 4821
y(763)4131 4921 y(764)4131 5021 y(765)4131 5120 y(766)4131
5220 y(767)4131 5320 y(768)4131 5419 y(769)p 0 TeXcolorgray
0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.S end

-138 -124 a 0 TeXcolorgray 0 TeXcolorgray -138 -124 a
SDict begin H.R end

-138 -124 a -138 -124 a
SDict begin [ /View [/FitH -32768] /Dest (page.7) cvn H.B /DEST pdfmark end
 -138 -124 a 0 TeXcolorgray 557
-149 a Fq(RNN-based)18 b(Music)g(Language)h(Models)f(f)n(or)h(Impr)o(o)
o(ving)g(A)l(utomatic)h(Music)d(T)-6 b(ranscription)p
-138 -116 4050 9 v 0 TeXcolorgray 0 TeXcolorgray -304
42 a
SDict begin H.S end
 -304 42 a -180 42 a
SDict begin 12 H.A end
 -180 42 a -180 42 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Dempster77) cvn H.B /DEST pdfmark end
 -180 42
a 0 TeXcolorgray 42 w Fw(Dempster)m(,)31 b(A.)g(P)-9
b(.,)33 b(Laird,)e(N.)g(M.,)h(and)e(Rubin,)i(D.)e(B.)62
b(Maxi-)-55 141 y(mum)23 b(lik)o(elihood)f(from)h(incomplete)f(data)h
(via)h(the)g(EM)f(algo-)-55 241 y(rithm.)63 b Ft(J)n(ournal)29
b(of)i(the)g(Royal)f(Statistical)h(Society)p Fw(,)h(39\(1\):)-55
341 y(1\22638,)19 b(1977.)p 0 TeXcolorgray -304 525 a
SDict begin H.S end

-304 525 a -180 525 a
SDict begin 12 H.A end
 -180 525 a -180 525 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Duan2010) cvn H.B /DEST pdfmark end
 -180 525
a 0 TeXcolorgray 42 w Fw(Duan,)30 b(Z.,)h(P)o(ardo,)e(B.,)i(and)e
(Zhang,)g(C.)57 b(Multiple)28 b(fundamen-)-55 625 y(tal)21
b(frequenc)o(y)c(estimation)i(by)h(modeling)e(spectral)i(peaks)f(and)
-55 724 y(non-peak)e(re)o(gions.)27 b Ft(IEEE)20 b(T)-5
b(r)o(ansactions)19 b(on)g(A)n(udio,)g(Speec)o(h,)-55
824 y(and)g(Langua)o(g)o(e)e(Pr)l(ocessing)p Fw(,)j
(18\(8\):2121\2262133)o(,)14 b(No)o(v)o(ember)-55 924
y(2010.)p 0 TeXcolorgray -304 1108 a
SDict begin H.S end
 -304 1108 a -180
1108 a
SDict begin 12 H.A end
 -180 1108 a -180 1108 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Ewert2011) cvn H.B /DEST pdfmark end
 -180 1108 a 0 TeXcolorgray
42 w Fw(Ewert,)38 b(Sebastian)d(and)f(M)7 b(\250)-35
b(uller)m(,)38 b(Meinard.)75 b(Score-informed)-55 1208
y(v)n(oice)34 b(separation)f(for)h(piano)f(recordings.)73
b(In)34 b Ft(ISMIR)p Fw(,)f(pp.)-55 1307 y(245\226250,)17
b(2011.)p 0 TeXcolorgray -304 1492 a
SDict begin H.S end
 -304 1492 a -180
1492 a
SDict begin 12 H.A end
 -180 1492 a -180 1492 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Ewert2012) cvn H.B /DEST pdfmark end
 -180 1492 a 0 TeXcolorgray
42 w Fw(Ewert,)38 b(Sebastian)d(and)f(M)7 b(\250)-35
b(uller)m(,)38 b(Meinard.)75 b(Score-informed)-55 1592
y(source)21 b(separation)f(for)h(music)h(signals.)34
b(In)21 b Ft(Multimodal)g(Mu-)-55 1691 y(sic)g(Pr)l(ocessing)p
Fw(,)f(pp.)f(73\22694,)f(2012.)p 0 TeXcolorgray -304
1876 a
SDict begin H.S end
 -304 1876 a -180 1876 a
SDict begin 12 H.A end
 -180 1876 a -180 1876
a
SDict begin [ /View [/FitH -32768] /Dest (cite.Goto2003) cvn H.B /DEST pdfmark end
 -180 1876 a 0 TeXcolorgray 42 w Fw(Goto,)41 b(M.,)h(Hashiguchi,)e
(H.,)i(Nishimura,)f(T)-6 b(.,)41 b(and)c(Oka,)42 b(R.)-55
1975 y(R)-5 b(WC)19 b(music)e(database:)23 b(music)16
b(genre)g(database)g(and)h(musical)-55 2075 y(instrument)j(sound)g
(database.)32 b(In)20 b Ft(International)f(Confer)m(ence)-55
2175 y(on)i(Music)h(Information)d(Retrie)o(val)p Fw(,)i(Baltimore,)g
(USA,)h(Octo-)-55 2274 y(ber)e(2003.)p 0 TeXcolorgray
-304 2459 a
SDict begin H.S end
 -304 2459 a -180 2459 a
SDict begin 12 H.A end
 -180 2459 a -180
2459 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Larochelle2011) cvn H.B /DEST pdfmark end
 -180 2459 a 0 TeXcolorgray 42 w Fw(Larochelle,)e(Hugo)g(and)h
(Murray)-5 b(,)17 b(Iain.)27 b(The)19 b(neural)f(autore)o(gres-)-55
2558 y(si)n(v)o(e)g(distrib)n(ution)e(estimator)-5 b(.)24
b Ft(J)n(ournal)16 b(of)i(Mac)o(hine)f(Learning)-55 2658
y(Resear)m(c)o(h)p Fw(,)i(15:29\22637,)e(2011.)p 0 TeXcolorgray
-304 2842 a
SDict begin H.S end
 -304 2842 a -180 2842 a
SDict begin 12 H.A end
 -180 2842 a -180
2842 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Li1999) cvn H.B /DEST pdfmark end
 -180 2842 a 0 TeXcolorgray 42 w Fw(Li,)j(D.)f(D.)h(and)f(Seung,)
f(H.)i(S.)28 b(Learning)18 b(the)h(parts)h(of)f(objects)g(by)-55
2942 y(non-ne)o(gati)n(v)o(e)13 b(matrix)j(f)o(actorization.)k
Ft(Natur)m(e)p Fw(,)d(401:788\226791,)-55 3042 y(October)i(1999.)p
0 TeXcolorgray -304 3226 a
SDict begin H.S end
 -304 3226 a -180 3226 a
SDict begin 12 H.A end
 -180
3226 a -180 3226 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Martens2011) cvn H.B /DEST pdfmark end
 -180 3226 a 0 TeXcolorgray 42 w Fw(Martens,)35
b(James)f(and)e(Sutsk)o(e)n(v)o(er)m(,)j(Ilya.)69 b(Learning)31
b(recurrent)-55 3326 y(neural)21 b(netw)o(orks)g(with)i(hessian-free)d
(optimization.)34 b(In)22 b Ft(Pr)l(o-)-55 3425 y(ceedings)30
b(of)i(the)f(28th)g(International)e(Confer)m(ence)i(on)g(Ma-)-55
3525 y(c)o(hine)19 b(Learning)h(\(ICML-11\))p Fw(,)e(pp.)i
(1033\2261040,)c(2011.)p 0 TeXcolorgray -304 3710 a
SDict begin H.S end
 -304
3710 a -180 3710 a
SDict begin 12 H.A end
 -180 3710 a -180 3710 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Nam2011) cvn H.B /DEST pdfmark end
 -180 3710
a 0 TeXcolorgray 42 w Fw(Nam,)53 b(J.,)g(,)h(Ngiam,)e(J.,)i(Lee,)f(H.,)
g(and)46 b(Slane)o(y)-5 b(,)52 b(M.)114 b(A)-55 3809
y(classi\002cation-based)31 b(polyphonic)f(piano)i(transcription)f(ap-)
-55 3909 y(proach)h(using)i(learned)f(feature)g(representations.)71
b(In)33 b Ft(12th)-55 4008 y(International)i(Society)i(for)h(Music)f
(Information)f(Retrie)o(val)-55 4108 y(Confer)m(ence)p
Fw(,)28 b(pp.)e(175\226180,)g(Miami,)j(Florida,)f(USA,)f(Octo-)-55
4208 y(ber)20 b(2011.)p 0 TeXcolorgray -304 4392 a
SDict begin H.S end
 -304
4392 a -180 4392 a
SDict begin 12 H.A end
 -180 4392 a -180 4392 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Rabiner1993) cvn H.B /DEST pdfmark end
 -180 4392
a 0 TeXcolorgray 42 w Fw(Rabiner)m(,)27 b(La)o(wrence)d(and)i(Juang,)h
(Biing-Hw)o(ang.)47 b(Fundamen-)-55 4492 y(tals)21 b(of)f(speech)g
(recognition.)26 b(1993.)p 0 TeXcolorgray -304 4676 a
SDict begin H.S end

-304 4676 a -180 4676 a
SDict begin 12 H.A end
 -180 4676 a -180 4676 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Schoerkhuber10) cvn H.B /DEST pdfmark end
 -180
4676 a 0 TeXcolorgray 42 w Fw(Sch)7 b(\250)-35 b(orkhuber)m(,)33
b(C.)i(and)e(Klapuri,)j(A.)73 b(Constant-Q)33 b(transform)-55
4776 y(toolbox)24 b(for)h(music)h(processing.)45 b(In)26
b Ft(7th)f(Sound)f(and)h(Music)-55 4875 y(Computing)19
b(Conf)o(.)p Fw(,)g(Barcelona,)g(Spain,)h(July)g(2010.)p
0 TeXcolorgray -304 5060 a
SDict begin H.S end
 -304 5060 a -180 5060 a
SDict begin 12 H.A end
 -180
5060 a -180 5060 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Senturk2013) cvn H.B /DEST pdfmark end
 -180 5060 a 0 TeXcolorgray 42 w Fw(Sent)7
b(\250)-35 b(urk,)21 b(Sertan,)i(Gulati,)f(Sankalp,)g(and)g(Serra,)g
(Xa)n(vier)-5 b(.)36 b(Score)-55 5160 y(informed)15 b(tonic)i
(identi\002cation)f(for)g(makam)h(music)g(of)g(turk)o(e)o(y)-5
b(.)-55 5259 y(In)17 b Ft(14th)e(Int.)i(Soc.)f(for)h(Music)g(Info.)f
(Retrie)o(val)g(Conf)o(.)h(Curitiba,)-55 5359 y(Br)o(azil.\(to)j
(appear\))p Fw(,)e(v)n(olume)h(195,)g(pp.)h(206,)f(2013.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1796 42
a
SDict begin H.S end
 1796 42 a 1920 42 a
SDict begin 12 H.A end
 1920 42 a 1920 42 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Shashanka2008) cvn H.B /DEST pdfmark end
 1920 42 a 0
TeXcolorgray 42 w Fw(Shashanka,)f(M.,)i(Raj,)g(B.,)g(and)f(Smaragdis,)f
(P)-9 b(.)29 b(Probabilistic)18 b(la-)2045 141 y(tent)f(v)n(ariable)f
(models)h(as)g(nonne)o(gati)n(v)o(e)d(f)o(actorizations.)21
b Ft(Com-)2045 241 y(putational)f(Intellig)o(ence)g(and)h(Neur)l
(oscience)p Fw(,)g(2008.)32 b(Article)2045 341 y(ID)20
b(947438.)p 0 TeXcolorgray 1796 507 a
SDict begin H.S end
 1796 507 a 1920
507 a
SDict begin 12 H.A end
 1920 507 a 1920 507 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Smaragdis2009) cvn H.B /DEST pdfmark end
 1920 507 a 0 TeXcolorgray
42 w Fw(Smaragdis,)k(P)-9 b(.)24 b(and)g(Mysore,)g(G.)42
b(Separation)23 b(by)h(\223humming\224:)2045 606 y(user)n(-guided)40
b(sound)h(e)o(xtraction)g(from)g(monophonic)e(mix-)2045
706 y(tures.)29 b(pp.)20 b(69\22672,)e(October)h(2009.)p
0 TeXcolorgray 1796 872 a
SDict begin H.S end
 1796 872 a 1920 872 a
SDict begin 12 H.A end
 1920
872 a 1920 872 a
SDict begin [ /View [/FitH -32768] /Dest (cite.Smaragdis2006) cvn H.B /DEST pdfmark end
 1920 872 a 0 TeXcolorgray 42 w Fw(Smaragdis,)24
b(P)-9 b(.,)25 b(Raj,)h(B.,)g(and)d(Shashanka,)h(Ma.)42
b(A)24 b(probabilis-)2045 972 y(tic)f(latent)e(v)n(ariable)g(model)g
(for)h(acoustic)f(modeling.)33 b(In)22 b Ft(Neu-)2045
1071 y(r)o(al)c(Information)f(Pr)l(ocessing)g(Systems)i(W)-8
b(orkshop)p Fw(,)18 b(Whistler)m(,)2045 1171 y(Canada,)i(December)e
(2006.)p 0 TeXcolorgray 1796 1337 a
SDict begin H.S end
 1796 1337 a 1920
1337 a
SDict begin 12 H.A end
 1920 1337 a 1920 1337 a
SDict begin [ /View [/FitH -32768] /Dest (cite.sutskever2008recurrent) cvn H.B /DEST pdfmark end
 1920 1337 a 0 TeXcolorgray
42 w Fw(Sutsk)o(e)n(v)o(er)m(,)48 b(Ilya,)i(Hinton,)f(Geof)n(fre)o(y)42
b(E,)i(and)f(T)-7 b(aylor)m(,)49 b(Gra-)2045 1437 y(ham)34
b(W)-8 b(.)75 b(The)34 b(recurrent)f(temporal)g(restricted)g(boltzmann)
2045 1536 y(machine.)54 b(In)28 b Ft(Advances)f(in)h(Neur)o(al)h
(Information)d(Pr)l(ocess-)2045 1636 y(ing)20 b(Systems)p
Fw(,)g(pp.)g(1601\2261608,)c(2008.)p 0 TeXcolorgray 1796
1802 a
SDict begin H.S end
 1796 1802 a 1920 1802 a
SDict begin 12 H.A end
 1920 1802 a 1920 1802
a
SDict begin [ /View [/FitH -32768] /Dest (cite.Werbos1990) cvn H.B /DEST pdfmark end
 1920 1802 a 0 TeXcolorgray 42 w Fw(W)-7 b(erbos,)34
b(P)o(aul)d(J.)65 b(Backpropagation)28 b(through)h(time:)48
b(what)31 b(it)2045 1902 y(does)20 b(and)g(ho)n(w)f(to)i(do)f(it.)29
b Ft(Pr)l(oceedings)20 b(of)g(the)g(IEEE)p Fw(,)g(78\(10\):)2045
2001 y(1550\2261560,)c(1990.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
